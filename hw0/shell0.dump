
shellc0de：     檔案格式 elf64-x86-64


Disassembly of section .init:

00000000000006e8 <_init>:
 6e8:	48 83 ec 08          	sub    $0x8,%rsp
 6ec:	48 8b 05 f5 08 20 00 	mov    0x2008f5(%rip),%rax        # 200fe8 <__gmon_start__>
 6f3:	48 85 c0             	test   %rax,%rax
 6f6:	74 02                	je     6fa <_init+0x12>
 6f8:	ff d0                	callq  *%rax
 6fa:	48 83 c4 08          	add    $0x8,%rsp
 6fe:	c3                   	retq   

Disassembly of section .plt:

0000000000000700 <.plt>:
 700:	ff 35 92 08 20 00    	pushq  0x200892(%rip)        # 200f98 <_GLOBAL_OFFSET_TABLE_+0x8>
 706:	ff 25 94 08 20 00    	jmpq   *0x200894(%rip)        # 200fa0 <_GLOBAL_OFFSET_TABLE_+0x10>
 70c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000710 <_exit@plt>:
 710:	ff 25 92 08 20 00    	jmpq   *0x200892(%rip)        # 200fa8 <_exit@GLIBC_2.2.5>
 716:	68 00 00 00 00       	pushq  $0x0
 71b:	e9 e0 ff ff ff       	jmpq   700 <.plt>

0000000000000720 <puts@plt>:
 720:	ff 25 8a 08 20 00    	jmpq   *0x20088a(%rip)        # 200fb0 <puts@GLIBC_2.2.5>
 726:	68 01 00 00 00       	pushq  $0x1
 72b:	e9 d0 ff ff ff       	jmpq   700 <.plt>

0000000000000730 <__stack_chk_fail@plt>:
 730:	ff 25 82 08 20 00    	jmpq   *0x200882(%rip)        # 200fb8 <__stack_chk_fail@GLIBC_2.4>
 736:	68 02 00 00 00       	pushq  $0x2
 73b:	e9 c0 ff ff ff       	jmpq   700 <.plt>

0000000000000740 <memset@plt>:
 740:	ff 25 7a 08 20 00    	jmpq   *0x20087a(%rip)        # 200fc0 <memset@GLIBC_2.2.5>
 746:	68 03 00 00 00       	pushq  $0x3
 74b:	e9 b0 ff ff ff       	jmpq   700 <.plt>

0000000000000750 <read@plt>:
 750:	ff 25 72 08 20 00    	jmpq   *0x200872(%rip)        # 200fc8 <read@GLIBC_2.2.5>
 756:	68 04 00 00 00       	pushq  $0x4
 75b:	e9 a0 ff ff ff       	jmpq   700 <.plt>

0000000000000760 <setvbuf@plt>:
 760:	ff 25 6a 08 20 00    	jmpq   *0x20086a(%rip)        # 200fd0 <setvbuf@GLIBC_2.2.5>
 766:	68 05 00 00 00       	pushq  $0x5
 76b:	e9 90 ff ff ff       	jmpq   700 <.plt>

Disassembly of section .plt.got:

0000000000000770 <.plt.got>:
 770:	ff 25 82 08 20 00    	jmpq   *0x200882(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 776:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000000780 <_start>:
 780:	31 ed                	xor    %ebp,%ebp
 782:	49 89 d1             	mov    %rdx,%r9
 785:	5e                   	pop    %rsi
 786:	48 89 e2             	mov    %rsp,%rdx
 789:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 78d:	50                   	push   %rax
 78e:	54                   	push   %rsp
 78f:	4c 8d 05 da 02 00 00 	lea    0x2da(%rip),%r8        # a70 <__libc_csu_fini>
 796:	48 8d 0d 63 02 00 00 	lea    0x263(%rip),%rcx        # a00 <__libc_csu_init>
 79d:	48 8d 3d 47 01 00 00 	lea    0x147(%rip),%rdi        # 8eb <main>
 7a4:	ff 15 36 08 20 00    	callq  *0x200836(%rip)        # 200fe0 <__libc_start_main@GLIBC_2.2.5>
 7aa:	f4                   	hlt    
 7ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000007b0 <deregister_tm_clones>:
 7b0:	48 8d 3d 59 08 20 00 	lea    0x200859(%rip),%rdi        # 201010 <__TMC_END__>
 7b7:	55                   	push   %rbp
 7b8:	48 8d 05 51 08 20 00 	lea    0x200851(%rip),%rax        # 201010 <__TMC_END__>
 7bf:	48 39 f8             	cmp    %rdi,%rax
 7c2:	48 89 e5             	mov    %rsp,%rbp
 7c5:	74 19                	je     7e0 <deregister_tm_clones+0x30>
 7c7:	48 8b 05 0a 08 20 00 	mov    0x20080a(%rip),%rax        # 200fd8 <_ITM_deregisterTMCloneTable>
 7ce:	48 85 c0             	test   %rax,%rax
 7d1:	74 0d                	je     7e0 <deregister_tm_clones+0x30>
 7d3:	5d                   	pop    %rbp
 7d4:	ff e0                	jmpq   *%rax
 7d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 7dd:	00 00 00 
 7e0:	5d                   	pop    %rbp
 7e1:	c3                   	retq   
 7e2:	0f 1f 40 00          	nopl   0x0(%rax)
 7e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 7ed:	00 00 00 

00000000000007f0 <register_tm_clones>:
 7f0:	48 8d 3d 19 08 20 00 	lea    0x200819(%rip),%rdi        # 201010 <__TMC_END__>
 7f7:	48 8d 35 12 08 20 00 	lea    0x200812(%rip),%rsi        # 201010 <__TMC_END__>
 7fe:	55                   	push   %rbp
 7ff:	48 29 fe             	sub    %rdi,%rsi
 802:	48 89 e5             	mov    %rsp,%rbp
 805:	48 c1 fe 03          	sar    $0x3,%rsi
 809:	48 89 f0             	mov    %rsi,%rax
 80c:	48 c1 e8 3f          	shr    $0x3f,%rax
 810:	48 01 c6             	add    %rax,%rsi
 813:	48 d1 fe             	sar    %rsi
 816:	74 18                	je     830 <register_tm_clones+0x40>
 818:	48 8b 05 d1 07 20 00 	mov    0x2007d1(%rip),%rax        # 200ff0 <_ITM_registerTMCloneTable>
 81f:	48 85 c0             	test   %rax,%rax
 822:	74 0c                	je     830 <register_tm_clones+0x40>
 824:	5d                   	pop    %rbp
 825:	ff e0                	jmpq   *%rax
 827:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 82e:	00 00 
 830:	5d                   	pop    %rbp
 831:	c3                   	retq   
 832:	0f 1f 40 00          	nopl   0x0(%rax)
 836:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 83d:	00 00 00 

0000000000000840 <__do_global_dtors_aux>:
 840:	80 3d 01 08 20 00 00 	cmpb   $0x0,0x200801(%rip)        # 201048 <completed.7697>
 847:	75 2f                	jne    878 <__do_global_dtors_aux+0x38>
 849:	48 83 3d a7 07 20 00 	cmpq   $0x0,0x2007a7(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 850:	00 
 851:	55                   	push   %rbp
 852:	48 89 e5             	mov    %rsp,%rbp
 855:	74 0c                	je     863 <__do_global_dtors_aux+0x23>
 857:	48 8b 3d aa 07 20 00 	mov    0x2007aa(%rip),%rdi        # 201008 <__dso_handle>
 85e:	e8 0d ff ff ff       	callq  770 <.plt.got>
 863:	e8 48 ff ff ff       	callq  7b0 <deregister_tm_clones>
 868:	c6 05 d9 07 20 00 01 	movb   $0x1,0x2007d9(%rip)        # 201048 <completed.7697>
 86f:	5d                   	pop    %rbp
 870:	c3                   	retq   
 871:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 878:	f3 c3                	repz retq 
 87a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000880 <frame_dummy>:
 880:	55                   	push   %rbp
 881:	48 89 e5             	mov    %rsp,%rbp
 884:	5d                   	pop    %rbp
 885:	e9 66 ff ff ff       	jmpq   7f0 <register_tm_clones>

000000000000088a <init>:
 88a:	55                   	push   %rbp
 88b:	48 89 e5             	mov    %rsp,%rbp
 88e:	48 8b 05 9b 07 20 00 	mov    0x20079b(%rip),%rax        # 201030 <stdin@@GLIBC_2.2.5>
 895:	b9 00 00 00 00       	mov    $0x0,%ecx
 89a:	ba 02 00 00 00       	mov    $0x2,%edx
 89f:	be 00 00 00 00       	mov    $0x0,%esi
 8a4:	48 89 c7             	mov    %rax,%rdi
 8a7:	e8 b4 fe ff ff       	callq  760 <setvbuf@plt>
 8ac:	48 8b 05 6d 07 20 00 	mov    0x20076d(%rip),%rax        # 201020 <stdout@@GLIBC_2.2.5>
 8b3:	b9 00 00 00 00       	mov    $0x0,%ecx
 8b8:	ba 02 00 00 00       	mov    $0x2,%edx
 8bd:	be 00 00 00 00       	mov    $0x0,%esi
 8c2:	48 89 c7             	mov    %rax,%rdi
 8c5:	e8 96 fe ff ff       	callq  760 <setvbuf@plt>
 8ca:	48 8b 05 6f 07 20 00 	mov    0x20076f(%rip),%rax        # 201040 <stderr@@GLIBC_2.2.5>
 8d1:	b9 00 00 00 00       	mov    $0x0,%ecx
 8d6:	ba 02 00 00 00       	mov    $0x2,%edx
 8db:	be 00 00 00 00       	mov    $0x0,%esi
 8e0:	48 89 c7             	mov    %rax,%rdi
 8e3:	e8 78 fe ff ff       	callq  760 <setvbuf@plt>
 8e8:	90                   	nop
 8e9:	5d                   	pop    %rbp
 8ea:	c3                   	retq   

00000000000008eb <main>:
 8eb:	55                   	push   %rbp
 8ec:	48 89 e5             	mov    %rsp,%rbp
 8ef:	48 81 ec 20 01 00 00 	sub    $0x120,%rsp
 8f6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
 8fd:	00 00 
 8ff:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 903:	31 c0                	xor    %eax,%eax
 905:	b8 00 00 00 00       	mov    $0x0,%eax
 90a:	e8 7b ff ff ff       	callq  88a <init>
 90f:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
 916:	ba 00 01 00 00       	mov    $0x100,%edx
 91b:	be cc 00 00 00       	mov    $0xcc,%esi
 920:	48 89 c7             	mov    %rax,%rdi
 923:	e8 18 fe ff ff       	callq  740 <memset@plt>
 928:	48 8d 3d 55 01 00 00 	lea    0x155(%rip),%rdi        # a84 <_IO_stdin_used+0x4>
 92f:	e8 ec fd ff ff       	callq  720 <puts@plt>
 934:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
 93b:	ba 00 01 00 00       	mov    $0x100,%edx
 940:	48 89 c6             	mov    %rax,%rsi
 943:	bf 00 00 00 00       	mov    $0x0,%edi
 948:	e8 03 fe ff ff       	callq  750 <read@plt>
 94d:	c7 85 e4 fe ff ff 00 	movl   $0x0,-0x11c(%rbp)
 954:	00 00 00 
 957:	eb 59                	jmp    9b2 <main+0xc7>
 959:	8b 85 e4 fe ff ff    	mov    -0x11c(%rbp),%eax
 95f:	48 98                	cltq   
 961:	0f b6 84 05 f0 fe ff 	movzbl -0x110(%rbp,%rax,1),%eax
 968:	ff 
 969:	84 c0                	test   %al,%al
 96b:	74 28                	je     995 <main+0xaa>
 96d:	8b 85 e4 fe ff ff    	mov    -0x11c(%rbp),%eax
 973:	48 98                	cltq   
 975:	0f b6 84 05 f0 fe ff 	movzbl -0x110(%rbp,%rax,1),%eax
 97c:	ff 
 97d:	3c 05                	cmp    $0x5,%al
 97f:	74 14                	je     995 <main+0xaa>
 981:	8b 85 e4 fe ff ff    	mov    -0x11c(%rbp),%eax
 987:	48 98                	cltq   
 989:	0f b6 84 05 f0 fe ff 	movzbl -0x110(%rbp,%rax,1),%eax
 990:	ff 
 991:	3c 0f                	cmp    $0xf,%al
 993:	75 16                	jne    9ab <main+0xc0>
 995:	48 8d 3d f4 00 00 00 	lea    0xf4(%rip),%rdi        # a90 <_IO_stdin_used+0x10>
 99c:	e8 7f fd ff ff       	callq  720 <puts@plt>
 9a1:	bf ff ff ff ff       	mov    $0xffffffff,%edi
 9a6:	e8 65 fd ff ff       	callq  710 <_exit@plt>
 9ab:	83 85 e4 fe ff ff 01 	addl   $0x1,-0x11c(%rbp)
 9b2:	81 bd e4 fe ff ff ff 	cmpl   $0xff,-0x11c(%rbp)
 9b9:	00 00 00 
 9bc:	7e 9b                	jle    959 <main+0x6e>
 9be:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
 9c5:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
 9cc:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
 9d3:	b8 00 00 00 00       	mov    $0x0,%eax
 9d8:	ff d2                	callq  *%rdx
 9da:	b8 00 00 00 00       	mov    $0x0,%eax
 9df:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 9e3:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
 9ea:	00 00 
 9ec:	74 05                	je     9f3 <main+0x108>
 9ee:	e8 3d fd ff ff       	callq  730 <__stack_chk_fail@plt>
 9f3:	c9                   	leaveq 
 9f4:	c3                   	retq   
 9f5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 9fc:	00 00 00 
 9ff:	90                   	nop

0000000000000a00 <__libc_csu_init>:
 a00:	41 57                	push   %r15
 a02:	41 56                	push   %r14
 a04:	49 89 d7             	mov    %rdx,%r15
 a07:	41 55                	push   %r13
 a09:	41 54                	push   %r12
 a0b:	4c 8d 25 7e 03 20 00 	lea    0x20037e(%rip),%r12        # 200d90 <__frame_dummy_init_array_entry>
 a12:	55                   	push   %rbp
 a13:	48 8d 2d 7e 03 20 00 	lea    0x20037e(%rip),%rbp        # 200d98 <__init_array_end>
 a1a:	53                   	push   %rbx
 a1b:	41 89 fd             	mov    %edi,%r13d
 a1e:	49 89 f6             	mov    %rsi,%r14
 a21:	4c 29 e5             	sub    %r12,%rbp
 a24:	48 83 ec 08          	sub    $0x8,%rsp
 a28:	48 c1 fd 03          	sar    $0x3,%rbp
 a2c:	e8 b7 fc ff ff       	callq  6e8 <_init>
 a31:	48 85 ed             	test   %rbp,%rbp
 a34:	74 20                	je     a56 <__libc_csu_init+0x56>
 a36:	31 db                	xor    %ebx,%ebx
 a38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 a3f:	00 
 a40:	4c 89 fa             	mov    %r15,%rdx
 a43:	4c 89 f6             	mov    %r14,%rsi
 a46:	44 89 ef             	mov    %r13d,%edi
 a49:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 a4d:	48 83 c3 01          	add    $0x1,%rbx
 a51:	48 39 dd             	cmp    %rbx,%rbp
 a54:	75 ea                	jne    a40 <__libc_csu_init+0x40>
 a56:	48 83 c4 08          	add    $0x8,%rsp
 a5a:	5b                   	pop    %rbx
 a5b:	5d                   	pop    %rbp
 a5c:	41 5c                	pop    %r12
 a5e:	41 5d                	pop    %r13
 a60:	41 5e                	pop    %r14
 a62:	41 5f                	pop    %r15
 a64:	c3                   	retq   
 a65:	90                   	nop
 a66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 a6d:	00 00 00 

0000000000000a70 <__libc_csu_fini>:
 a70:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000000a74 <_fini>:
 a74:	48 83 ec 08          	sub    $0x8,%rsp
 a78:	48 83 c4 08          	add    $0x8,%rsp
 a7c:	c3                   	retq   
