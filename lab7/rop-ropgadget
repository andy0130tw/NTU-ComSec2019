Gadgets information
============================================================
0x000000000043d6af : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d719 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004af448 : adc al, 0 ; add byte ptr [rax], al ; adc byte ptr [rax + rax], bh ; add al, dh ; ret 0xfff7
0x000000000048d21d : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000047e00a : adc al, 0 ; add byte ptr [rax], al ; syscall
0x00000000004275c8 : adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004accf1 : adc al, 0 ; add byte ptr [rsp - 0xa], ch ; jmp rdx
0x000000000042daf5 : adc al, 0x13 ; jmp rdx
0x0000000000425db5 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000048cf3a : adc al, 0x24 ; mov edi, 1 ; call rax
0x000000000040e8d1 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000444a80 : adc al, 0x48 ; lea eax, [rdi + 0x14] ; ret
0x0000000000471ea8 : adc al, 0x90 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000043eb40 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043d26e : adc al, 0x91 ; sub eax, edx ; ret
0x000000000042daf1 : adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000040d280 : adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x00000000004b5050 : adc al, 0x98 ; add byte ptr [rax], al ; pushfq ; std ; jmp rsp
0x00000000004249b7 : adc al, 0xa ; jmp r10
0x0000000000425f23 : adc al, 0xa ; sub eax, edx ; ret
0x0000000000446fff : adc al, 0xe ; cmp rdi, rdx ; jb 0x447012 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000042a39a : adc al, 0xe ; sub eax, edx ; ret
0x000000000042c06a : adc al, 0xe ; sub eax, edx ; vzeroupper ; ret
0x0000000000403f6f : adc al, 0xf ; retf 0xfa83
0x0000000000412a2b : adc al, 0xf6 ; ret 0x7420
0x000000000048d2bd : adc al, 0xf7 ; ret
0x0000000000494559 : adc al, 0xfa ; call qword ptr [rax + 0x20fffa13]
0x0000000000494615 : adc al, 0xfa ; call rdx
0x0000000000494595 : adc al, 0xfa ; jmp rsi
0x00000000004b3009 : adc al, 0xfc ; jmp qword ptr [rax]
0x00000000004245d6 : adc al, 1 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004944c0 : adc al, ah ; stc ; jmp rax
0x0000000000495130 : adc al, bh ; cli ; jmp qword ptr [rax]
0x000000000048cb8d : adc al, bh ; dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x000000000043d857 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d8c1 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000428f78 : adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000494834 : adc al, byte ptr [rdi] ; cli ; call qword ptr [rdx + 0x12fffa06]
0x00000000004b0d10 : adc bh, bh ; stc ; call qword ptr [rax]
0x000000000042491a : adc bh, byte ptr [rbx + 0xf480001] ; ret 0x66c3
0x0000000000493f69 : adc bh, cl ; call rax
0x0000000000494625 : adc bh, dl ; call qword ptr [rdx]
0x0000000000494569 : adc bh, dl ; call rax
0x0000000000494565 : adc bh, dl ; inc dword ptr [rax + 0x12] ; cli ; call rax
0x00000000004945a5 : adc bh, dl ; jmp qword ptr [rsi]
0x0000000000494765 : adc bh, dl ; jmp rax
0x0000000000440f45 : adc bl, ch ; call 0xffffffffc414989a
0x0000000000440e65 : adc bl, ch ; call 0xffffffffc43c97ba
0x0000000000482e62 : adc bl, ch ; jno 0x482eb8 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004950d8 : adc bl, dh ; cli ; jmp qword ptr [rax]
0x00000000004443b6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000444427 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000444387 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000004443b5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000047f2da : adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x00000000004192b5 : adc byte ptr [r11 + 0x5d], r11b ; ret
0x00000000004838ce : adc byte ptr [r15], cl ; sahf ; ret 0x3948
0x000000000045c069 : adc byte ptr [r15], cl ; sahf ; ret 0x894c
0x00000000004840e3 : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3949
0x000000000045b285 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3948
0x000000000045ba66 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x0000000000481dbf : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000004116b2 : adc byte ptr [r8 + 1], r9b ; ret
0x000000000041889f : adc byte ptr [r8 - 0x77], r9b ; ret 0xf8b
0x000000000047c3df : adc byte ptr [r8 - 0x7d], cl ; ret
0x00000000004116dd : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000042b2a6 : adc byte ptr [rax + 0x29], cl ; retf 0x860f
0x00000000004441da : adc byte ptr [rax + 0x29], cl ; retf 0x8d4c
0x00000000004840dd : adc byte ptr [rax + 0x39], cl ; ret
0x000000000041eb23 : adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041ae5c : adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000041b1d8 : adc byte ptr [rax + 0x39], cl ; ret 0xb277
0x0000000000423b16 : adc byte ptr [rax + 0x39], cl ; ret 0xf475
0x0000000000481dc0 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x000000000041312e : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004116b3 : adc byte ptr [rax + 1], cl ; ret
0x0000000000410ab7 : adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000048a21a : adc byte ptr [rax + 1], cl ; retf 0x42f6
0x000000000044b017 : adc byte ptr [rax + 9], cl ; retf 0x8948
0x00000000004af44c : adc byte ptr [rax + rax], bh ; add al, dh ; ret 0xfff7
0x0000000000400e7e : adc byte ptr [rax - 0x39], cl ; ret 0
0x0000000000492960 : adc byte ptr [rax - 0x50210009], dh ; idiv edi ; retf
0x0000000000475b15 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000415913 : adc byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rax + 0x39] ; retf
0x0000000000488dbf : adc byte ptr [rax - 0x75], cl ; cmp cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x0000000000409559 : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call 0x406068
0x000000000041cabd : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call rcx
0x000000000044c105 : adc byte ptr [rax - 0x77], cl ; and sil, al ; sub byte ptr [rcx], al ; ret
0x0000000000458988 : adc byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000470b37 : adc byte ptr [rax - 0x77], cl ; jo 0x470b55 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000470af7 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000470afb : adc byte ptr [rax - 0x77], cl ; ret
0x00000000004222cf : adc byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000041de91 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4c
0x00000000004188a0 : adc byte ptr [rax - 0x77], cl ; ret 0xf8b
0x0000000000470f60 : adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x000000000041707f : adc byte ptr [rax - 0x78], al ; jl 0x4170a1 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000411503 : adc byte ptr [rax - 0x7b], cl ; push qword ptr [rsp + rcx - 0x18] ; ret 0xec
0x0000000000441127 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000441163 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000401050 : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000419953 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000455668 : adc byte ptr [rax - 0x7d], cl ; ret 0x4902
0x000000000044ac19 : adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x00000000004a4e28 : adc byte ptr [rax - 3], bh ; jmp qword ptr [rbx]
0x0000000000494578 : adc byte ptr [rax], 0xfa ; call qword ptr [rax]
0x000000000047fb69 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jrcxz 0x47fbc1 ; mov esi, ebx ; syscall
0x000000000043d302 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000042a3fa : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8349
0x000000000043ee18 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x000000000043f10c : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043da61 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000449b73 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x00000000004482dc : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000427a48 : adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043b318 : adc byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x00000000004b084c : adc byte ptr [rax], dl ; add byte ptr [rax - 0x26], dl ; stc ; call qword ptr [rax]
0x000000000048e1e8 : adc byte ptr [rbp + 0x13], dh ; xor eax, eax ; ret
0x000000000048b048 : adc byte ptr [rbp + 0x1d], dh ; xor eax, eax ; ret
0x0000000000430424 : adc byte ptr [rbp + 0x39480028], bl ; retf 0x8949
0x000000000045c019 : adc byte ptr [rbp + 0x39], cl ; retf
0x0000000000494298 : adc byte ptr [rbp - 0x490f0007], dh ; stc ; call rax
0x0000000000413d64 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000410923 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004192b6 : adc byte ptr [rbx + 0x5d], bl ; ret
0x00000000004b3aaf : adc byte ptr [rbx + 0x80e5802], al ; ret
0x000000000044c113 : adc byte ptr [rbx - 0x16], dh ; ret
0x000000000044c112 : adc byte ptr [rbx - 0x16], sil ; ret
0x0000000000418482 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000047102e : adc byte ptr [rbx - 0x3b7cb7fa], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000407020 : adc byte ptr [rbx - 0x7bf0fd06], al ; retf 0xe
0x00000000004116de : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x00000000004121e0 : adc byte ptr [rcx + 0x39], al ; retf 0xea77
0x00000000004b494c : adc byte ptr [rcx + 0x5a00000], dl ; std ; jmp rdx
0x0000000000472133 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000004941f4 : adc byte ptr [rcx + rdi*8 - 0x64a0f01], dh ; call rax
0x0000000000494280 : adc byte ptr [rcx - 0x451f0007], bh ; stc ; jmp rax
0x000000000044b082 : adc byte ptr [rcx - 0x75], cl ; add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x000000000048ac4f : adc byte ptr [rcx - 0x77], cl ; ret
0x000000000048aa7e : adc byte ptr [rcx - 0x77], cl ; retf 0xc148
0x000000000044aaa1 : adc byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; retf 0x4901
0x0000000000419207 : adc byte ptr [rcx - 0x7d], al ; ret
0x0000000000482cb4 : adc byte ptr [rcx - 0x7d], cl ; in eax, dx ; or byte ptr [rax + 0x39], cl ; retf
0x000000000045c001 : adc byte ptr [rcx - 0x7d], cl ; ret
0x000000000042a42d : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000048271a : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000448c39 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000485360 : adc byte ptr [rcx], bh ; retf 0x557f
0x0000000000418485 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000412027 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004941cc : adc byte ptr [rdi - 0x4da70007], 0xf9 ; jmp qword ptr [rax]
0x0000000000494310 : adc byte ptr [rdi - 0x643f0007], 0xf9 ; call qword ptr [rax]
0x0000000000403f5f : adc byte ptr [rdi], cl ; retf 0xd289
0x00000000004838cf : adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x000000000045c06a : adc byte ptr [rdi], cl ; sahf ; ret 0x894c
0x0000000000444c93 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000042a811 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a901 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a721 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042b169 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000042acc1 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000042a451 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000042aea1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a631 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000042b081 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042af91 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a8d3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a9c3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a7e3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a541 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000042a6f3 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a513 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a603 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a423 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000045b286 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x000000000045ba67 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x000000000044a009 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x0000000000483f91 : adc byte ptr [rdi], r9b ; sahf ; ret 0x3948
0x00000000004832cd : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x00000000004ad15b : adc byte ptr [rdx + 0xe], al ; or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rbx + 0xa] ; ret
0x000000000042dfe9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000494fa4 : adc byte ptr [rdx - 6], dl ; jmp qword ptr [rax]
0x00000000004afa4c : adc byte ptr [rdx], al ; add byte ptr [rax], dh ; test cl, bh ; call qword ptr [rbx]
0x000000000042cf2b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000446c2f : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x000000000042cdda : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000042c3d5 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042c7d5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42c7a9
0x000000000042c853 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42c827
0x000000000042cce5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42ccb9
0x000000000042cd63 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42cd37
0x000000000042c7d0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42c7ae
0x000000000042c84e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42c82c
0x000000000042cce0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42ccbe
0x000000000042cd5e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42cd3c
0x0000000000424b05 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000043902b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000004942fc : adc byte ptr [rsi - 0x47ff0007], dh ; stc ; call rax
0x00000000004244fa : adc ch, byte ptr [rbp] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000415916 : adc cl, byte ptr [rax + 0x39] ; retf
0x000000000045d54f : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x6c] ; ret 0x4c40
0x000000000044c6ca : adc cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000440e55 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x000000000049482c : adc cl, byte ptr [rax] ; cli ; call qword ptr [rdx + 0x12fffa07]
0x000000000045d552 : adc cl, byte ptr [rbx + rcx*4 + 0x6c] ; ret 0x4c40
0x0000000000485f9a : adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000045c325 : adc cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000494824 : adc cl, byte ptr [rcx] ; cli ; call qword ptr [rdx + 0x12fffa08]
0x00000000004940b4 : adc cl, byte ptr [rdi - 0x701d0007] ; stc ; jmp rdx
0x000000000049481c : adc cl, byte ptr [rdx] ; cli ; call qword ptr [rdx + 0x12fffa09]
0x00000000004ab769 : adc dh, bh ; call rax
0x00000000004ab765 : adc dh, bh ; inc ebp ; adc dh, bh ; call rax
0x000000000041c50e : adc dh, dh ; ret 0xf0f
0x0000000000494568 : adc dil, dl ; call rax
0x0000000000494579 : adc dl, bh ; call qword ptr [rax]
0x0000000000494775 : adc dl, bh ; jmp qword ptr [rax]
0x0000000000494639 : adc dl, bh ; jmp rdx
0x000000000049509c : adc dl, dh ; cli ; jmp qword ptr [rax]
0x00000000004700ab : adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x000000000045ac2d : adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x00000000004116cf : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000048ac9f : adc dword ptr [rax - 0x77], ecx ; retf
0x000000000040516f : adc dword ptr [rax - 0x7d], ecx ; ret
0x00000000004716c4 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4110
0x000000000043f10b : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x000000000043d9f7 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f00f : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004278c8 : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045b295 : adc dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; call qword ptr [rbx]
0x0000000000447258 : adc dword ptr [rbx], eax ; ret
0x00000000004471d1 : adc dword ptr [rbx], esp ; ret
0x0000000000438957 : adc dword ptr [rcx + 7], edi ; ret
0x00000000004471cc : adc dword ptr [rcx - 0x30], eax ; movups xmmword ptr [r11], xmm4 ; ret
0x0000000000489906 : adc dword ptr [rcx - 0x7d], ecx ; ret
0x00000000004385f2 : adc dword ptr [rcx - 1], ebx ; ret
0x00000000004385b6 : adc dword ptr [rcx - 1], edi ; ret
0x000000000046f4ae : adc dword ptr [rcx], eax ; clc ; mov rdx, r8 ; jmp 0x46f484
0x0000000000460e99 : adc dword ptr [rdi + 0x25], 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000447253 : adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000446fb3 : adc dword ptr [rdi + rdx - 0x10], ecx ; ret
0x0000000000447135 : adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x000000000044713a : adc dword ptr [rdi + rdx - 0x20], ebx ; ret
0x0000000000447112 : adc dword ptr [rdi + rdx - 0x30], esi ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x0000000000447117 : adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x0000000000438ab9 : adc dword ptr [rdi - 8], edi ; ret
0x0000000000446fb0 : adc dword ptr [rdi], eax ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000451212 : adc dword ptr [rdi], ecx ; retf 0xd285
0x0000000000446dac : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x0000000000479efe : adc dword ptr [rip + 0x20000003], 0x75 ; retf 0x5f6
0x0000000000446edf : adc dword ptr [rsi + 3], edx ; ret
0x0000000000446f7c : adc dword ptr [rsi + 7], edx ; ret
0x0000000000446d7e : adc dword ptr [rsi - 1], edx ; ret
0x000000000048aec6 : adc dword ptr [rsp - 0x28], eax ; ret
0x000000000043d9f6 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004245d4 : adc eax, 0x11407 ; cmovne rax, rdx ; ret
0x0000000000423920 : adc eax, 0x1d62b ; cmovne rax, rdx ; ret
0x00000000004247b0 : adc eax, 0x1df4b ; cmovne rax, rdx ; ret
0x0000000000424545 : adc eax, 0x209c6 ; cmovne rax, rdx ; ret
0x00000000004238b9 : adc eax, 0x21332 ; cmovne rax, rdx ; ret
0x000000000045ac09 : adc eax, 0x25feaa ; je 0x45ac20 ; ret
0x000000000044d4e7 : adc eax, 0x26b5cc ; pop rbx ; ret
0x00000000004238f0 : adc eax, 0x272b ; cmovne rax, rdx ; ret
0x00000000004191a4 : adc eax, 0x2a0687 ; ret
0x00000000004a7d04 : adc eax, 0x2f3ffae1 ; retf 0xb51a
0x000000000047444b : adc eax, 0x30 ; cmovne rax, rdx ; ret
0x000000000047bcb2 : adc eax, 0x4000003 ; ret
0x000000000047bc02 : adc eax, 0x4000003 ; xor eax, eax ; ret
0x00000000004239fa : adc eax, 0x50d1 ; cmovne rax, rdx ; ret
0x000000000043d581 : adc eax, 0x83480000 ; ret 0xe910
0x0000000000469705 : adc eax, 0x83fffffd ; ret
0x0000000000478db1 : adc eax, 0x89000003 ; ret 0xe8c0
0x0000000000428c98 : adc eax, 0x894d0000 ; retf
0x0000000000417083 : adc eax, 0xc2834800 ; add dword ptr [rax + 0x39], ecx ; retf 0xee75
0x000000000047491a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000424874 : adc eax, 0xe697 ; cmovne rax, rdx ; ret
0x0000000000424734 : adc eax, 0xe7b7 ; cmovne rax, rdx ; ret
0x0000000000447e04 : adc eax, 0xf880272 ; ret
0x0000000000473d85 : adc eax, 0xfffd4226 ; cmove rax, rdx ; ret
0x000000000043ee6e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000427748 : adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004238bb : adc eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000484449 : adc eax, eax ; ret
0x0000000000484586 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000004a79a5 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x0000000000412d57 : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000475b1c : adc ebx, esi ; ret
0x000000000041729a : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x000000000040ea91 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000457954 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000493f65 : adc ecx, edi ; call qword ptr [rax - 0x2f0006ee]
0x000000000047f17e : adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000047f21b : adc edi, dword ptr [rcx] ; ret 0xc74
0x0000000000493f6d : adc edi, ecx ; call qword ptr [rax]
0x00000000004945a1 : adc edi, edx ; call qword ptr [rsi + 0x26fffa12]
0x00000000004946dd : adc edi, edx ; call rsp
0x00000000004946d9 : adc edi, edx ; inc dword ptr [rbx + rdx - 6] ; call rsp
0x000000000049455d : adc edi, edx ; jmp qword ptr [rax]
0x0000000000494771 : adc edx, edi ; call qword ptr [rax + 0x20fffa10]
0x00000000004945b1 : adc edx, edi ; call rsi
0x00000000004945ad : adc edx, edi ; inc dword ptr [rsi + 0x11] ; cli ; call rsi
0x00000000004945b0 : adc edx, r15d ; call rsi
0x00000000004a8ebe : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000416663 : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000048e05c : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000412a29 : adc esi, dword ptr [rsp + rdx - 0xa] ; ret 0x7420
0x00000000004ab789 : adc esi, edi ; call qword ptr [rcx]
0x00000000004ab781 : adc esi, edi ; jmp qword ptr [rdi]
0x00000000004ab3b9 : adc esi, edi ; jmp rsp
0x00000000004103c0 : adc esi, esi ; ret 0x7520
0x0000000000438956 : adc qword ptr [rcx + 7], rdi ; ret
0x00000000004385f1 : adc qword ptr [rcx - 1], rbx ; ret
0x00000000004385b5 : adc qword ptr [rcx - 1], rdi ; ret
0x0000000000438ab8 : adc qword ptr [rdi - 8], rdi ; ret
0x0000000000446ede : adc qword ptr [rsi + 3], rdx ; ret
0x0000000000446f7b : adc qword ptr [rsi + 7], rdx ; ret
0x0000000000446d7d : adc qword ptr [rsi - 1], rdx ; ret
0x00000000004946dc : adc r15d, edx ; call rsp
0x0000000000484585 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000044822e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000044830b : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000448279 : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004b3fa3 : add ah, bh ; ret 0xfffc
0x00000000004af617 : add ah, bl ; cmp eax, 0x96540000 ; clc ; jmp qword ptr [rsi]
0x00000000004943d4 : add ah, bl ; stc ; jmp rax
0x00000000004a8ee7 : add ah, byte ptr [rbp + rdi - 0x55] ; retf 0xa2fe
0x0000000000446eda : add ah, byte ptr [rdx - 0xf] ; jl 0x446f2f ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004b29ba : add ah, byte ptr [rsi + rcx + 8] ; ret
0x00000000004b1b03 : add ah, ch ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rdx]
0x00000000004ae1d3 : add ah, cl ; sal esi, cl ; call qword ptr [rax]
0x0000000000400a59 : add ah, dh ; nop dword ptr [rax + rax] ; ret
0x00000000004b020f : add ah, dl ; add byte ptr [r8], al ; pushfq ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call rsi
0x00000000004afa0f : add ah, dl ; add byte ptr [r8], al ; sub al, 0x83 ; stc ; jmp rbx
0x00000000004b408b : add ah, dl ; retf 0xfffc
0x0000000000453293 : add al, 0 ; add bh, dh ; ret 0
0x0000000000453287 : add al, 0 ; add bh, dh ; ret 0xf800
0x0000000000456f8f : add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000411250 : add al, 0 ; add byte ptr [rax + 1], cl ; ret
0x00000000004abce5 : add al, 0 ; add byte ptr [rax - 0x6d], bh ; cmc ; call qword ptr [rdx]
0x000000000048c26d : add al, 0 ; add byte ptr [rax - 0x7bf0df06], al ; retf 4
0x000000000042ad87 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046f3c6 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000043fd2f : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042adb5 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048e180 : add al, 0 ; add byte ptr [rax], al ; jne 0x48e1a7 ; ret
0x00000000004749a3 : add al, 0 ; add byte ptr [rax], al ; ret
0x00000000004496cf : add al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000428648 : add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004726c0 : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040a031 : add al, 0 ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000040ac34 : add al, 0 ; add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x0000000000409ef0 : add al, 0 ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x0000000000424525 : add al, 0 ; add byte ptr [rsi - 9], dh ; ret 0
0x000000000044c172 : add al, 0 ; mov eax, 0x15 ; syscall
0x00000000004558ab : add al, 0 ; mov edx, 0x180 ; call 0x401b19
0x0000000000455868 : add al, 0 ; mov edx, 0x19f ; call 0x401b19
0x0000000000455887 : add al, 0 ; mov edx, 0x1be ; call 0x401b19
0x00000000004558d2 : add al, 0 ; mov edx, 0x22f ; call 0x401b19
0x0000000000455012 : add al, 0 ; mov edx, 0x305 ; call 0x401b19
0x0000000000455849 : add al, 0 ; mov edx, 0x309 ; call 0x401b19
0x0000000000449351 : add al, 0 ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x00000000004481d5 : add al, 0 ; movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x0000000000475b1b : add al, 0x11 ; ret
0x00000000004482c4 : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000425db1 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000425d4a : add al, 0x17 ; sub eax, ecx ; ret
0x0000000000486d90 : add al, 0x24 ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000048adc7 : add al, 0x24 ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000048aacb : add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000489cc4 : add al, 0x24 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000045ac6a : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000048439b : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x4843e7 ; leave ; ret
0x000000000040e997 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000041931a : add al, 0x2a ; add bl, dh ; ret
0x0000000000494e04 : add al, 0x2b ; cli ; push qword ptr [rdx + rbp - 6] ; jmp rsp
0x00000000004734ee : add al, 0x31 ; ret
0x00000000004733ea : add al, 0x37 ; ret
0x0000000000417b1f : add al, 0x3a ; ret
0x00000000004a6fc6 : add al, 0x3d ; retf
0x000000000047fa56 : add al, 0x48 ; cmp ecx, dword ptr [rdi + rsi] ; jae 0x47fa0a ; xor eax, eax ; ret
0x00000000004448eb : add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x0000000000443df9 : add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x0000000000443e0b : add al, 0x48 ; lea eax, [rdx + 5] ; ret
0x000000000048d2d0 : add al, 0x48 ; mov dword ptr [rax], edx ; ret
0x00000000004354fa : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000442639 : add al, 0x48 ; mov eax, edi ; ret
0x00000000004737c4 : add al, 0x48 ; xor eax, eax ; ret
0x000000000047e7e6 : add al, 0x4c ; cmp ecx, eax ; jne 0x47e794 ; mov eax, dword ptr [rdx + 4] ; ret
0x0000000000474088 : add al, 0x4c ; lea ecx, [rsp + 0x20] ; call rbx
0x00000000004565ca : add al, 0x4d ; cmp ebp, ebx ; jb 0x456640 ; mov rdx, rax ; jmp 0x456597
0x0000000000443e07 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x0000000000442647 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x0000000000457952 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000453c19 : add al, 0x74 ; and eax, 0x833fe283 ; retf 0x4180
0x000000000047d85a : add al, 0x75 ; retf
0x000000000046eba8 : add al, 0x81 ; add rax, rcx ; jmp rax
0x000000000043d26b : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000043eb43 : add al, 0x81 ; sub eax, edx ; ret
0x0000000000401f67 : add al, 0x82 ; add rax, rdx ; jmp rax
0x0000000000448808 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x4487f8 ; ret
0x000000000043ae77 : add al, 0x82 ; sub eax, ecx ; ret
0x000000000044d5b9 : add al, 0x83 ; add rax, rbx ; jmp rax
0x000000000048c16a : add al, 0x84 ; add rax, r12 ; jmp rax
0x0000000000466cc9 : add al, 0x84 ; ror byte ptr [rdi], 0x84 ; ret 0x17
0x0000000000474479 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x000000000048ca6b : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000046ea3c : add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000048b119 : add al, 0x87 ; add rax, r15 ; jmp rax
0x000000000046f1d8 : add al, 0x87 ; add rax, rdi ; jmp rax
0x0000000000443df6 : add al, 0x88 ; add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x0000000000442636 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x000000000048aef3 : add al, 0x88 ; add rax, r8 ; jmp rax
0x0000000000458036 : add al, 0x89 ; retf
0x0000000000488109 : add al, 0x89 ; retf 0xeac0
0x000000000044880b : add al, 0x8a ; je 0x4487f5 ; ret
0x0000000000448293 : add al, 0x96 ; add rax, rsi ; jmp rax
0x000000000048c6a3 : add al, 0x99 ; add rax, r9 ; jmp rax
0x0000000000449355 : add al, 0x9a ; add rax, rdx ; jmp rax
0x000000000047c1ff : add al, 0xa1 ; add rax, rcx ; jmp rax
0x000000000047cb27 : add al, 0xa7 ; add rax, rdi ; jmp rax
0x00000000004171a7 : add al, 0xa8 ; add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x00000000004481d9 : add al, 0xbe ; add rax, rsi ; jmp rax
0x000000000046bda0 : add al, 0xc6 ; jmp rax
0x0000000000460f3a : add al, 0xc6 ; mov esi, 1 ; jmp rax
0x000000000046159a : add al, 0xc6 ; xor esi, esi ; jmp rax
0x0000000000460ef0 : add al, 0xc7 ; jmp rax
0x000000000046bddb : add al, 0xc8 ; mov ecx, 1 ; jmp rax
0x0000000000459241 : add al, 0xe8 ; test rax, rax ; je 0x459251 ; call rax
0x0000000000454f20 : add al, 0xe9 ; cmp eax, 0x89fffff3 ; retf 0xe283
0x00000000004659fd : add al, 0xe9 ; retf 0xfffb
0x000000000045695c : add al, 0xf ; mov dh, 0x40 ; add ecx, dword ptr [rax + 0x39] ; retf
0x0000000000484d88 : add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042a396 : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x00000000004049ba : add al, 0xf ; retf
0x0000000000446ceb : add al, 0xf ; sub rax, rsi ; ret
0x0000000000435863 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000004499cb : add al, 0xf3 ; ret
0x00000000004609ae : add al, 0xf8 ; jmp rax
0x00000000004947c9 : add al, 0xfa ; call qword ptr [rax]
0x0000000000494849 : add al, 0xfa ; jmp rdx
0x00000000004b2e21 : add al, 0xfc ; jmp rdx
0x00000000004ab305 : add al, 0xfe ; jmp rsp
0x000000000040efb7 : add al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042d637 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004634e8 : add al, 4 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x0000000000463511 : add al, 4 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x3e8
0x000000000044025d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000046bd9c : add al, 7 ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000440478 : add al, 7 ; ret
0x0000000000425f1f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000004b2e1f : add al, ah ; add al, 0xfc ; jmp rdx
0x00000000004b2e1b : add al, ah ; jne 0x4b2e27 ; add al, ah ; add al, 0xfc ; jmp rdx
0x000000000049f1c7 : add al, al ; sldt word ptr [rax] ; ret
0x000000000049512c : add al, bh ; cli ; call qword ptr [rax]
0x0000000000448325 : add al, bh ; jg 0x448327 ; int1 ; mov eax, eax ; ret
0x00000000004afe67 : add al, bl ; xchg eax, edi ; stc ; jmp qword ptr [rcx]
0x000000000040d752 : add al, byte ptr [eax] ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x0000000000440e51 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x000000000040104b : add al, byte ptr [rax] ; add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000045565a : add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; retf 0x8341
0x000000000045528d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000047b060 : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x000000000041e03d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; retf 0x820f
0x000000000045f833 : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000042b292 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000004881be : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret 0x3a83
0x000000000045acfd : add al, byte ptr [rax] ; add byte ptr [rax + rcx*2 - 0x77], ah ; adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x0000000000401035 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000468b94 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x00000000004234d3 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000047c3da : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x0000000000478515 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000046ff9d : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000447814 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004217da : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000454a2b : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042af67 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e901 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042af95 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000040d753 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000045abf2 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x200
0x000000000047dcd6 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000044a7a9 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x000000000040dbdc : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x0000000000474734 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000048584c : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 4], cl ; retf 0x8b41
0x0000000000487d4a : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x00000000004287c8 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000446294 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000410cb6 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x0000000000485ac4 : add al, byte ptr [rax] ; add byte ptr [rcx + 0xc8b48d8], cl ; ret 0xb60f
0x000000000046cb74 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000044a9b0 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; retf
0x000000000041aea6 : add al, byte ptr [rax] ; add dh, dh ; ret
0x00000000004244d3 : add al, byte ptr [rax] ; cmove rax, rdx ; ret
0x00000000004238bc : add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000047d8b5 : add al, byte ptr [rax] ; mov eax, 0x15 ; syscall
0x000000000048aec2 : add al, byte ptr [rax] ; movss dword ptr [rsp - 0x28], xmm0 ; ret
0x000000000047c1fb : add al, byte ptr [rax] ; movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x000000000047cb23 : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdi + r12*4] ; add rax, rdi ; jmp rax
0x0000000000484f0a : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000044d4fa : add al, byte ptr [rax] ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44d4ee
0x000000000044b085 : add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x000000000044bece : add al, byte ptr [rcx + 0x39] ; ret
0x00000000004ac09d : add al, byte ptr [rdx] ; ret 0xb00e
0x0000000000494844 : add al, byte ptr [rip + 0x472fffa] ; cli ; jmp rdx
0x00000000004248a1 : add al, byte ptr cs:[rax] ; cmovne rax, rdx ; ret
0x000000000042468d : add al, byte ptr ss:[rax] ; cmovne rax, rdx ; ret
0x000000000041a66b : add al, ch ; call qword ptr [rdi]
0x00000000004525c9 : add al, ch ; cmc ; cli ; inc dword ptr [rcx - 0x77] ; ret
0x0000000000454f9d : add al, ch ; insd dword ptr [rdi], dx ; retf
0x0000000000489a3d : add al, ch ; int 0x80
0x000000000041fba9 : add al, ch ; int1 ; ret 2
0x000000000046fbcb : add al, ch ; lahf ; ret 0xfffd
0x00000000004558b1 : add al, ch ; pop rcx ; ret 0xfffa
0x000000000044fb44 : add al, ch ; push rsi ; ret
0x000000000045586e : add al, ch ; pushfq ; ret 0xfffa
0x0000000000412da7 : add al, ch ; ret
0x00000000004216a8 : add al, ch ; ret 0x2a7
0x000000000040e698 : add al, ch ; ret 0x3ab
0x000000000040151f : add al, ch ; retf
0x00000000004030c0 : add al, ch ; retf 0x47b
0x0000000000487930 : add al, ch ; retf 0xb786
0x0000000000454f5c : add al, ch ; scasb al, byte ptr [rdi] ; retf
0x00000000004b1ad7 : add al, ch ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rbx]
0x00000000004af603 : add al, cl ; cmp eax, 0x96580000 ; clc ; call qword ptr [rax]
0x00000000004b3003 : add al, cl ; ja 0x4b300f ; add byte ptr [rax + 0x14], bl ; cld ; jmp qword ptr [rax]
0x00000000004ac203 : add al, cl ; or dword ptr [rax], eax ; add al, cl ; sub dh, dh ; jmp qword ptr [rax]
0x00000000004ac207 : add al, cl ; sub dh, dh ; jmp qword ptr [rax]
0x00000000004b5bcf : add al, dh ; cdq ; std ; call qword ptr [rdx]
0x00000000004af62b : add al, dh ; cmp eax, 0xb8700000 ; clc ; call qword ptr [rax]
0x00000000004af44f : add al, dh ; ret 0xfff7
0x00000000004b1aef : add al, dh ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rax]
0x00000000004b0d0b : add al, dl ; push rsp ; add byte ptr [rax], al ; adc bh, bh ; stc ; call qword ptr [rax]
0x00000000004ae13f : add al, dl ; retf
0x00000000004b3fc6 : add bh, ah ; ret
0x000000000044e93f : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045eb87 : add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x000000000040ea8f : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040104d : add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000048598f : add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x000000000049445c : add bh, bl ; stc ; jmp rax
0x0000000000484619 : add bh, byte ptr [rax + 1] ; ret
0x0000000000484776 : add bh, byte ptr [rax + 2] ; ret
0x00000000004496eb : add bh, byte ptr [rax - 1] ; ret
0x0000000000446662 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000004b4879 : add bh, ch ; jmp qword ptr [rdx]
0x0000000000400e1a : add bh, dh ; ret 0
0x0000000000453289 : add bh, dh ; ret 0xf800
0x000000000040f0cf : add bh, dh ; ret 0xffef
0x0000000000474731 : add bl, al ; mov eax, 2 ; ret
0x00000000004881da : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000494474 : add bl, bl ; stc ; jmp rax
0x0000000000463719 : add bl, bl ; sub bl, cl ; in eax, 0xdf ; loopne 0x4636b2 ; ret
0x000000000048a0eb : add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x0000000000485c59 : add bl, ch ; ret
0x000000000040f368 : add bl, ch ; ret 0x1f0f
0x000000000048aec3 : add bl, dh ; movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000400a5f : add bl, dh ; ret
0x000000000041b19e : add bl, sil ; ret
0x000000000044a9f3 : add byte ptr [r11 + 0x94801e1], r8b ; retf 0x8949
0x0000000000455483 : add byte ptr [r15], r9b ; mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x000000000045546e : add byte ptr [r15], r9b ; mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x0000000000455498 : add byte ptr [r15], r9b ; mov dh, 0x78 ; add ecx, dword ptr [rax + 0x39] ; retf
0x00000000004828d5 : add byte ptr [r8 + 0x39], r9b ; retf
0x0000000000481670 : add byte ptr [r8 + 9], r9b ; ret 0x840f
0x0000000000472966 : add byte ptr [r8 - 0x77], r9b ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000455435 : add byte ptr [r8 - 0x77], r9b ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x000000000040e18a : add byte ptr [r8 - 0x7d], r9b ; ret
0x00000000004b0195 : add byte ptr [r8], al ; cwde ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x00000000004af9c1 : add byte ptr [r8], al ; or al, 0x83 ; stc ; call qword ptr [rdx]
0x00000000004b0211 : add byte ptr [r8], al ; pushfq ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call rsi
0x00000000004afa11 : add byte ptr [r8], al ; sub al, 0x83 ; stc ; jmp rbx
0x00000000004af949 : add byte ptr [r8], al ; xor al, 0x7a ; stc ; call rsp
0x00000000004b0769 : add byte ptr [r8], r8b ; mov ah, 0xcd ; stc ; jmp qword ptr [rdx]
0x000000000047587b : add byte ptr [r9 + rbp - 0x48], sil ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000004b3007 : add byte ptr [rax + 0x14], bl ; cld ; jmp qword ptr [rax]
0x000000000044c173 : add byte ptr [rax + 0x15], bh ; syscall
0x00000000004235cf : add byte ptr [rax + 0x16], bh ; ret
0x000000000044963f : add byte ptr [rax + 0x18], bh ; syscall
0x000000000044963e : add byte ptr [rax + 0x18], dil ; syscall
0x000000000044a72f : add byte ptr [rax + 0x1c], bh ; syscall
0x000000000048867f : add byte ptr [rax + 0x26], bh ; syscall
0x00000000004ac2c3 : add byte ptr [rax + 0x2800000a], cl ; sub esi, esi ; call qword ptr [rax]
0x00000000004adbf3 : add byte ptr [rax + 0x28000023], bh ; mov bl, 0xf6 ; call qword ptr [rsi]
0x00000000004122d0 : add byte ptr [rax + 0x29], cl ; ret
0x0000000000452a11 : add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000453577 : add byte ptr [rax + 0x29], cl ; ret 0x8348
0x0000000000465ed8 : add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000047a9ea : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x0000000000422204 : add byte ptr [rax + 0x29], cl ; retf
0x000000000045565c : add byte ptr [rax + 0x29], cl ; retf 0x8341
0x0000000000465289 : add byte ptr [rax + 0x29], cl ; retf 0x8948
0x000000000047e990 : add byte ptr [rax + 0x29], cl ; retf 0x8d48
0x00000000004ac2eb : add byte ptr [rax + 0x3000000a], dh ; sub esi, esi ; jmp qword ptr [rax]
0x00000000004235af : add byte ptr [rax + 0x31], dl ; shr al, 0x48 ; ret
0x00000000004b501f : add byte ptr [rax + 0x36], ah ; std ; jmp qword ptr [rcx]
0x000000000040ea6f : add byte ptr [rax + 0x39], cl ; ret
0x000000000048b0c3 : add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000041a1af : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000004132af : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000048b158 : add byte ptr [rax + 0x39], cl ; ret 0x9272
0x000000000047b062 : add byte ptr [rax + 0x39], cl ; ret 0xed75
0x000000000041d070 : add byte ptr [rax + 0x39], cl ; ret 0xf275
0x00000000004783be : add byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004828d6 : add byte ptr [rax + 0x39], cl ; retf
0x000000000042ded6 : add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000004347cf : add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000041e03f : add byte ptr [rax + 0x39], cl ; retf 0x820f
0x00000000004109ed : add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000446e08 : add byte ptr [rax + 0x39], cl ; retf 0x870f
0x000000000042d9f6 : add byte ptr [rax + 0x39], cl ; retf 0x8949
0x0000000000448113 : add byte ptr [rax + 0x39], cl ; retf 0xd975
0x0000000000447f50 : add byte ptr [rax + 0x39], cl ; retf 0xe175
0x0000000000485a28 : add byte ptr [rax + 0x39], cl ; retf 0xe275
0x00000000004af67b : add byte ptr [rax + 0x3e], al ; add byte ptr [rax], al ; and ch, dh ; clc ; call qword ptr [rax]
0x00000000004af793 : add byte ptr [rax + 0x3f], bl ; add byte ptr [rax], al ; js 0x4af7e9 ; stc ; jmp qword ptr [rbx]
0x00000000004ab285 : add byte ptr [rax + 0x40], al ; js 0x4ab28c ; std ; call rax
0x00000000004afa9b : add byte ptr [rax + 0x42], ah ; add byte ptr [rax], al ; jo 0x4afa2f ; stc ; call qword ptr [rbx]
0x00000000004af797 : add byte ptr [rax + 0x47], bh ; stc ; jmp qword ptr [rbx]
0x00000000004b52d3 : add byte ptr [rax + 0x4800009a], bl ; pop rcx ; std ; call qword ptr [rdx]
0x0000000000449b76 : add byte ptr [rax + 0x48], bh ; syscall
0x00000000004b0193 : add byte ptr [rax + 0x49], bl ; add byte ptr [rax], al ; cwde ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x00000000004b40eb : add byte ptr [rax + 0x50000088], dh ; retf
0x00000000004b09cb : add byte ptr [rax + 0x57000051], dl ; sti ; hlt ; jmp qword ptr [rbx]
0x00000000004b52d7 : add byte ptr [rax + 0x59], cl ; std ; call qword ptr [rdx]
0x00000000004adccb : add byte ptr [rax + 0x60000024], dl ; mov ah, 0xf6 ; call qword ptr [rdx]
0x000000000040d27d : add byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x000000000046eba5 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x0000000000401f64 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000046f1d5 : add byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rax, rdi ; jmp rax
0x0000000000449352 : add byte ptr [rax + 0x63], cl ; add al, 0x9a ; add rax, rdx ; jmp rax
0x00000000004481d6 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rax, rsi ; jmp rax
0x0000000000459797 : add byte ptr [rax + 0x63], cl ; ret
0x000000000048cb93 : add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x0000000000468885 : add byte ptr [rax + 0x63], cl ; retf 0x8948
0x0000000000471ccf : add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x000000000046f6a3 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x000000000045dcb1 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000047563f : add byte ptr [rax + 0x66], bh ; syscall
0x000000000047565f : add byte ptr [rax + 0x68], bh ; syscall
0x000000000047564f : add byte ptr [rax + 0x6b], bh ; syscall
0x000000000047566f : add byte ptr [rax + 0x6c], bh ; syscall
0x0000000000489903 : add byte ptr [rax + 0x74], ah ; adc dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000440e4f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000004b2e7b : add byte ptr [rax + 0x76], al ; add byte ptr [rax], al ; or byte ptr [rsi], 0xfc ; jmp qword ptr [rbx]
0x00000000004abce3 : add byte ptr [rax + 0x78000004], ch ; xchg eax, ebx ; cmc ; call qword ptr [rdx]
0x000000000044488f : add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000004b327b : add byte ptr [rax + 0x7a], al ; add byte ptr [rax], al ; nop ; and edi, esp ; jmp qword ptr [rcx]
0x000000000044a6ff : add byte ptr [rax + 0xa], bh ; syscall
0x00000000004b2e67 : add byte ptr [rax + 0xb], bh ; cld ; jmp qword ptr [rax]
0x000000000044a6cf : add byte ptr [rax + 0xb], bh ; syscall
0x000000000044beb1 : add byte ptr [rax + 0xca], bh ; syscall
0x00000000004493b4 : add byte ptr [rax + 0xe5], bh ; syscall
0x000000000040dbdf : add byte ptr [rax + 0xe], bh ; syscall
0x00000000004247f9 : add byte ptr [rax + 0xf4802e5], al ; ret 0xc3f3
0x00000000004482a7 : add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x000000000041562f : add byte ptr [rax + 0xf], al ; mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000473355 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000044fd0f : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480147 ; ret
0x000000000041ce24 : add byte ptr [rax + 0xf], cl ; ret
0x000000000047b1f6 : add byte ptr [rax + 0xf], cl ; ret 0x3e80
0x0000000000423944 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000412fda : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041ded3 : add byte ptr [rax + 0xf], cl ; ret 0x894c
0x000000000047b245 : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x000000000044821a : add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x00000000004238bd : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004245bd : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000004540a8 : add byte ptr [rax + 0xf], cl ; ret 0xff85
0x00000000004845dc : add byte ptr [rax + 1], bh ; ret
0x0000000000449a8f : add byte ptr [rax + 1], bh ; syscall
0x000000000042b294 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000411252 : add byte ptr [rax + 1], cl ; ret
0x00000000004837e8 : add byte ptr [rax + 1], cl ; ret 0x149
0x00000000004881c0 : add byte ptr [rax + 1], cl ; ret 0x3a83
0x000000000043488d : add byte ptr [rax + 1], cl ; retf 0x8148
0x000000000044ccf0 : add byte ptr [rax + 1], cl ; retf 0x8548
0x0000000000402e90 : add byte ptr [rax + 1], cl ; retf 0x8948
0x0000000000450b35 : add byte ptr [rax + 1], cl ; retf 0x8b48
0x00000000004847e5 : add byte ptr [rax + 2], bh ; ret
0x0000000000449d3f : add byte ptr [rax + 3], bh ; syscall
0x00000000004abd83 : add byte ptr [rax + 5], cl ; add byte ptr [rax], al ; test al, 0x99 ; cmc ; call rax
0x0000000000449abf : add byte ptr [rax + 8], bh ; syscall
0x0000000000449abe : add byte ptr [rax + 8], dil ; syscall
0x0000000000481671 : add byte ptr [rax + 9], cl ; ret 0x840f
0x0000000000476260 : add byte ptr [rax + 9], cl ; ret 0x850f
0x000000000049e16b : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x0000000000450563 : add byte ptr [rax + rax*8 - 0x76b3178b], al ; ret 0x294c
0x00000000004726bf : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000424524 : add byte ptr [rax + rax], al ; add byte ptr [rsi - 9], dh ; ret 0
0x000000000041dd7b : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x0000000000473d67 : add byte ptr [rax + rax], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004b504f : add byte ptr [rax + rbx*4], dl ; add byte ptr [rax], al ; pushfq ; std ; jmp rsp
0x000000000045ac0d : add byte ptr [rax + rcx - 0xd], dh ; ret
0x000000000045acff : add byte ptr [rax + rcx*2 - 0x77], ah ; adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x00000000004b4087 : add byte ptr [rax + rcx*4], cl ; add ah, dl ; retf 0xfffc
0x000000000049f317 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x000000000046f217 : add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x000000000047bab4 : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0xeac1
0x000000000049167b : add byte ptr [rax - 0x172076b8], dl ; retf
0x000000000041d28f : add byte ptr [rax - 0x17], dl ; ret
0x00000000004b1ad3 : add byte ptr [rax - 0x17ffff9e], bl ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rbx]
0x00000000004b084f : add byte ptr [rax - 0x26], dl ; stc ; call qword ptr [rax]
0x0000000000401037 : add byte ptr [rax - 0x39], cl ; ret
0x000000000040fc53 : add byte ptr [rax - 0x39], cl ; ret 0xac20
0x000000000046527b : add byte ptr [rax - 0x39], cl ; ret 0xb2c8
0x000000000045d53f : add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x000000000040dc07 : add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x00000000004234d5 : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x0000000000468205 : add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x000000000047498f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000047496f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000004749cf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x000000000047497f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000004749bf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000045adff : add byte ptr [rax - 0x39], cl ; ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x0000000000458959 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000458930 : add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x0000000000458290 : add byte ptr [rax - 0x3f], cl ; ret 0x8511
0x00000000004827d5 : add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000494300 : add byte ptr [rax - 0x462f0007], bh ; stc ; call rax
0x00000000004b05b7 : add byte ptr [rax - 0x46], ch ; stc ; call qword ptr [rcx]
0x00000000004b0bd3 : add byte ptr [rax - 0x47ffffad], bl ; cli ; std ; jmp qword ptr [rdx]
0x00000000004af62f : add byte ptr [rax - 0x48], dh ; clc ; call qword ptr [rax]
0x000000000046163f : add byte ptr [rax - 0x4f743], al ; jmp qword ptr [rax]
0x00000000004b0167 : add byte ptr [rax - 0x5b], ch ; stc ; jmp qword ptr [rcx]
0x00000000004af607 : add byte ptr [rax - 0x6a], bl ; clc ; call qword ptr [rax]
0x00000000004abce7 : add byte ptr [rax - 0x6d], bh ; cmc ; call qword ptr [rdx]
0x00000000004b1747 : add byte ptr [rax - 0x71], bl ; cli ; call qword ptr [rdx]
0x000000000045522a : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x00000000004573ad : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x000000000044d4af : add byte ptr [rax - 0x73], cl ; add eax, 0x26ce49 ; ret
0x00000000004573cb : add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [rax + 0x39] ; ret
0x00000000004573e9 : add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [rax + 0x39] ; ret
0x0000000000478066 : add byte ptr [rax - 0x73], cl ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000482a57 : add byte ptr [rax - 0x73], cl ; pop rsp ; retf 0x4df0
0x000000000041c50a : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000041eb1f : add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041ae58 : add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000046b87b : add byte ptr [rax - 0x73], cl ; xor eax, 0x24b59d ; jmp rax
0x000000000047c3dc : add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000041994f : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000485f97 : add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000048aac8 : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000461597 : add byte ptr [rax - 0x75], cl ; add al, 0xc6 ; xor esi, esi ; jmp rax
0x0000000000460eed : add byte ptr [rax - 0x75], cl ; add al, 0xc7 ; jmp rax
0x00000000004609ab : add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x0000000000457aaf : add byte ptr [rax - 0x75], cl ; add eax, 0x2643c1 ; ret
0x000000000044f5af : add byte ptr [rax - 0x75], cl ; add eax, 0x26d371 ; ret
0x000000000041877f : add byte ptr [rax - 0x75], cl ; add eax, 0x2a0999 ; ret
0x000000000040df2b : add byte ptr [rax - 0x75], cl ; and al, 8 ; call rax
0x000000000044e9ff : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004229af : add byte ptr [rax - 0x75], cl ; je 0x4229e1 ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000045b69b : add byte ptr [rax - 0x75], cl ; jl 0x45b6cc ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000040e9c2 : add byte ptr [rax - 0x75], cl ; js 0x40e9ec ; call rdx
0x0000000000471fbf : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000486ce0 : add byte ptr [rax - 0x75], cl ; pop rbp ; mov eax, 0x89fd8945 ; ret 0xe283
0x0000000000401e33 : add byte ptr [rax - 0x75], cl ; pop rsp ; retf
0x0000000000400efd : add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000042f41f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000482b52 : add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x00000000004123ef : add byte ptr [rax - 0x76b80000], al ; ret
0x0000000000470f5d : add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x0000000000484a76 : add byte ptr [rax - 0x77], cl ; add eax, 0x2375ea ; ret
0x000000000041981a : add byte ptr [rax - 0x77], cl ; add eax, 0x2a003e ; ret
0x0000000000419315 : add byte ptr [rax - 0x77], cl ; add eax, 0x2a04d3 ; ret
0x00000000004192ed : add byte ptr [rax - 0x77], cl ; add eax, 0x2a04f3 ; ret
0x00000000004192cd : add byte ptr [rax - 0x77], cl ; add eax, 0x2a050b ; ret
0x0000000000412a72 : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000045a0a9 : add byte ptr [rax - 0x77], cl ; enter -0x3fcf, -0x18 ; retf
0x0000000000410373 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000455436 : add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x0000000000454e20 : add byte ptr [rax - 0x77], cl ; fldl2t ; retf 0xfffd
0x000000000048b56e : add byte ptr [rax - 0x77], cl ; fucomip st(1) ; ret
0x000000000041836b : add byte ptr [rax - 0x77], cl ; imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x00000000004017e1 : add byte ptr [rax - 0x77], cl ; jbe 0x4017fb ; syscall
0x000000000044c11f : add byte ptr [rax - 0x77], cl ; jo 0x44c149 ; ret
0x000000000047fb6b : add byte ptr [rax - 0x77], cl ; jrcxz 0x47fbbf ; mov esi, ebx ; syscall
0x0000000000412bc3 : add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x000000000042362f : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rax ; call rcx
0x000000000040385f : add byte ptr [rax - 0x77], cl ; ret
0x000000000044954b : add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x000000000041dd27 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000411326 : add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000004131fa : add byte ptr [rax - 0x77], cl ; ret 0x294d
0x000000000048e93c : add byte ptr [rax - 0x77], cl ; ret 0x3948
0x00000000004495f7 : add byte ptr [rax - 0x77], cl ; ret 0x6ae9
0x0000000000402dde : add byte ptr [rax - 0x77], cl ; ret 0x7ce9
0x000000000045fd68 : add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000041afdc : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000402b5f : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000410108 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000449323 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000048e08f : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000456498 : add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x0000000000403173 : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000046a3c7 : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000040f39d : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000414958 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000449562 : add byte ptr [rax - 0x77], cl ; ret 0xffe9
0x0000000000449067 : add byte ptr [rax - 0x77], cl ; retf
0x000000000043d304 : add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000042a3fc : add byte ptr [rax - 0x77], cl ; retf 0x8349
0x000000000045e4cb : add byte ptr [rax - 0x77], cl ; retf 0x8948
0x0000000000410d57 : add byte ptr [rax - 0x77], cl ; retf 0x894c
0x0000000000455a37 : add byte ptr [rax - 0x77], cl ; retf 0x8966
0x000000000042a33a : add byte ptr [rax - 0x77], cl ; retf 0x9066
0x00000000004561e9 : add byte ptr [rax - 0x77], cl ; retf 0xb60f
0x000000000043d186 : add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000043ecfc : add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x0000000000447070 : add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000481cf1 : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000048ccaf : add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x000000000047b763 : add byte ptr [rax - 0x77], cl ; xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x000000000041003f : add byte ptr [rax - 0x77], cl ; xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000004b17d3 : add byte ptr [rax - 0x77ffffa1], bl ; xchg eax, esp ; cli ; call qword ptr [rcx]
0x000000000048aba6 : add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x00000000004737bf : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x0000000000471a1b : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00000000004634c9 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; retf 6
0x00000000004afa9f : add byte ptr [rax - 0x7b], dh ; stc ; call qword ptr [rbx]
0x000000000048c26f : add byte ptr [rax - 0x7bf0df06], al ; retf 4
0x000000000048edee : add byte ptr [rax - 0x7d], cl ; and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000041fcdc : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041d117 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041cd74 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000047fa0d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x000000000042387d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000401a99 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000041136a : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; retf
0x0000000000461aa3 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000048a8d1 : add byte ptr [rax - 0x7d], cl ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000416baf : add byte ptr [rax - 0x7d], cl ; jg 0x416bf5 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x000000000041f162 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004719d6 : add byte ptr [rax - 0x7d], cl ; js 0x471a14 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000405f6f : add byte ptr [rax - 0x7d], cl ; ret
0x000000000044675f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000044c4c7 : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000046f1e7 : add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000040f1ef : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004560f4 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000485a0f : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000047dcda : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000045dc94 : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000042a429 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041e7b7 : add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x000000000048e06f : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000046f3c8 : add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x0000000000424280 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043d3e3 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a457 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000047df97 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000419dfa : add byte ptr [rax - 0x7d], cl ; retf
0x0000000000422309 : add byte ptr [rax - 0x7d], cl ; retf 0x4801
0x000000000040d755 : add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000041cf10 : add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000040d7b5 : add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x0000000000425e5f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000004738ff : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000004103ba : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0x7520
0x0000000000489672 : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x000000000041a664 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; call qword ptr [rdi]
0x0000000000415cd0 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000004182c8 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x000000000045abf4 : add byte ptr [rax - 0x7f], cl ; ret 0x200
0x000000000043308b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004b17bb : add byte ptr [rax - 0x7fffffa1], al ; xchg eax, esp ; cli ; call qword ptr [rdi]
0x00000000004b19af : add byte ptr [rax - 0xb], ah ; std ; call rdx
0x00000000004b14b7 : add byte ptr [rax - 0xe], ch ; std ; jmp qword ptr [rdi]
0x00000000004b5bcb : add byte ptr [rax - 0xfffff5d], dl ; cdq ; std ; call qword ptr [rdx]
0x00000000004b1aeb : add byte ptr [rax - 0xfffff9e], dh ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rax]
0x0000000000411d8a : add byte ptr [rax - 1], bh ; ret
0x00000000004b2c87 : add byte ptr [rax - 4], ch ; sti ; jmp qword ptr [rbx]
0x00000000004b2c6f : add byte ptr [rax - 4], dl ; sti ; jmp qword ptr [rbx]
0x0000000000494fa0 : add byte ptr [rax - 6], dl ; call qword ptr [rax]
0x000000000041a668 : add byte ptr [rax], 0 ; add al, ch ; call qword ptr [rdi]
0x000000000041fba6 : add byte ptr [rax], 0 ; add al, ch ; int1 ; ret 2
0x000000000046fbc8 : add byte ptr [rax], 0 ; add al, ch ; lahf ; ret 0xfffd
0x000000000044fb41 : add byte ptr [rax], 0 ; add al, ch ; push rsi ; ret
0x0000000000412da4 : add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000004216a5 : add byte ptr [rax], 0 ; add al, ch ; ret 0x2a7
0x00000000004182cc : add byte ptr [rax], 0 ; add al, ch ; retf
0x0000000000415afa : add byte ptr [rax], 0 ; add bl, dh ; ret
0x0000000000447f4d : add byte ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x000000000043488a : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; retf 0x8148
0x0000000000414955 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000043586b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044825b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x0000000000418593 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000042c0eb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004499bb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; syscall
0x0000000000404033 : add byte ptr [rax], 0 ; add byte ptr [rcx], dh ; imul al ; ret 0xbfbf
0x000000000042c651 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004af67f : add byte ptr [rax], ah ; cmc ; clc ; call qword ptr [rax]
0x00000000004b504e : add byte ptr [rax], al ; adc al, 0x98 ; add byte ptr [rax], al ; pushfq ; std ; jmp rsp
0x00000000004b0d0e : add byte ptr [rax], al ; adc bh, bh ; stc ; call qword ptr [rax]
0x00000000004af44a : add byte ptr [rax], al ; adc byte ptr [rax + rax], bh ; add al, dh ; ret 0xfff7
0x00000000004b084a : add byte ptr [rax], al ; adc byte ptr [rax], dl ; add byte ptr [rax - 0x26], dl ; stc ; call qword ptr [rax]
0x00000000004b494a : add byte ptr [rax], al ; adc byte ptr [rcx + 0x5a00000], dl ; std ; jmp rdx
0x00000000004afa4a : add byte ptr [rax], al ; adc byte ptr [rdx], al ; add byte ptr [rax], dh ; test cl, bh ; call qword ptr [rbx]
0x00000000004b3fa1 : add byte ptr [rax], al ; add ah, bh ; ret 0xfffc
0x000000000041a669 : add byte ptr [rax], al ; add al, ch ; call qword ptr [rdi]
0x0000000000489a3b : add byte ptr [rax], al ; add al, ch ; int 0x80
0x000000000041fba7 : add byte ptr [rax], al ; add al, ch ; int1 ; ret 2
0x000000000046fbc9 : add byte ptr [rax], al ; add al, ch ; lahf ; ret 0xfffd
0x000000000044fb42 : add byte ptr [rax], al ; add al, ch ; push rsi ; ret
0x0000000000412da5 : add byte ptr [rax], al ; add al, ch ; ret
0x00000000004216a6 : add byte ptr [rax], al ; add al, ch ; ret 0x2a7
0x000000000040e696 : add byte ptr [rax], al ; add al, ch ; ret 0x3ab
0x000000000040151d : add byte ptr [rax], al ; add al, ch ; retf
0x000000000045ebce : add byte ptr [rax], al ; add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x000000000040ea8d : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000048598d : add byte ptr [rax], al ; add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x000000000047472f : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x0000000000485c57 : add byte ptr [rax], al ; add bl, ch ; ret
0x000000000040f366 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x0000000000415afb : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000048867d : add byte ptr [rax], al ; add byte ptr [rax + 0x26], bh ; syscall
0x0000000000468be8 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000465ed6 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000047a9e8 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x0000000000465287 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf 0x8948
0x000000000047e98e : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf 0x8d48
0x000000000041f34f : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000048b0c1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000041a1ad : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000004132ad : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000048b156 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x000000000042ded4 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000004372c1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000004109eb : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000447f4e : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x0000000000449b74 : add byte ptr [rax], al ; add byte ptr [rax + 0x48], bh ; syscall
0x00000000004b40e9 : add byte ptr [rax], al ; add byte ptr [rax + 0x50000088], dh ; retf
0x000000000046b304 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000471ccd : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x000000000047565d : add byte ptr [rax], al ; add byte ptr [rax + 0x68], bh ; syscall
0x000000000047564d : add byte ptr [rax], al ; add byte ptr [rax + 0x6b], bh ; syscall
0x000000000047566d : add byte ptr [rax], al ; add byte ptr [rax + 0x6c], bh ; syscall
0x000000000044488d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000044a6cd : add byte ptr [rax], al ; add byte ptr [rax + 0xb], bh ; syscall
0x000000000044beaf : add byte ptr [rax], al ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000004493b2 : add byte ptr [rax], al ; add byte ptr [rax + 0xe5], bh ; syscall
0x000000000040dbdd : add byte ptr [rax], al ; add byte ptr [rax + 0xe], bh ; syscall
0x00000000004482a5 : add byte ptr [rax], al ; add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x000000000041ce22 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004851d2 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000453092 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041ded1 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x894c
0x0000000000448218 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x000000000047444d : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004540a6 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xff85
0x00000000004845da : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000449a8d : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; syscall
0x0000000000483119 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000004837e6 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x000000000043488b : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8148
0x0000000000450b33 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8b48
0x00000000004847e3 : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x00000000004b4085 : add byte ptr [rax], al ; add byte ptr [rax + rcx*4], cl ; add ah, dl ; retf 0xfffc
0x000000000046f215 : add byte ptr [rax], al ; add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x000000000044a521 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000040fc51 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x000000000045d53d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x000000000044998d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x0000000000458957 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000045892e : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x000000000045828e : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x8511
0x00000000004827d3 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000004573ab : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x00000000004573c9 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [rax + 0x39] ; ret
0x00000000004573e7 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [rax + 0x39] ; ret
0x000000000041994d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040e9c0 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; js 0x40e9ee ; call rdx
0x0000000000401e31 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rsp ; retf
0x00000000004187ad : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000454e1e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fldl2t ; retf 0xfffd
0x000000000048b56c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(1) ; ret
0x00000000004017df : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jbe 0x4017fd ; syscall
0x000000000044c11d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jo 0x44c14b ; ret
0x000000000042362d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rax ; call rcx
0x0000000000410081 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000411324 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000004601c4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000041b9ad : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000048e08d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000046a665 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000040f39b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000414956 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000044b522 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x000000000045e4c9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000042a338 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x00000000004561e7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xb60f
0x000000000043d184 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000043ecfa : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x000000000048ccad : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x000000000048aba4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x0000000000405f6d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044675d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000040f1ed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000485a0d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000047dcd8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000042b143 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000048e06d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000472c7e : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043eaa1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b16d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000425e5d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000489670 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x0000000000434884 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000411d88 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000414beb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf
0x000000000040ea8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000048598b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x000000000041876b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004132ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000471ccb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x000000000045d53b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x000000000044998b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x00000000004187ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000044c11b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jo 0x44c14d ; ret
0x000000000041b9ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000048e08b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000048ccab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x0000000000405f6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044675b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000040f1eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000048e06b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000417396 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000049fff2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a04e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000049f6a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a0032 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000004a0522 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x000000000049f69a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x000000000041910b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000044699b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000004261ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000424abb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000459a2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; retf 0x4a8d
0x0000000000412d2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x0000000000419eab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x00000000004227db : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x000000000044a66b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x000000000047494c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000481b9f : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040ea8c : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000419e1c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000048598c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x00000000004a201c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004a11cc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x0000000000448217 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x000000000048d274 : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0x48d25c ; ret
0x0000000000485c56 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x485c24
0x000000000045fffd : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000444ebc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x0000000000444ecc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x0000000000444edc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x0000000000444eec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x0000000000444efc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x0000000000444e3c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x0000000000444e4c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x0000000000444e5c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x0000000000444e6c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x0000000000444e7c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x0000000000444e8c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x0000000000444e9c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x0000000000444eac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x0000000000444e2c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x0000000000400bde : add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret
0x000000000044488c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x000000000044426c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000048867c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x26 ; syscall
0x000000000047565c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x000000000047564c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x000000000047566c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x000000000044a6cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x000000000041872c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000004845d9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000449a8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; syscall
0x00000000004847e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000044910c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, edx ; mov eax, esi ; syscall
0x000000000043586c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044c11c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rax + 0x20], rsi ; ret
0x0000000000481bac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000041879c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000004187ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000048102c : add byte ptr [rax], al ; add byte ptr [rax], al ; movsx eax, dl ; sub eax, ecx ; ret
0x0000000000412d2c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000044825c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x00000000004359bc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000041910c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004118ec : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000417398 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a0fec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004a1784 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000049fff4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a04e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000049f6a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a1024 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000004a17c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x00000000004a0034 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000004a0524 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x000000000049f69c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x00000000004ae139 : add byte ptr [rax], al ; add byte ptr [rax], al ; sub dword ptr [rax], eax ; add al, dl ; retf
0x0000000000400407 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x40041b ; call rax
0x000000000042b99c : add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x00000000004176ac : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004499bc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; syscall
0x00000000004737ac : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x0000000000444c6c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000480f6c : add byte ptr [rax], al ; add byte ptr [rax], bh ; retf 0x850f
0x00000000004b3f9d : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax], al ; cld ; ret 0xfffc
0x00000000004af449 : add byte ptr [rax], al ; add byte ptr [rax], dl ; cmp al, 0 ; add al, dh ; ret 0xfff7
0x00000000004496a4 : add byte ptr [rax], al ; add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x000000000048510d : add byte ptr [rax], al ; add byte ptr [rbp + 0x12], dh ; add rsp, 0x38 ; ret
0x000000000048e181 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1a], dh ; ret
0x00000000004759cb : add byte ptr [rax], al ; add byte ptr [rbp + 0x1b], dh ; add rsp, 0x38 ; ret
0x0000000000481f32 : add byte ptr [rax], al ; add byte ptr [rbp + 0x27], dh ; add rsp, 0x68 ; ret
0x0000000000481e72 : add byte ptr [rax], al ; add byte ptr [rbp + 0x2c], dh ; add rsp, 0x38 ; ret
0x00000000004579d5 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000482093 : add byte ptr [rax], al ; add byte ptr [rbp + 0x36], dh ; add rsp, 0x78 ; ret
0x000000000048439e : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x000000000044a7bd : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x00000000004498d4 : add byte ptr [rax], al ; add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x0000000000475899 : add byte ptr [rax], al ; add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x0000000000449c64 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4a], dh ; add rsp, 0x68 ; ret
0x000000000044a5d3 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x0000000000488468 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x38 ; ret
0x000000000045ad4c : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x000000000048502a : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x000000000048d2b6 : add byte ptr [rax], al ; add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x0000000000458444 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x3d], cl ; jmp rdx
0x000000000041f0e9 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x46], cl ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000044bd58 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000042b0f8 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000457c09 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x000000000043514d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000414302 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004172b4 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040fbf9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000048d275 : add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x000000000046cffd : add byte ptr [rax], al ; add byte ptr [rbx - 0x4f743], al ; jmp qword ptr [rax]
0x000000000046600a : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000046047b : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; retf 0x8944
0x0000000000411614 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x0000000000460ae7 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000046c8c8 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x00000000004695d6 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x46 ; or al, 0x83 ; ret
0x000000000046d862 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; ret 0x3941
0x000000000044699d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000040e113 : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0x149
0x000000000049215d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000473b8d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x00000000004918bd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000423f6d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*8 - 0x7cb7dd8c], al ; ret 0x4801
0x000000000044b408 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44b417 ; call r12
0x000000000044b438 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44b447 ; call r12
0x0000000000458679 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; push rsi ; cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000045f3e1 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004047fe : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x0000000000479de2 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000041cf45 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000004261ad : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000424abd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000042bb70 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x000000000042bb96 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x0000000000404034 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; imul al ; ret 0xbfbf
0x000000000044a683 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x000000000040eca2 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000042b47a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x000000000048cfe3 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call r14
0x000000000048d00b : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x000000000048dd5a : add byte ptr [rax], al ; add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x0000000000459a2d : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; retf 0x4a8d
0x0000000000463443 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; or al, 0x89 ; ret 0xc689
0x000000000040dbb4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x0000000000481114 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x940fc085 ; ret 0x3d
0x00000000004481a5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043594d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004359bd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000454379 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4e ; add dword ptr [rcx - 0x77], eax ; retf
0x000000000044825d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x0000000000412d2d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042b4bd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000458979 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc083
0x00000000004656a1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; retf 0x45e9
0x0000000000476900 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000048d1e5 : add byte ptr [rax], al ; add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x0000000000485340 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x000000000042c652 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000419ead : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x000000000042b3e2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000004af67a : add byte ptr [rax], al ; add byte ptr ds:[rax], al ; and ch, dh ; clc ; call qword ptr [rax]
0x0000000000413ef5 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000045ee08 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x0000000000454ca6 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x0000000000423444 : add byte ptr [rax], al ; add cl, ch ; retf
0x000000000048abee : add byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x0000000000400bdf : add byte ptr [rax], al ; add cl, cl ; ret
0x000000000046a0e6 : add byte ptr [rax], al ; add dh, al ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x000000000045e910 : add byte ptr [rax], al ; add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x00000000004510fc : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000004227dd : add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x000000000044a66d : add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x00000000004460f1 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000004abd82 : add byte ptr [rax], al ; add rax, -0x66580000 ; cmc ; call rax
0x000000000047494e : add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000042b293 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x00000000004119b2 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000048d220 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000048496c : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000000000048ace3 : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000041622b : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004497c9 : add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x0000000000449b5c : add byte ptr [rax], al ; add rsp, 0x78 ; ret
0x000000000040152c : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x000000000044b2fe : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000481ba1 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004b215e : add byte ptr [rax], al ; and al, 0x69 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; xchg eax, ebx ; sti ; jmp qword ptr [rax]
0x00000000004482a6 : add byte ptr [rax], al ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000004af67e : add byte ptr [rax], al ; and ch, dh ; clc ; call qword ptr [rax]
0x00000000004a4e1e : add byte ptr [rax], al ; and eax, dword ptr [rdi + 0x7458fffd] ; std ; call qword ptr [rax]
0x000000000042b4be : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000440ae0 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000473354 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00000000004b0466 : add byte ptr [rax], al ; call 0x124afe2a
0x00000000004b1ad6 : add byte ptr [rax], al ; call 0x144b1591
0x000000000045584e : add byte ptr [rax], al ; call 0x401b14
0x000000000046fbca : add byte ptr [rax], al ; call 0x44be74
0x000000000040fbd5 : add byte ptr [rax], al ; call 0x44bea4
0x000000000040ea8e : add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000048cfe9 : add byte ptr [rax], al ; call r14
0x000000000040e99b : add byte ptr [rax], al ; call rax
0x000000000048598e : add byte ptr [rax], al ; call rbx
0x00000000004a201e : add byte ptr [rax], al ; call rdi
0x000000000040e8d5 : add byte ptr [rax], al ; call rdx
0x00000000004a11ce : add byte ptr [rax], al ; call rsp
0x0000000000448324 : add byte ptr [rax], al ; clc ; jg 0x448328 ; int1 ; mov eax, eax ; ret
0x00000000004b3fa2 : add byte ptr [rax], al ; cld ; ret 0xfffc
0x0000000000448251 : add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x0000000000448219 : add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x00000000004244fc : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000004238f3 : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004b4872 : add byte ptr [rax], al ; cmp byte ptr [rax + 0x2080000], dl ; std ; jmp qword ptr [rdx]
0x00000000004b4072 : add byte ptr [rax], al ; cmp byte ptr [rax - 0x35480000], cl ; cld ; jmp qword ptr [rcx]
0x00000000004af372 : add byte ptr [rax], al ; cmp byte ptr [rbx], bh ; add byte ptr [rax], al ; mov byte ptr [rbp - 9], dl ; jmp qword ptr [rbx]
0x000000000041f767 : add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x41f738 ; ret
0x00000000004af656 : add byte ptr [rax], al ; cwde ; fprem ; call qword ptr [rax]
0x00000000004b0196 : add byte ptr [rax], al ; cwde ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x000000000049e17a : add byte ptr [rax], al ; enter 0, 0 ; retf
0x00000000004a21ce : add byte ptr [rax], al ; enter 0, 0 ; retf 0
0x000000000049f326 : add byte ptr [rax], al ; enter 0x10, 0 ; retf
0x00000000004af602 : add byte ptr [rax], al ; enter 0x3d, 0 ; pop rax ; xchg eax, esi ; clc ; call qword ptr [rax]
0x00000000004b3002 : add byte ptr [rax], al ; enter 0x77, 0 ; pop rax ; adc al, 0xfc ; jmp qword ptr [rax]
0x00000000004b4602 : add byte ptr [rax], al ; enter 0x8d, 0 ; sub dl, ch ; cld ; jmp qword ptr [rcx]
0x000000000049eb26 : add byte ptr [rax], al ; enter 0xa, 0 ; retf
0x000000000049ef26 : add byte ptr [rax], al ; enter 0xd, 0 ; retf
0x00000000004a23ce : add byte ptr [rax], al ; enter 1, 0 ; retf 1
0x00000000004a25ce : add byte ptr [rax], al ; enter 2, 0 ; retf 2
0x00000000004a27ce : add byte ptr [rax], al ; enter 3, 0 ; retf 3
0x00000000004a29ce : add byte ptr [rax], al ; enter 4, 0 ; retf 4
0x00000000004a2bce : add byte ptr [rax], al ; enter 5, 0 ; retf 5
0x00000000004a2dce : add byte ptr [rax], al ; enter 6, 0 ; retf 6
0x00000000004a2fce : add byte ptr [rax], al ; enter 7, 0 ; retf 7
0x00000000004a31ce : add byte ptr [rax], al ; enter 8, 0 ; retf 8
0x00000000004a33ce : add byte ptr [rax], al ; enter 9, 0 ; retf 9
0x00000000004af616 : add byte ptr [rax], al ; fdivr qword ptr [rip - 0x69ac0000] ; clc ; jmp qword ptr [rsi]
0x0000000000400a58 : add byte ptr [rax], al ; hlt ; nop dword ptr [rax + rax] ; ret
0x00000000004b1b02 : add byte ptr [rax], al ; in al, dx ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rdx]
0x000000000048dd5b : add byte ptr [rax], al ; ja 0x48dd68 ; sbb eax, eax ; ret
0x00000000004b1472 : add byte ptr [rax], al ; jae 0x4b1476 ; call qword ptr [rdx]
0x00000000004129c6 : add byte ptr [rax], al ; je 0x4129d1 ; ret
0x0000000000424560 : add byte ptr [rax], al ; je 0x42452f ; ret
0x0000000000473d69 : add byte ptr [rax], al ; je 0x473d75 ; ret
0x000000000048d1e6 : add byte ptr [rax], al ; je 0x48d1d4 ; add rsp, 0x18 ; ret
0x000000000048d276 : add byte ptr [rax], al ; je 0x48d25a ; ret
0x000000000048d2b7 : add byte ptr [rax], al ; je 0x48d2c8 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x00000000004ad2aa : add byte ptr [rax], al ; je 0x4ad241 ; idiv bh ; retf
0x00000000004b2c82 : add byte ptr [rax], al ; je 0x4b2c90 ; add byte ptr [rax - 4], ch ; sti ; jmp qword ptr [rbx]
0x00000000004b14f2 : add byte ptr [rax], al ; jl 0x4b156e ; cli ; jmp rax
0x0000000000485c58 : add byte ptr [rax], al ; jmp 0x485c22
0x000000000044a7ab : add byte ptr [rax], al ; jmp rax
0x000000000041a08e : add byte ptr [rax], al ; jne 0x41a0a1 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000042c152 : add byte ptr [rax], al ; jne 0x42c068 ; ret
0x00000000004488ed : add byte ptr [rax], al ; jne 0x44891d ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004496a5 : add byte ptr [rax], al ; jne 0x4496c1 ; add rsp, 0x28 ; ret
0x00000000004498d5 : add byte ptr [rax], al ; jne 0x449923 ; add rsp, 0x58 ; ret
0x0000000000449c65 : add byte ptr [rax], al ; jne 0x449cbb ; add rsp, 0x68 ; ret
0x000000000044a5d4 : add byte ptr [rax], al ; jne 0x44a5ef ; add rsp, 0x28 ; ret
0x000000000045ad4d : add byte ptr [rax], al ; jne 0x45ad5e ; add rsp, 0x18 ; ret
0x000000000047589a : add byte ptr [rax], al ; jne 0x4758eb ; add rsp, 0x58 ; ret
0x00000000004759cc : add byte ptr [rax], al ; jne 0x4759f3 ; add rsp, 0x38 ; ret
0x0000000000481d78 : add byte ptr [rax], al ; jne 0x481d8b ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000481e73 : add byte ptr [rax], al ; jne 0x481eab ; add rsp, 0x38 ; ret
0x0000000000481f33 : add byte ptr [rax], al ; jne 0x481f66 ; add rsp, 0x68 ; ret
0x0000000000482094 : add byte ptr [rax], al ; jne 0x4820d6 ; add rsp, 0x78 ; ret
0x0000000000482363 : add byte ptr [rax], al ; jne 0x482396 ; add rsp, 0x68 ; ret
0x000000000048439f : add byte ptr [rax], al ; jne 0x4843e3 ; leave ; ret
0x000000000048502b : add byte ptr [rax], al ; jne 0x48503c ; add rsp, 0x38 ; ret
0x000000000048510e : add byte ptr [rax], al ; jne 0x48512c ; add rsp, 0x38 ; ret
0x00000000004878d9 : add byte ptr [rax], al ; jne 0x4878e4 ; pop rbx ; ret
0x0000000000488469 : add byte ptr [rax], al ; jne 0x488484 ; add rsp, 0x38 ; ret
0x000000000048e182 : add byte ptr [rax], al ; jne 0x48e1a5 ; ret
0x00000000004af62e : add byte ptr [rax], al ; jo 0x4af5ef ; clc ; call qword ptr [rax]
0x00000000004afa9e : add byte ptr [rax], al ; jo 0x4afa2c ; stc ; call qword ptr [rbx]
0x00000000004afa9d : add byte ptr [rax], al ; jo 0x4afa2d ; stc ; call qword ptr [rbx]
0x00000000004ab284 : add byte ptr [rax], al ; js 0x4ab28d ; std ; call rax
0x00000000004abce6 : add byte ptr [rax], al ; js 0x4abc82 ; cmc ; call qword ptr [rdx]
0x00000000004af796 : add byte ptr [rax], al ; js 0x4af7e6 ; stc ; jmp qword ptr [rbx]
0x00000000004b2e66 : add byte ptr [rax], al ; js 0x4b2e7a ; cld ; jmp qword ptr [rax]
0x0000000000444ebe : add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x0000000000444ece : add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x0000000000444ede : add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x0000000000444eee : add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x0000000000444efe : add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x0000000000444e1d : add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x0000000000444e3e : add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x0000000000444e4e : add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x0000000000444e5e : add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x0000000000444e6e : add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x0000000000444e7e : add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x0000000000444e8e : add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x0000000000444dca : add byte ptr [rax], al ; lea rax, [rdi + 7] ; ret
0x0000000000444e9e : add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x0000000000444eae : add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x0000000000444e2e : add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x000000000044d4ae : add byte ptr [rax], al ; lea rax, [rip + 0x26ce49] ; ret
0x000000000046b87a : add byte ptr [rax], al ; lea rsi, [rip + 0x24b59d] ; jmp rax
0x0000000000400be0 : add byte ptr [rax], al ; leave ; ret
0x00000000004b17e6 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; pop rdi ; add byte ptr [rax], al ; xchg eax, esp ; xchg eax, esp ; cli ; call qword ptr [rcx]
0x00000000004b2162 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; xchg eax, ebx ; sti ; jmp qword ptr [rax]
0x00000000004b2e1e : add byte ptr [rax], al ; loopne 0x4b2e2b ; cld ; jmp rdx
0x00000000004b2e1a : add byte ptr [rax], al ; loopne 0x4b2e9c ; add byte ptr [rax], al ; loopne 0x4b2e2f ; cld ; jmp rdx
0x00000000004b14ee : add byte ptr [rax], al ; mov ah, 0x5c ; add byte ptr [rax], al ; jl 0x4b1572 ; cli ; jmp rax
0x00000000004b076a : add byte ptr [rax], al ; mov ah, 0xcd ; stc ; jmp qword ptr [rdx]
0x00000000004b0fea : add byte ptr [rax], al ; mov al, 0x57 ; add byte ptr [rax], al ; rcr byte ptr [rdi], 1 ; cli ; call qword ptr [rdi]
0x00000000004b40ea : add byte ptr [rax], al ; mov al, 0x88 ; add byte ptr [rax], al ; push rax ; retf
0x0000000000443d9e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000004425ee : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000004b4086 : add byte ptr [rax], al ; mov byte ptr [rax], r8b ; add ah, dl ; retf 0xfffc
0x00000000004af376 : add byte ptr [rax], al ; mov byte ptr [rbp - 9], dl ; jmp qword ptr [rbx]
0x0000000000412a6e : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000044488e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x000000000044426e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x0000000000471abb : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041932c : add byte ptr [rax], al ; mov dword ptr [rip + 0x2a04d8], eax ; ret
0x000000000044427e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000400bdb : add byte ptr [rax], al ; mov eax, 0 ; leave ; ret
0x000000000042384e : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000044a72e : add byte ptr [rax], al ; mov eax, 0x1c ; syscall
0x000000000048867e : add byte ptr [rax], al ; mov eax, 0x26 ; syscall
0x00000000004adbf2 : add byte ptr [rax], al ; mov eax, 0x28000023 ; mov bl, 0xf6 ; call qword ptr [rsi]
0x0000000000449b75 : add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x000000000047563e : add byte ptr [rax], al ; mov eax, 0x66 ; syscall
0x000000000047565e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x000000000047564e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x000000000047566e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x000000000044a6fe : add byte ptr [rax], al ; mov eax, 0xa ; syscall
0x000000000044a6ce : add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x000000000044beb0 : add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000040dbde : add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x00000000004493b3 : add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x0000000000411d89 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000004845db : add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000449a8e : add byte ptr [rax], al ; mov eax, 1 ; syscall
0x00000000004847e4 : add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000041844e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000048f5fe : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f619 ; ret
0x000000000048f82e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f849 ; ret
0x000000000040dba9 : add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000047e76f : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004688c2 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000466061 : add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000004442ae : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000048cfe4 : add byte ptr [rax], al ; mov edi, 1 ; call r14
0x000000000048d00c : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000044910e : add byte ptr [rax], al ; mov edi, edx ; mov eax, esi ; syscall
0x000000000043514e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043586e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044bf66 : add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x00000000004abcf6 : add byte ptr [rax], al ; mov esp, 0x84000004 ; xchg eax, ebx ; cmc ; call rsp
0x000000000044c11e : add byte ptr [rax], al ; mov qword ptr [rax + 0x20], rsi ; ret
0x0000000000484fa8 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000481cf0 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004884e2 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x00000000004885b6 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000047b734 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x308], rax ; ret
0x000000000048d30e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x00000000004845f8 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x00000000004192ec : add byte ptr [rax], al ; mov qword ptr [rip + 0x2a04f3], rax ; ret
0x00000000004192cc : add byte ptr [rax], al ; mov qword ptr [rip + 0x2a050b], rax ; ret
0x00000000004017e0 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x00000000004179de : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000045adfe : add byte ptr [rax], al ; mov rax, 0xf ; syscall
0x000000000047496e : add byte ptr [rax], al ; mov rax, 1 ; ret
0x000000000047497e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x000000000047498e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x000000000047499e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000004749ae : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000004749be : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000004749ce : add byte ptr [rax], al ; mov rax, 7 ; ret
0x000000000047cd03 : add byte ptr [rax], al ; mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x00000000004118de : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000481bae : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000047c51e : add byte ptr [rax], al ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000471fbe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000041879e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000048d28e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000048d31e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000048d37e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000048d36e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000048d32e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x0000000000457aae : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2643c1] ; ret
0x000000000044f5be : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x26d371] ; ret
0x000000000041877e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2a0999] ; ret
0x000000000048b05e : add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0xa8] ; ret
0x0000000000473b8e : add byte ptr [rax], al ; mov rax, r8 ; vzeroupper ; ret
0x0000000000413e54 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048d488 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000410372 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004187ae : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000041dd7e : add byte ptr [rax], al ; mov rax, rsi ; ret
0x000000000047fb6a : add byte ptr [rax], al ; mov rbx, rsp ; mov rsi, rbx ; syscall
0x000000000044706f : add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044b409 : add byte ptr [rax], al ; mov rdi, qword ptr [r13] ; call r12
0x000000000040e9c1 : add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000049215e : add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x00000000004918be : add byte ptr [rax], al ; mov rdi, r15 ; call rax
0x000000000046f01f : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000004356ae : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000456497 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x456454
0x00000000004203c6 : add byte ptr [rax], al ; mov rsi, qword ptr [rsp + 0x68] ; call rax
0x000000000048dcfe : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, r12 ; call r15
0x000000000042362e : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rax ; call rcx
0x000000000048102e : add byte ptr [rax], al ; movsx eax, dl ; sub eax, ecx ; ret
0x000000000048b115 : add byte ptr [rax], al ; movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x000000000046f1d4 : add byte ptr [rax], al ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000045a43d : add byte ptr [rax], al ; movsxd rdi, dword ptr [r11 + rsi*4] ; add rdi, r11 ; jmp rdi
0x0000000000459f3e : add byte ptr [rax], al ; movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x0000000000412d2e : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000044825e : add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x00000000004352de : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004359be : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000043594e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004b327e : add byte ptr [rax], al ; nop ; and edi, esp ; jmp qword ptr [rcx]
0x00000000004853ec : add byte ptr [rax], al ; nop ; mov eax, 0x27 ; syscall
0x000000000044bdfc : add byte ptr [rax], al ; nop ; mov eax, 0x63 ; syscall
0x0000000000474edc : add byte ptr [rax], al ; nop ; mov eax, 0xc9 ; syscall
0x0000000000400ba9 : add byte ptr [rax], al ; nop ; pop rbp ; ret
0x00000000004b09ca : add byte ptr [rax], al ; nop ; push rcx ; add byte ptr [rax], al ; push rdi ; sti ; hlt ; jmp qword ptr [rbx]
0x000000000044c039 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x00000000004af946 : add byte ptr [rax], al ; or al, 0x41 ; add byte ptr [rax], al ; xor al, 0x7a ; stc ; call rsp
0x00000000004af9c2 : add byte ptr [rax], al ; or al, 0x83 ; stc ; call qword ptr [rdx]
0x00000000004b5842 : add byte ptr [rax], al ; or byte ptr [rax - 0x7af80000], ah ; std ; call qword ptr [rbx]
0x00000000004b1742 : add byte ptr [rax], al ; or byte ptr [rdi], bl ; add byte ptr [rax - 0x71], bl ; cli ; call qword ptr [rdx]
0x00000000004b4876 : add byte ptr [rax], al ; or byte ptr [rdx], al ; std ; jmp qword ptr [rdx]
0x00000000004b2e7e : add byte ptr [rax], al ; or byte ptr [rsi], 0xfc ; jmp qword ptr [rbx]
0x00000000004b3006 : add byte ptr [rax], al ; pop rax ; adc al, 0xfc ; jmp qword ptr [rax]
0x00000000004b0192 : add byte ptr [rax], al ; pop rax ; add byte ptr [r8], al ; cwde ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x00000000004af606 : add byte ptr [rax], al ; pop rax ; xchg eax, esi ; clc ; call qword ptr [rax]
0x000000000044a7be : add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x0000000000400a96 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000046600b : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000457c0a : add byte ptr [rax], al ; pop rbx ; pop r12 ; ret
0x0000000000414303 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004172b5 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040fbfa : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000400db6 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b52d6 : add byte ptr [rax], al ; pop rcx ; std ; call qword ptr [rdx]
0x00000000004add82 : add byte ptr [rax], al ; pop rsp ; mov ch, 0xf6 ; call qword ptr [rsi]
0x00000000004b3f9e : add byte ptr [rax], al ; push rax ; add byte ptr [rax], al ; add ah, bh ; ret 0xfffc
0x00000000004b2c6e : add byte ptr [rax], al ; push rax ; cld ; sti ; jmp qword ptr [rbx]
0x00000000004add6e : add byte ptr [rax], al ; push rax ; mov ch, 0xf6 ; call qword ptr [rsi]
0x00000000004b40ee : add byte ptr [rax], al ; push rax ; retf
0x00000000004b09ce : add byte ptr [rax], al ; push rdi ; sti ; hlt ; jmp qword ptr [rbx]
0x00000000004ae54f : add byte ptr [rax], al ; push rsi ; jmp rsi
0x00000000004b0d8e : add byte ptr [rax], al ; push rsp ; push rbp ; add byte ptr [rax], al ; sub al, 3 ; cli ; jmp qword ptr [rdx]
0x00000000004af61a : add byte ptr [rax], al ; push rsp ; xchg eax, esi ; clc ; jmp qword ptr [rsi]
0x00000000004b0212 : add byte ptr [rax], al ; pushfq ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call rsi
0x00000000004b5052 : add byte ptr [rax], al ; pushfq ; std ; jmp rsp
0x00000000004b0d0a : add byte ptr [rax], al ; rcl byte ptr [rax + rax], 1 ; adc bh, bh ; stc ; call qword ptr [rax]
0x00000000004b0fee : add byte ptr [rax], al ; rcr byte ptr [rdi], 1 ; cli ; call qword ptr [rdi]
0x0000000000400a5e : add byte ptr [rax], al ; ret
0x00000000004983a6 : add byte ptr [rax], al ; ret 0
0x000000000049f31e : add byte ptr [rax], al ; ret 0x10
0x00000000004a0fee : add byte ptr [rax], al ; ret 0x1d4
0x00000000004a1786 : add byte ptr [rax], al ; ret 0x1d5
0x000000000049fff6 : add byte ptr [rax], al ; ret 0x24
0x00000000004a04e6 : add byte ptr [rax], al ; ret 0x33
0x000000000049eb1e : add byte ptr [rax], al ; ret 0xa
0x000000000049ef1e : add byte ptr [rax], al ; ret 0xd
0x00000000004a23c2 : add byte ptr [rax], al ; ret 1
0x00000000004a25c2 : add byte ptr [rax], al ; ret 2
0x00000000004a27c2 : add byte ptr [rax], al ; ret 3
0x00000000004a29c2 : add byte ptr [rax], al ; ret 4
0x00000000004a2bc2 : add byte ptr [rax], al ; ret 5
0x000000000049e6c6 : add byte ptr [rax], al ; ret 6
0x00000000004a2fc2 : add byte ptr [rax], al ; ret 7
0x00000000004a31c2 : add byte ptr [rax], al ; ret 8
0x00000000004a33c2 : add byte ptr [rax], al ; ret 9
0x00000000004983ca : add byte ptr [rax], al ; retf
0x00000000004983c6 : add byte ptr [rax], al ; retf 0
0x000000000049f47e : add byte ptr [rax], al ; retf 0x11
0x00000000004a1026 : add byte ptr [rax], al ; retf 0x1d4
0x00000000004a17c6 : add byte ptr [rax], al ; retf 0x1d5
0x00000000004a0036 : add byte ptr [rax], al ; retf 0x24
0x00000000004a0526 : add byte ptr [rax], al ; retf 0x33
0x000000000049ec7e : add byte ptr [rax], al ; retf 0xb
0x000000000049f07e : add byte ptr [rax], al ; retf 0xe
0x000000000049f69e : add byte ptr [rax], al ; retf 1
0x00000000004a25d2 : add byte ptr [rax], al ; retf 2
0x00000000004a27d2 : add byte ptr [rax], al ; retf 3
0x000000000049e526 : add byte ptr [rax], al ; retf 4
0x00000000004a2bd2 : add byte ptr [rax], al ; retf 5
0x00000000004a2dd2 : add byte ptr [rax], al ; retf 6
0x00000000004a2fd2 : add byte ptr [rax], al ; retf 7
0x00000000004a31d2 : add byte ptr [rax], al ; retf 8
0x00000000004a33d2 : add byte ptr [rax], al ; retf 9
0x00000000004a29be : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x000000000049edc6 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x00000000004b4f82 : add byte ptr [rax], al ; sbb al, 0x35 ; std ; jmp qword ptr [rdx]
0x00000000004b0f56 : add byte ptr [rax], al ; sbb al, 0x57 ; add byte ptr [rax], al ; test byte ptr [rsi], dl ; cli ; call rcx
0x00000000004b4152 : add byte ptr [rax], al ; sbb byte ptr [rcx - 0x32380000], cl ; cld ; jmp qword ptr [rsi]
0x00000000004af652 : add byte ptr [rax], al ; sbb byte ptr [rsi], bh ; add byte ptr [rax], al ; cwde ; fprem ; call qword ptr [rax]
0x000000000041edfc : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004b0766 : add byte ptr [rax], al ; sub al, 0x4f ; add byte ptr [rax], al ; mov ah, 0xcd ; stc ; jmp qword ptr [rdx]
0x00000000004afa12 : add byte ptr [rax], al ; sub al, 0x83 ; stc ; jmp rbx
0x00000000004b0d92 : add byte ptr [rax], al ; sub al, 3 ; cli ; jmp qword ptr [rdx]
0x00000000004b0462 : add byte ptr [rax], al ; sub byte ptr [rax + rax], cl ; call 0x124afe2e
0x00000000004b0162 : add byte ptr [rax], al ; sub byte ptr [rcx], cl ; add byte ptr [rax - 0x5b], ch ; stc ; jmp qword ptr [rcx]
0x00000000004afe62 : add byte ptr [rax], al ; sub byte ptr [rsi], al ; add al, bl ; xchg eax, edi ; stc ; jmp qword ptr [rcx]
0x00000000004b2e62 : add byte ptr [rax], al ; sub byte ptr [rsi], dh ; add byte ptr [rax + 0xb], bh ; cld ; jmp qword ptr [rax]
0x00000000004b4606 : add byte ptr [rax], al ; sub dl, ch ; cld ; jmp qword ptr [rcx]
0x00000000004ae13b : add byte ptr [rax], al ; sub dword ptr [rax], eax ; add al, dl ; retf
0x000000000042d09c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000417b26 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x0000000000446bb1 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000040dba2 : add byte ptr [rax], al ; syscall
0x00000000004abd86 : add byte ptr [rax], al ; test al, 0x99 ; cmc ; call rax
0x00000000004abce2 : add byte ptr [rax], al ; test al, 4 ; add byte ptr [rax], al ; js 0x4abc86 ; cmc ; call qword ptr [rdx]
0x00000000004af9be : add byte ptr [rax], al ; test byte ptr [rcx], al ; add byte ptr [rbx + rax*4], cl ; stc ; call qword ptr [rdx]
0x00000000004b0f5a : add byte ptr [rax], al ; test byte ptr [rsi], dl ; cli ; call rcx
0x000000000044bd59 : add byte ptr [rax], al ; test eax, eax ; cmove eax, edx ; ret
0x0000000000400409 : add byte ptr [rax], al ; test rax, rax ; je 0x400419 ; call rax
0x000000000042b99e : add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x00000000004b4f7e : add byte ptr [rax], al ; xchg eax, edi ; add byte ptr [rax], al ; sbb al, 0x35 ; std ; jmp qword ptr [rdx]
0x00000000004ae1ce : add byte ptr [rax], al ; xchg eax, esp ; sub dword ptr [rax], eax ; add ah, cl ; sal esi, cl ; call qword ptr [rax]
0x00000000004b17ea : add byte ptr [rax], al ; xchg eax, esp ; xchg eax, esp ; cli ; call qword ptr [rcx]
0x00000000004b146e : add byte ptr [rax], al ; xor al, 0x5c ; add byte ptr [rax], al ; jae 0x4b147a ; call qword ptr [rdx]
0x00000000004af94a : add byte ptr [rax], al ; xor al, 0x7a ; stc ; call rsp
0x00000000004b2c6a : add byte ptr [rax], al ; xor byte ptr [rax + rax], dh ; push rax ; cld ; sti ; jmp qword ptr [rbx]
0x000000000045ca97 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000475df6 : add byte ptr [rax], al ; xor eax, eax ; leave ; ret
0x000000000040eca3 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048d495 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000040f256 : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004499be : add byte ptr [rax], al ; xor eax, eax ; syscall
0x000000000042b8ea : add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x000000000044a49a : add byte ptr [rax], al ; xor edi, edi ; syscall
0x00000000004579d6 : add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x0000000000444c6e : add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000494c68 : add byte ptr [rax], bh ; cli ; call qword ptr [rax + 0x20fffa37]
0x0000000000400bdc : add byte ptr [rax], bh ; leave ; ret
0x00000000004b4873 : add byte ptr [rax], bh ; nop ; add byte ptr [rax], al ; or byte ptr [rdx], al ; std ; jmp qword ptr [rdx]
0x00000000004b0037 : add byte ptr [rax], bh ; popfq ; stc ; call qword ptr [rbx]
0x0000000000480f6e : add byte ptr [rax], bh ; retf 0x850f
0x00000000004af653 : add byte ptr [rax], bl ; add byte ptr ds:[rax], al ; cwde ; fprem ; call qword ptr [rax]
0x00000000004b0463 : add byte ptr [rax], ch ; add byte ptr [rax], r8b ; call 0x124afe2d
0x00000000004b2e63 : add byte ptr [rax], ch ; jbe 0x4b2e6f ; add byte ptr [rax + 0xb], bh ; cld ; jmp qword ptr [rax]
0x00000000004adbf7 : add byte ptr [rax], ch ; mov bl, 0xf6 ; call qword ptr [rsi]
0x00000000004ac2c7 : add byte ptr [rax], ch ; sub esi, esi ; call qword ptr [rax]
0x00000000004b4877 : add byte ptr [rax], cl ; add bh, ch ; jmp qword ptr [rdx]
0x000000000048ba5e : add byte ptr [rax], cl ; mov byte ptr [rip + 0x230749], 8 ; ret
0x000000000048ba65 : add byte ptr [rax], cl ; ret
0x00000000004afa27 : add byte ptr [rax], cl ; test cl, bh ; call qword ptr [rdx]
0x00000000004b5847 : add byte ptr [rax], cl ; test ebp, edi ; call qword ptr [rbx]
0x00000000004b2c6b : add byte ptr [rax], dh ; je 0x4b2c77 ; add byte ptr [rax - 4], dl ; sti ; jmp qword ptr [rbx]
0x00000000004ac2ef : add byte ptr [rax], dh ; sub esi, esi ; jmp qword ptr [rax]
0x00000000004afa4f : add byte ptr [rax], dh ; test cl, bh ; call qword ptr [rbx]
0x00000000004b3f9f : add byte ptr [rax], dl ; add byte ptr [rax], al ; cld ; ret 0xfffc
0x00000000004af44b : add byte ptr [rax], dl ; cmp al, 0 ; add al, dh ; ret 0xfff7
0x000000000044b2fd : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004b0465 : add byte ptr [rax], r8b ; call 0x124afe2b
0x000000000042384d : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x000000000044a72d : add byte ptr [rax], r8b ; mov eax, 0x1c ; syscall
0x000000000047563d : add byte ptr [rax], r8b ; mov eax, 0x66 ; syscall
0x000000000044a6fd : add byte ptr [rax], r8b ; mov eax, 0xa ; syscall
0x00000000004188dd : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x000000000041844d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000044429d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000004442dd : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000004203c5 : add byte ptr [rax], r8b ; mov rsi, qword ptr [rsp + 0x68] ; call rax
0x0000000000400a95 : add byte ptr [rax], r8b ; pop rbp ; ret
0x0000000000484cfd : add byte ptr [rax], r8b ; pop rbx ; ret
0x0000000000400a5d : add byte ptr [rax], r8b ; ret
0x000000000044666d : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x00000000004496a6 : add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x000000000048510f : add byte ptr [rbp + 0x12], dh ; add rsp, 0x38 ; ret
0x000000000048e183 : add byte ptr [rbp + 0x1a], dh ; ret
0x00000000004759cd : add byte ptr [rbp + 0x1b], dh ; add rsp, 0x38 ; ret
0x00000000004488ee : add byte ptr [rbp + 0x23], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000481f34 : add byte ptr [rbp + 0x27], dh ; add rsp, 0x68 ; ret
0x0000000000481e74 : add byte ptr [rbp + 0x2c], dh ; add rsp, 0x38 ; ret
0x000000000047fd73 : add byte ptr [rbp + 0x2d], dh ; call qword ptr [rip + 0x23cae4]
0x00000000004131aa : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x00000000004579d7 : add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000482095 : add byte ptr [rbp + 0x36], dh ; add rsp, 0x78 ; ret
0x00000000004843a0 : add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x000000000044a7bf : add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x00000000004498d6 : add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x000000000047589b : add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x0000000000416507 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000449c66 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x68 ; ret
0x00000000004127e7 : add byte ptr [rbp + 0x63], cl ; retf 0xc148
0x0000000000482fcf : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x0000000000482ebf : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000044a5d5 : add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x000000000048846a : add byte ptr [rbp + 0xf], dh ; add rsp, 0x38 ; ret
0x00000000004878da : add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x000000000045ad4e : add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x000000000048502c : add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x000000000041a08f : add byte ptr [rbp + 6], dh ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048d2b8 : add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x00000000004907ee : add byte ptr [rbp + rax - 0x18], dh ; retf 0xfca3
0x000000000048d1d0 : add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000049ef17 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x0000000000477fef : add byte ptr [rbp + rcx*4 + 0x2d], cl ; ret 2
0x00000000004675d5 : add byte ptr [rbp + rcx*4 + 0x35], cl ; ret
0x0000000000458446 : add byte ptr [rbp + rcx*4 + 0x3d], cl ; jmp rdx
0x000000000041f0eb : add byte ptr [rbp + rcx*4 + 0x46], cl ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000047212e : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x0000000000472228 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x0000000000472322 : add byte ptr [rbp + rcx*4 + 0x4d], cl ; ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x000000000048584e : add byte ptr [rbp + rcx*4 + 4], cl ; retf 0x8b41
0x0000000000487d4c : add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x000000000048fb06 : add byte ptr [rbp + rcx*4 + 5], cl ; retf 0x1bc
0x00000000004b0d8f : add byte ptr [rbp + rdx*2], dl ; add byte ptr [rbx + rax], ch ; cli ; jmp qword ptr [rdx]
0x00000000004add83 : add byte ptr [rbp + rsi*4 - 0xa], bl ; call qword ptr [rsi]
0x0000000000490214 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x000000000044bd5a : add byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000049f1c3 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x0000000000448f47 : add byte ptr [rbp - 0x57c03b0], cl ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000486bd4 : add byte ptr [rbp - 0x75], al ; or byte ptr [rbx + 0x394401c2], al ; retf 0x830f
0x0000000000482b4f : add byte ptr [rbp - 0x75], cl ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x0000000000468d89 : add byte ptr [rbp - 0x75], cl ; je 0x468dba ; and byte ptr [rax + 1], cl ; ret
0x000000000042736d : add byte ptr [rbp - 0x77], cl ; retf
0x000000000044d4c5 : add byte ptr [rbp - 0xcf98b40], al ; ret
0x000000000048f5a7 : add byte ptr [rbp - 0xcfb8b40], al ; ret
0x00000000004add7f : add byte ptr [rbp], al ; add byte ptr [rbp + rsi*4 - 0xa], bl ; call qword ptr [rsi]
0x000000000043d269 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x00000000004861bc : add byte ptr [rbx + 0x158bcc45], cl ; retf 0x2366
0x00000000004915a3 : add byte ptr [rbx + 0x22826a3d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000048540d : add byte ptr [rbx + 0x236d4c0d], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000047fdf5 : add byte ptr [rbx + 0x23a3eb0d], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x00000000004239cf : add byte ptr [rbx + 0x29841a15], cl ; add bh, dh ; ret 0
0x000000000042033f : add byte ptr [rbx + 0x2994ce3d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000418817 : add byte ptr [rbx + 0x2a34f505], al ; add byte ptr [rcx], al ; ret
0x0000000000419e0f : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000457c0b : add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x00000000004442af : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x0000000000443ddf : add byte ptr [rbx + 0x48028901], cl ; lea eax, [rdx + 3] ; ret
0x000000000043514f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000421acf : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x00000000004124b8 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000414304 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000405dc1 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040fbfb : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000459f3f : add byte ptr [rbx + 0x63], cl ; xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x000000000048f5ff : add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x000000000044a9f4 : add byte ptr [rbx + 0x94801e1], al ; retf 0x8949
0x0000000000473d6a : add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004afa13 : add byte ptr [rbx + rax*4], ch ; stc ; jmp rbx
0x00000000004af9c3 : add byte ptr [rbx + rax*4], cl ; stc ; call qword ptr [rdx]
0x00000000004b0d93 : add byte ptr [rbx + rax], ch ; cli ; jmp qword ptr [rdx]
0x000000000048d277 : add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x0000000000484577 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000488377 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000041cc42 : add byte ptr [rbx + rcx*4 + 0xd], al ; ret 0x29fb
0x00000000004b14f3 : add byte ptr [rbx + rsi*2 - 6], bh ; jmp rax
0x00000000004b1473 : add byte ptr [rbx + rsi*2 - 6], cl ; call qword ptr [rdx]
0x00000000004482d8 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x00000000004482e6 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x00000000004482df : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x00000000004482f4 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x00000000004482ed : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x00000000004482d1 : add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x0000000000471f79 : add byte ptr [rbx - 0x3d], bl ; nop dword ptr [rax] ; ret
0x000000000046cfff : add byte ptr [rbx - 0x4f743], al ; jmp qword ptr [rax]
0x000000000044854e : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xf8e9
0x000000000046600c : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000446296 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000406f05 : add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000040a9d1 : add byte ptr [rbx - 0x7bf0fc06], al ; retf 0xd
0x000000000040ac36 : add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x0000000000409de4 : add byte ptr [rbx - 0x7bf0fc08], al ; retf 6
0x0000000000410cb8 : add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x0000000000407c7c : add byte ptr [rbx - 0x7bf0fe02], al ; ret 0x1b
0x0000000000407032 : add byte ptr [rbx - 0x7bf0fe06], al ; retf
0x000000000040709e : add byte ptr [rbx - 0x7bf0fe07], al ; retf 0x1b
0x0000000000409e4f : add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x0000000000409ef2 : add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x0000000000412d37 : add byte ptr [rbx - 0x7c2e76ed], cl ; retf 0x8320
0x000000000048f01f : add byte ptr [rbx - 0x7fbf8f19], al ; jmp qword ptr [rax]
0x00000000004a4e1f : add byte ptr [rbx], ah ; xchg ebp, edi ; lcall [rax + 0x74] ; std ; call qword ptr [rax]
0x000000000047b767 : add byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x000000000046047d : add byte ptr [rcx + 0x29], al ; retf 0x8944
0x00000000004672c5 : add byte ptr [rcx + 0x29], cl ; ret
0x000000000042a385 : add byte ptr [rcx + 0x29], cl ; retf
0x00000000004116af : add byte ptr [rcx + 0x2b], cl ; adc byte ptr [r8 + 1], r9b ; ret
0x0000000000411616 : add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x0000000000489ad2 : add byte ptr [rcx + 0x348b4cd8], cl ; ret 0xf41
0x000000000047392f : add byte ptr [rcx + 0x39], cl ; ret
0x000000000040fcbd : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x00000000004192b0 : add byte ptr [rcx + 0x4789246f], cl ; adc byte ptr [rbx + 0x5d], bl ; ret
0x0000000000412d20 : add byte ptr [rcx + 0x5c], al ; pop r13 ; pop r14 ; ret
0x0000000000471abc : add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000042daee : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000048b116 : add byte ptr [rcx + 0x63], cl ; add al, 0x87 ; add rax, r15 ; jmp rax
0x000000000045a43e : add byte ptr [rcx + 0x63], cl ; cmp al, 0xb3 ; add rdi, r11 ; jmp rdi
0x000000000042c34c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000444128 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000460ae9 : add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000046c8ca : add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x0000000000485ac6 : add byte ptr [rcx + 0xc8b48d8], cl ; ret 0xb60f
0x00000000004695d8 : add byte ptr [rcx + 0xf], al ; mov dh, 0x46 ; or al, 0x83 ; ret
0x000000000046d864 : add byte ptr [rcx + 0xf], al ; ret 0x3941
0x0000000000461e0f : add byte ptr [rcx + 0xf], al ; ret 0xc839
0x0000000000466e77 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000046be8a : add byte ptr [rcx + 1], al ; ret 0x8b48
0x000000000044699f : add byte ptr [rcx + 1], cl ; ret
0x000000000040e115 : add byte ptr [rcx + 1], cl ; ret 0x149
0x000000000048c365 : add byte ptr [rcx + 1], cl ; ret 0xef89
0x000000000041928d : add byte ptr [rcx + rax + 0x57], al ; sbb byte ptr [rax + 0x39], cl ; ret
0x00000000004021d2 : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x00000000004af9bf : add byte ptr [rcx + rax*2 - 0x7cf40000], al ; stc ; call qword ptr [rdx]
0x00000000004af947 : add byte ptr [rcx + rax*2], cl ; add byte ptr [rax], al ; xor al, 0x7a ; stc ; call rsp
0x000000000047587c : add byte ptr [rcx + rbp - 0x48], dh ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000004b215f : add byte ptr [rcx + rbp*2], ah ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; xchg eax, ebx ; sti ; jmp qword ptr [rax]
0x0000000000416bb4 : add byte ptr [rcx + rcx - 0xd], dh ; ret
0x0000000000490ace : add byte ptr [rcx + rcx*4 + 0x2d], cl ; ret 0x229f
0x000000000049215f : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000473b8f : add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x000000000048dcff : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call r15
0x00000000004918bf : add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000423f6f : add byte ptr [rcx + rcx*8 - 0x7cb7dd8c], al ; ret 0x4801
0x000000000041f768 : add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x41f737 ; ret
0x00000000004941b4 : add byte ptr [rcx + rdi*8 - 0x66b6f01], dl ; jmp qword ptr [rax]
0x0000000000493f98 : add byte ptr [rcx + rdi*8], ah ; jmp qword ptr [rax]
0x00000000004554ef : add byte ptr [rcx - 0x46], al ; add eax, 0xe9000000 ; ret
0x000000000045aec2 : add byte ptr [rcx - 0x46], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000047f17b : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000047f218 : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0xc74
0x000000000040e187 : add byte ptr [rcx - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000044b40a : add byte ptr [rcx - 0x75], cl ; jge 0x44b415 ; call r12
0x000000000044b43a : add byte ptr [rcx - 0x75], cl ; jge 0x44b445 ; call r12
0x000000000049226f : add byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x000000000044bec7 : add byte ptr [rcx - 0x77], al ; ret
0x000000000046c28e : add byte ptr [rcx - 0x77], al ; ret 0x1674
0x000000000046ada7 : add byte ptr [rcx - 0x77], al ; retf
0x000000000045867b : add byte ptr [rcx - 0x77], cl ; push rsi ; cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000045eac7 : add byte ptr [rcx - 0x77], cl ; ret
0x0000000000404800 : add byte ptr [rcx - 0x77], cl ; ret 0x149
0x0000000000491912 : add byte ptr [rcx - 0x77], cl ; ret 0x8349
0x0000000000479de4 : add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000044bdcf : add byte ptr [rcx - 0x77], cl ; retf 0x19b8
0x000000000048aa9a : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x000000000048aba9 : add byte ptr [rcx - 0x7b], cl ; ret 0x840f
0x000000000047157b : add byte ptr [rcx - 0x7cb7e8f4], cl ; ret 0x4804
0x000000000048adaf : add byte ptr [rcx - 0x7d], al ; retf 0xb801
0x00000000004612a2 : add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000045b297 : add byte ptr [rcx - 0x7d], cl ; call qword ptr [rbx]
0x000000000041cf47 : add byte ptr [rcx - 0x7d], cl ; ret
0x00000000004194cf : add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000045b50e : add byte ptr [rcx - 0x7d], cl ; ret 0x6601
0x00000000004261af : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000424abf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000044a9b2 : add byte ptr [rcx - 0x7d], cl ; retf
0x000000000042bb72 : add byte ptr [rcx - 9], cl ; ret 1
0x000000000042bb98 : add byte ptr [rcx - 9], cl ; ret 2
0x00000000004558ae : add byte ptr [rcx], 0 ; add al, ch ; pop rcx ; ret 0xfffa
0x0000000000455a34 : add byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; retf 0x8966
0x000000000048b56a : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(1) ; ret
0x0000000000446baf : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000040eb8f : add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400b0b : add byte ptr [rcx], al ; pop rbp ; ret
0x000000000047fdfb : add byte ptr [rcx], al ; pop rbx ; ret
0x000000000041881d : add byte ptr [rcx], al ; ret
0x000000000044d4dc : add byte ptr [rcx], bh ; ret
0x000000000047809c : add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000404036 : add byte ptr [rcx], dh ; imul al ; ret 0xbfbf
0x000000000044a685 : add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x0000000000422d34 : add byte ptr [rcx], dh ; push qword ptr [rcx] ; shr al, 0xc2 ; retf
0x000000000040eca4 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000042b47c : add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x0000000000475a0a : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0x475a41 ; ret
0x00000000004148df : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x4148f9 ; ret
0x000000000044d4fb : add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x0000000000494770 : add byte ptr [rcx], dl ; cli ; call qword ptr [rax + 0x20fffa10]
0x0000000000432f9a : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000048cfe5 : add byte ptr [rdi + 1], bh ; call r14
0x000000000048d00d : add byte ptr [rdi + 1], bh ; call rax
0x000000000048dd5c : add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x00000000004b17e7 : add byte ptr [rdi + rbx*2 - 0x6b6c0000], ch ; cli ; call qword ptr [rcx]
0x0000000000482547 : add byte ptr [rdi + rcx + 0x44], cl ; retf 0x8d48
0x0000000000459a2f : add byte ptr [rdi + rcx - 0x42], cl ; retf 0x4a8d
0x0000000000463445 : add byte ptr [rdi + rcx - 0x4a], al ; or al, 0x89 ; ret 0xc689
0x00000000004b0767 : add byte ptr [rdi + rcx*2], ch ; add byte ptr [rax], al ; mov ah, 0xcd ; stc ; jmp qword ptr [rdx]
0x00000000004b0f57 : add byte ptr [rdi + rdx*2], bl ; add byte ptr [rax], al ; test byte ptr [rsi], dl ; cli ; call rcx
0x00000000004b09cf : add byte ptr [rdi - 5], dl ; hlt ; jmp qword ptr [rbx]
0x000000000040dbb6 : add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x0000000000481116 : add byte ptr [rdi], cl ; add eax, 0x940fc085 ; ret 0x3d
0x0000000000434916 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000004481a7 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043594f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004359bf : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000045437b : add byte ptr [rdi], cl ; mov dh, 0x4e ; add dword ptr [rcx - 0x77], eax ; retf
0x0000000000455484 : add byte ptr [rdi], cl ; mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x000000000045546f : add byte ptr [rdi], cl ; mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x0000000000455499 : add byte ptr [rdi], cl ; mov dh, 0x78 ; add ecx, dword ptr [rax + 0x39] ; retf
0x000000000044825f : add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x0000000000425d5f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000412d2f : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042c0df : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042bc1f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000004625ab : add byte ptr [rdi], cl ; mov ds, word ptr [rax + rax + 0x63490000] ; ret 0x8944
0x000000000042b4af : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042b4df : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042b4cf : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000042b4bf : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x000000000046c8c4 : add byte ptr [rdi], cl ; mov ss, word ptr [rax + rax + 0x63490000] ; ret 0x8948
0x000000000047bac3 : add byte ptr [rdi], cl ; ret 0x8d48
0x000000000045897b : add byte ptr [rdi], cl ; ret 0xc083
0x00000000004656a3 : add byte ptr [rdi], cl ; retf 0x45e9
0x000000000042a37f : add byte ptr [rdi], cl ; sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x000000000040db9b : add byte ptr [rdi], cl ; sub dword ptr [rsp + 0xf0], eax ; syscall
0x00000000004111c6 : add byte ptr [rdi], cl ; test dword ptr [rcx - 0x16000002], esi ; retf 0xfffe
0x0000000000421cde : add byte ptr [rdi], cl ; test ebx, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000469a38 : add byte ptr [rdi], cl ; xchg dword ptr [rdx + rbx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042073e : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3d83
0x0000000000476903 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000044f944 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x00000000004558ac : add byte ptr [rdx + 0x180], bh ; call 0x401b18
0x0000000000455869 : add byte ptr [rdx + 0x19f], bh ; call 0x401b18
0x0000000000455888 : add byte ptr [rdx + 0x1be], bh ; call 0x401b18
0x00000000004558d3 : add byte ptr [rdx + 0x22f], bh ; call 0x401b18
0x0000000000455013 : add byte ptr [rdx + 0x305], bh ; call 0x401b18
0x000000000045584a : add byte ptr [rdx + 0x309], bh ; call 0x401b18
0x0000000000443d9f : add byte ptr [rdx + 0x48028801], cl ; lea eax, [rdx] ; ret
0x00000000004425ef : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x000000000048d1e7 : add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000047c1fc : add byte ptr [rdx + 0x63], cl ; add al, 0xa1 ; add rax, rcx ; jmp rax
0x000000000047cb24 : add byte ptr [rdx + 0x63], cl ; add al, 0xa7 ; add rax, rdi ; jmp rax
0x00000000004129c7 : add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000049eb17 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x0000000000457240 : add byte ptr [rdx + rdi*2 - 0xa], dh ; ret
0x000000000045723f : add byte ptr [rdx + rdi*2 - 0xa], sil ; ret
0x00000000004af94b : add byte ptr [rdx + rdi*2], dh ; stc ; call rsp
0x0000000000494558 : add byte ptr [rdx + rdi*8], dl ; call qword ptr [rax + 0x20fffa13]
0x00000000004b3cf7 : add byte ptr [rdx - 0x38], dl ; hlt ; jmp qword ptr [rcx]
0x0000000000494020 : add byte ptr [rdx - 7], dl ; push qword ptr [rax + 0x53] ; stc ; jmp rax
0x000000000041981f : add byte ptr [rdx], ch ; add bl, dh ; ret
0x000000000044bf67 : add byte ptr [rsi + 0x80], bh ; syscall
0x0000000000485342 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x000000000042c654 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004634ea : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x0000000000463513 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x3e8
0x000000000041a477 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x4466
0x0000000000419eaf : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x000000000046626a : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xace8
0x00000000004634b1 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x000000000046620c : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x000000000042b3e4 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000041a476 : add byte ptr [rsi + 0xf], spl ; outsd dx, dword ptr [rsi] ; ret 0x4466
0x0000000000424561 : add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x000000000044e277 : add byte ptr [rsi + rbp*4 - 0x18], dh ; xchg eax, ecx ; retf 0
0x00000000004af61b : add byte ptr [rsi + rdx*4 - 8], dl ; jmp qword ptr [rsi]
0x0000000000456000 : add byte ptr [rsi + rsi*2 - 0xa], dh ; ret
0x0000000000455fff : add byte ptr [rsi + rsi*2 - 0xa], sil ; ret
0x00000000004853ed : add byte ptr [rsi - 0x70], ah ; mov eax, 0x27 ; syscall
0x000000000044bdfd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x63 ; syscall
0x0000000000474edd : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc9 ; syscall
0x00000000004004cd : add byte ptr [rsi - 0x70], ah ; ret
0x0000000000424527 : add byte ptr [rsi - 9], dh ; ret 0
0x00000000004171a5 : add byte ptr [rsp + rax - 0x58], dh ; add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x00000000004abcf7 : add byte ptr [rsp + rax - 0x6c7c0000], bh ; cmc ; call rsp
0x00000000004b14ef : add byte ptr [rsp + rbx*2 + 0x737c0000], dh ; cli ; jmp rax
0x00000000004b146f : add byte ptr [rsp + rbx*2], dh ; add byte ptr [rax], al ; jae 0x4b1479 ; call qword ptr [rdx]
0x0000000000400dee : add byte ptr [rsp + rcx - 0x7f], dh ; retf 0x440
0x0000000000452cbc : add byte ptr [rsp + rsi - 0xa], dh ; ret
0x00000000004b1cc7 : add byte ptr [rsp - 0x202c0000], cl ; cli ; call qword ptr [rsi]
0x00000000004accf3 : add byte ptr [rsp - 0xa], ch ; jmp rdx
0x00000000004af67d : add byte ptr ds:[rax], al ; and ch, dh ; clc ; call qword ptr [rax]
0x00000000004af655 : add byte ptr ds:[rax], al ; cwde ; fprem ; call qword ptr [rax]
0x000000000041981e : add byte ptr ds:[rdx], ch ; add bl, dh ; ret
0x0000000000449075 : add byte ptr es:[rax + 0x39], cl ; ret
0x000000000044d4c4 : add byte ptr es:[rbp - 0xcf98b40], al ; ret
0x000000000044e276 : add byte ptr es:[rsi + rbp*4 - 0x18], dh ; xchg eax, ecx ; retf 0
0x00000000004b40e8 : add byte ptr fs:[rax], al ; add byte ptr [rax + 0x50000088], dh ; retf
0x000000000044bd57 : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000049ef23 : add ch, al ; or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x0000000000415712 : add ch, al ; pop rax ; ret
0x0000000000415819 : add ch, al ; push rcx ; ret 0xffff
0x000000000047373f : add ch, al ; std ; xlatb ; retf 0xc985
0x00000000004a99fc : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004a99fd : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00000000004b401d : add ch, byte ptr [rbp + rcx + 7] ; ret
0x0000000000471e3a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000422e6a : add ch, byte ptr [rdi - 1] ; dec dword ptr [rbx + 0x90c2454] ; ret 0xbae9
0x0000000000469613 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004acc2f : add ch, byte ptr [rsi + rcx + 8] ; ret
0x000000000048be57 : add ch, cl ; retf 0xfffc
0x0000000000495154 : add cl, bh ; cli ; jmp qword ptr [rax]
0x00000000004a8dca : add cl, bl ; retf 0xea91
0x0000000000442617 : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x0000000000469df2 : add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x000000000045522e : add cl, byte ptr [rax + 0x39] ; ret
0x0000000000469346 : add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000455488 : add cl, byte ptr [rax + 0x39] ; retf
0x0000000000432b9a : add cl, byte ptr [rax + 0x39] ; retf 0x820f
0x0000000000447f74 : add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x000000000041d11b : add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041cd78 : add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x00000000004247fc : add cl, byte ptr [rax + 0xf] ; ret 0xc3f3
0x00000000004117b4 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000000004116d3 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000450dcc : add cl, byte ptr [rax + 1] ; fimul word ptr [rax + 1] ; ret
0x00000000004557c6 : add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x0000000000442618 : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x0000000000442585 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000485645 : add cl, byte ptr [rax - 0x77] ; je 0x485676 ; or byte ptr [rax + 1], cl ; ret
0x000000000047e794 : add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x0000000000418432 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x0000000000440de0 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000440e43 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x000000000048413d : add cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x000000000048be53 : add cl, byte ptr [rax - 0x7d] ; rol byte ptr [rdx], 0xe9 ; retf 0xfffc
0x0000000000471380 : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx - 0x7bf0fc1e] ; retf
0x0000000000435792 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000458538 : add cl, byte ptr [rcx + 0x39] ; retf
0x0000000000451efa : add cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000494644 : add cl, byte ptr [rdi] ; cli ; call qword ptr [rdx + 0x22fffa0e]
0x0000000000404879 : add cl, byte ptr [rdi] ; retf 0x8b48
0x0000000000446c9b : add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000413ef7 : add cl, ch ; ret
0x000000000045ee0a : add cl, ch ; ret 0xfffa
0x0000000000454ca8 : add cl, ch ; ret 0xfffd
0x0000000000409e60 : add cl, ch ; retf
0x000000000043b31a : add cl, ch ; retf 0xfffe
0x0000000000400be1 : add cl, cl ; ret
0x00000000004a8c83 : add cl, dh ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004a8c82 : add cl, sil ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004a2bcb : add dh, al ; add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x000000000046a0e8 : add dh, al ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x000000000045e912 : add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x00000000004a7abe : add dh, bh ; movsxd rax, dword ptr [rbp + 0x275dcc4c] ; retf 0xd1cb
0x00000000004a2017 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000435943 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000040058e : add dh, bl ; ret
0x00000000004943b8 : add dh, bl ; stc ; jmp rax
0x000000000042459e : add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004ad161 : add dh, byte ptr [rbx + 0xa] ; ret
0x0000000000494b3c : add dh, byte ptr [rsi] ; cli ; call qword ptr [rdx + 0x22fffa35]
0x000000000041aea8 : add dh, dh ; ret
0x00000000004510fe : add dh, dh ; ret 0x4801
0x00000000004227df : add dh, dh ; ret 0x4804
0x000000000047c6a8 : add dh, dh ; ret 0x7403
0x000000000044a66f : add dh, dh ; ret 0x7404
0x0000000000444cc7 : add dh, dh ; ret 0x7501
0x0000000000444cd4 : add dh, dh ; ret 0x7502
0x0000000000444ce1 : add dh, dh ; ret 0x7504
0x0000000000444c99 : add dh, dh ; ret 0x7510
0x0000000000444ca6 : add dh, dh ; ret 0x7520
0x00000000004247cc : add dh, dh ; ret 0x7540
0x0000000000422b03 : add dh, dh ; ret 0xf02
0x000000000045a398 : add dh, dh ; ret 0xf04
0x000000000041add9 : add dh, dh ; ret 0xf08
0x0000000000466cd1 : add dh, dh ; ret 0xf40
0x0000000000466cb7 : add dh, dh ; ret 0xf50
0x0000000000495174 : add dl, bh ; cli ; jmp qword ptr [rax]
0x0000000000495098 : add dl, dh ; cli ; call qword ptr [rax]
0x00000000004632bc : add dl, dl ; stc ; dec dword ptr [rax + 0x29] ; ret
0x0000000000479a6d : add dword ptr [r15], r9d ; xchg eax, ebp ; ret 0xc283
0x00000000004700a7 : add dword ptr [r8 - 0x75], r9d ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x000000000046eec5 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x000000000044fd13 : add dword ptr [r8 - 0x7d], r9d ; ret
0x0000000000443da1 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x00000000004658ca : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x000000000046588f : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x39] ; retf 0xe87f
0x0000000000456978 : add dword ptr [rax + 0x39480742], ecx ; retf
0x00000000004557f5 : add dword ptr [rax + 0x39480750], ecx ; retf
0x0000000000416dad : add dword ptr [rax + 0x39], ecx ; ret
0x000000000047fc39 : add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000047fc4b : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x000000000045b55f : add dword ptr [rax + 0x39], ecx ; ret 0x8841
0x0000000000464caa : add dword ptr [rax + 0x39], ecx ; ret 0x8c0f
0x000000000045cf53 : add dword ptr [rax + 0x39], ecx ; ret 0xd774
0x000000000045cedd : add dword ptr [rax + 0x39], ecx ; ret 0xed75
0x0000000000455473 : add dword ptr [rax + 0x39], ecx ; retf
0x0000000000417088 : add dword ptr [rax + 0x39], ecx ; retf 0xee75
0x00000000004573b0 : add dword ptr [rax + 0x39], r9d ; ret
0x000000000048e073 : add dword ptr [rax + 0x7900ff7a], eax ; sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x000000000048c65e : add dword ptr [rax + 1], ecx ; retf
0x000000000047a8e9 : add dword ptr [rax + 1], ecx ; retf 0x8948
0x0000000000482007 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000040daea : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x0000000000479265 : add dword ptr [rax + 9], ecx ; ret 0x1475
0x000000000041dede : add dword ptr [rax + 9], ecx ; ret 0x8949
0x0000000000479237 : add dword ptr [rax + 9], ecx ; ret 0xe75
0x000000000044a9f7 : add dword ptr [rax + 9], ecx ; retf 0x8949
0x0000000000475950 : add dword ptr [rax + rax], edx ; mov eax, ecx ; syscall
0x00000000004a887b : add dword ptr [rax + rdx*4 + 0x16], edi ; out dx, al ; out 0x78, al ; jnp 0x4a88e7 ; retf
0x0000000000461323 : add dword ptr [rax - 0x4f743], eax ; jmp qword ptr [rax]
0x0000000000402c3f : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x0000000000422eb4 : add dword ptr [rax - 0x73], ecx ; clc ; cmovne rax, rcx ; ret
0x00000000004700a8 : add dword ptr [rax - 0x75], ecx ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x00000000004425f1 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x00000000004191a1 : add dword ptr [rax - 0x77], ecx ; adc eax, 0x2a0687 ; ret
0x0000000000442582 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000047f383 : add dword ptr [rax - 0x77], ecx ; add eax, 0x23d025 ; ret
0x000000000045e210 : add dword ptr [rax - 0x77], ecx ; push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000405f5c : add dword ptr [rax - 0x77], ecx ; ret
0x0000000000450277 : add dword ptr [rax - 0x77], ecx ; ret 0x2b48
0x0000000000414176 : add dword ptr [rax - 0x77], ecx ; ret 0x3c75
0x000000000045d32c : add dword ptr [rax - 0x77], ecx ; retf 0x8948
0x0000000000485a22 : add dword ptr [rax - 0x77], ecx ; rol byte ptr [rbx + 0x394800d3], 1 ; retf 0xe275
0x000000000047f382 : add dword ptr [rax - 0x77], r9d ; add eax, 0x23d025 ; ret
0x000000000040eec6 : add dword ptr [rax - 0x7d], ecx ; ret
0x000000000045b9c9 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000046eec6 : add dword ptr [rax - 0x7d], ecx ; ret 0x8502
0x0000000000402c89 : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x0000000000450866 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b01
0x000000000046f517 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b04
0x000000000040e3eb : add dword ptr [rax - 0x7d], ecx ; ret 0xf10
0x0000000000469e59 : add dword ptr [rax - 0x91743], eax ; jmp qword ptr [rax]
0x000000000045e955 : add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x0000000000405990 : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x0000000000454f9b : add dword ptr [rax], eax ; add al, ch ; insd dword ptr [rdi], dx ; retf
0x00000000004558af : add dword ptr [rax], eax ; add al, ch ; pop rcx ; ret 0xfffa
0x000000000045586c : add dword ptr [rax], eax ; add al, ch ; pushfq ; ret 0xfffa
0x0000000000456245 : add dword ptr [rax], eax ; add al, ch ; ret
0x0000000000454f5a : add dword ptr [rax], eax ; add al, ch ; scasb al, byte ptr [rdi] ; retf
0x0000000000410044 : add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000448111 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf 0xd975
0x0000000000419a5a : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x0000000000468203 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x0000000000455228 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000478064 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; dec dword ptr [rax - 0x7d] ; ret
0x000000000041eb1d : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x0000000000470f5b : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x0000000000475b5d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000449549 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x000000000048e93a : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x3948
0x0000000000456496 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x000000000048ce85 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000455a35 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0x8966
0x000000000044706e : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000471a19 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000411368 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; retf
0x000000000041f160 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004684d8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044b82c : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004560f2 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000042b057 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041e7b5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x000000000042427e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043ffcf : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b085 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000040d7b3 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x000000000044e941 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004a201a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004a11ca : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004a0ff2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a0fea : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004a1782 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004a102a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a1022 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000004a17c2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x000000000048cfe7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x000000000048cf3d : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000000000048dd59 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ja 0x48dd6a ; sbb eax, eax ; ret
0x0000000000460f3d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x0000000000475ea2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; leave ; ret
0x000000000044beae : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x00000000004493b1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x000000000047e76d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000048d5f0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x00000000004845f6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000046f01d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000004172b3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048691e : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000047fe01 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000468740 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004499fb : add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000004131a8 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x000000000048fb04 : add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 5], cl ; retf 0x1bc
0x0000000000428948 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000048cdd6 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000044e172 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000409e4d : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x000000000049226d : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x00000000004612a0 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000047809a : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000444cc5 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x0000000000444cd2 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x0000000000444cdf : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000444c97 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000444ca4 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000444cb1 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000045a396 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x00000000004247f8 : add dword ptr [rax], eax ; and ch, 2 ; cmovne rax, rdx ; ret
0x00000000004239bc : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x0000000000423923 : add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000040fcbc : add dword ptr [rax], eax ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000405dc0 : add dword ptr [rax], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044c7a1 : add dword ptr [rax], esp ; jmp rdx
0x00000000004a8dc4 : add dword ptr [rbp + 0x6c], ebx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000400b0c : add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x0000000000466790 : add dword ptr [rbp - 0x41f040be], ecx ; retf 0x53c
0x0000000000448ee9 : add dword ptr [rbp - 0x57c03b0], ecx ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x000000000044b1ad : add dword ptr [rbp - 0x77], ecx ; retf
0x000000000045e792 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x00000000004a91aa : add dword ptr [rbp - 9], 0x8d626770 ; rcl byte ptr [rdi], cl ; retf
0x0000000000435802 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000004a7d8a : add dword ptr [rbx + 0x1e40293b], ebp ; cli ; test bh, dl ; retf 0xdf7f
0x000000000046c2c5 : add dword ptr [rbx - 0x4f743], eax ; jmp qword ptr [rax]
0x0000000000489159 : add dword ptr [rbx - 0x77], ecx ; push rsp ; ret 0x4808
0x000000000040d4de : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000004761cc : add dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x77] ; retf
0x000000000046887f : add dword ptr [rcx + 0x2522a60d], ecx ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x000000000045c422 : add dword ptr [rcx + 0x39], ecx ; ret
0x000000000044af03 : add dword ptr [rcx + 9], ecx ; ret
0x000000000044a9b6 : add dword ptr [rcx + rcx*4 + 0x5f], ecx ; or byte ptr [rcx - 0x77], cl ; retf
0x000000000040e12a : add dword ptr [rcx - 0x73], ecx ; or byte ptr [r8 + 0x39], cl ; ret
0x0000000000442621 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x000000000046ecbe : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000045437f : add dword ptr [rcx - 0x77], eax ; retf
0x0000000000459a68 : add dword ptr [rcx - 0x78], eax ; dec dword ptr [rax - 0x7d] ; ret
0x000000000044c595 : add dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000467391 : add dword ptr [rcx - 0x7d], ecx ; ret 0x2504
0x00000000004789ab : add dword ptr [rcx - 0x7d], ecx ; ret 0xf01
0x000000000047576a : add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x0000000000414e03 : add dword ptr [rcx], ecx ; retf 0xd284
0x00000000004647a3 : add dword ptr [rcx], edi ; retf
0x00000000004a8cd5 : add dword ptr [rcx], edx ; cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x0000000000447e02 : add dword ptr [rdi + 0x15], esi ; jb 0x447e10 ; mov byte ptr [rdi], cl ; ret
0x00000000004940d4 : add dword ptr [rdi - 0x702e0007], ecx ; stc ; call rcx
0x00000000004b3fe5 : add dword ptr [rdi], 0x48 ; or eax, 0x1370303 ; ret
0x00000000004b3f7d : add dword ptr [rdi], 0x48 ; or eax, 0x34b0303 ; ret
0x00000000004b3fb1 : add dword ptr [rdi], 0x48 ; or eax, 0x35b0303 ; ret
0x00000000004b3f8e : add dword ptr [rdi], 0xd ; add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004b3fc2 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; cld ; ret
0x00000000004b3ff6 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b0695 : add dword ptr [rdi], 3 ; ret 0xa01
0x0000000000456970 : add dword ptr [rdi], ecx ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000047e877 : add dword ptr [rdi], ecx ; mov esi, 0xaf0f4907 ; retf 0x14c
0x000000000041e6db : add dword ptr [rdi], ecx ; ret 0x8948
0x0000000000448551 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x00000000004542e1 : add dword ptr [rdi], ecx ; xchg byte ptr [rdi], dl ; or eax, 0xea810000 ; ret 0
0x0000000000479a6e : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0xc283
0x0000000000446dfc : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043868d : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000048544b : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000004a89af : add dword ptr [rdx - 0x36a5831f], esp ; retf
0x000000000044d4f9 : add dword ptr [rdx], 0x39d23100 ; ret
0x00000000004b3174 : add dword ptr [rdx], 0x4a ; ret
0x00000000004b5c04 : add dword ptr [rdx], 0x55 ; ret
0x00000000004af0e0 : add dword ptr [rdx], 0x5a ; ret
0x00000000004b5bc0 : add dword ptr [rdx], 0x76 ; ret
0x00000000004accd2 : add dword ptr [rdx], eax ; retf
0x0000000000418818 : add dword ptr [rip + 0x2a34f5], 1 ; ret
0x00000000004acc2b : add dword ptr [rsi + rcx + 0x30], ecx ; add ch, byte ptr [rsi + rcx + 8] ; ret
0x0000000000442602 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000004171a9 : add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x000000000044d4f8 : add dword ptr fs:[rdx], 0x39d23100 ; ret
0x000000000041928b : add eax, 0x144002a ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret
0x000000000048a0ed : add eax, 0x1489066 ; ret 0xb70f
0x000000000045ad50 : add eax, 0x18c48348 ; ret
0x0000000000424919 : add eax, 0x1bb12 ; cmove rax, rdx ; ret
0x00000000004239b9 : add eax, 0x1d0a2 ; cmove rax, rdx ; ret
0x000000000044972a : add eax, 0x1f0fc3f3 ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000042b94a : add eax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x00000000004244d0 : add eax, 0x221ab ; cmove rax, rdx ; ret
0x0000000000424859 : add eax, 0x22732 ; cmovne rax, rdx ; ret
0x0000000000424719 : add eax, 0x22862 ; cmovne rax, rdx ; ret
0x00000000004245b9 : add eax, 0x229d2 ; cmovne rax, rdx ; ret
0x00000000004248c0 : add eax, 0x22a7b ; cmovne rax, rdx ; ret
0x0000000000424780 : add eax, 0x22bab ; cmovne rax, rdx ; ret
0x000000000048f6c1 : add eax, 0x22ccbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000048f5b1 : add eax, 0x22cdce ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000424620 : add eax, 0x22d1b ; cmovne rax, rdx ; ret
0x000000000042489f : add eax, 0x22ecc ; cmovne rax, rdx ; ret
0x000000000042475f : add eax, 0x22ffc ; cmovne rax, rdx ; ret
0x00000000004245ff : add eax, 0x2316c ; cmovne rax, rdx ; ret
0x0000000000423940 : add eax, 0x231db ; cmovne rax, rdx ; ret
0x0000000000487820 : add eax, 0x235032 ; jne 0x487856 ; ret
0x000000000042468b : add eax, 0x23660 ; cmovne rax, rdx ; ret
0x00000000004855f1 : add eax, 0x2372ca ; ret
0x0000000000484a79 : add eax, 0x2375ea ; ret
0x0000000000484a5e : add eax, 0x237605 ; add rsp, 8 ; ret
0x000000000042466e : add eax, 0x237dd ; cmovne rax, rdx ; ret
0x00000000004246bf : add eax, 0x2390c ; cmovne rax, rdx ; ret
0x000000000047f4ec : add eax, 0x23ceb7 ; mov qword ptr [rsi], rax ; ret
0x000000000047f47b : add eax, 0x23cf30 ; ret
0x000000000047f442 : add eax, 0x23cf69 ; add rsp, 8 ; ret
0x000000000047f386 : add eax, 0x23d025 ; ret
0x000000000046ca27 : add eax, 0x24a7f4 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c9d4 : add eax, 0x24a847 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c4a7 : add eax, 0x24a874 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c846 : add eax, 0x24a9d5 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c801 : add eax, 0x24aa1a ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c7bc : add eax, 0x24aa5f ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c76d : add eax, 0x24aaae ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460e98 : add eax, 0x255783 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000461247 : add eax, 0x2558d4 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004611f9 : add eax, 0x255922 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046114a : add eax, 0x2559d1 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004610ee : add eax, 0x255a2d ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460e4e : add eax, 0x255ccd ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460e00 : add eax, 0x255d1b ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004609a7 : add eax, 0x255e74 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000457ab2 : add eax, 0x2643c1 ; ret
0x000000000044d4b2 : add eax, 0x26ce49 ; ret
0x000000000044f5b2 : add eax, 0x26d371 ; ret
0x0000000000452a0f : add eax, 0x29480000 ; ret 0x349
0x0000000000424839 : add eax, 0x2975b2 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004246f9 : add eax, 0x2976f2 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x0000000000424599 : add eax, 0x297852 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000041f8f7 : add eax, 0x299f64 ; ret
0x000000000041f901 : add eax, 0x29c466 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041981d : add eax, 0x2a003e ; ret
0x0000000000419318 : add eax, 0x2a04d3 ; ret
0x000000000041932f : add eax, 0x2a04d8 ; ret
0x00000000004192f0 : add eax, 0x2a04f3 ; ret
0x00000000004192d0 : add eax, 0x2a050b ; ret
0x00000000004191c6 : add eax, 0x2a067d ; ret
0x00000000004191b6 : add eax, 0x2a0685 ; ret
0x0000000000419166 : add eax, 0x2a068d ; ret
0x0000000000419156 : add eax, 0x2a06a5 ; ret
0x0000000000418782 : add eax, 0x2a0999 ; ret
0x00000000004197d1 : add eax, 0x2a2596 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000419345 : add eax, 0x2a2a4a ; ret
0x000000000041887d : add eax, 0x2a3492 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401e2e : add eax, 0x2b9 ; add byte ptr [rax - 0x75], cl ; pop rsp ; retf
0x00000000004b2234 : add eax, 0x3400e4e ; ret
0x000000000048502e : add eax, 0x38c48348 ; ret
0x000000000041d06e : add eax, 0x39480000 ; ret 0xf275
0x000000000042b96a : add eax, 0x40 ; add rax, rdi ; vzeroupper ; ret
0x0000000000494845 : add eax, 0x472fffa ; cli ; jmp rdx
0x0000000000484a5f : add eax, 0x48002376 ; add esp, 8 ; ret
0x0000000000443e38 : add eax, 0x48054289 ; lea eax, [rdx + 8] ; ret
0x0000000000442668 : add eax, 0x48054289 ; mov eax, edi ; ret
0x0000000000444336 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x00000000004947c5 : add eax, 0x4a0fffa ; cli ; call qword ptr [rax]
0x0000000000443eb9 : add eax, 0x5428948 ; lea rax, [rdx + 0xc] ; ret
0x00000000004426a9 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x000000000049497d : add eax, 0x560fffa ; cli ; call rax
0x00000000004948fd : add eax, 0x574fffa ; cli ; jmp rsp
0x00000000004851d0 : add eax, 0x5b ; cmovne rax, rdx ; ret
0x00000000004a2bbd : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x00000000004719fa : add eax, 0x5c415d5b ; ret
0x00000000004a2bcd : add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x000000000042b98a : add eax, 0x60 ; add rax, rdi ; vzeroupper ; ret
0x00000000004248e9 : add eax, 0x6c52 ; cmove rax, rdx ; ret
0x00000000004244f9 : add eax, 0x6d12 ; cmove rax, rdx ; ret
0x000000000042455d : add eax, 0x79ee ; je 0x424532 ; ret
0x000000000042ac97 : add eax, 0x83480000 ; ret 0x4910
0x000000000043e5c1 : add eax, 0x83480000 ; ret 0xe910
0x000000000042acc5 : add eax, 0x83480000 ; ret 0xeb10
0x000000000041cf0e : add eax, 0x83480000 ; retf 0x4901
0x000000000045f115 : add eax, 0x83ffffef ; ret
0x0000000000443e3b : add eax, 0x8428d48 ; ret
0x000000000040dbb8 : add eax, 0x8944c689 ; ret 0xeab8
0x0000000000458f33 : add eax, 0x89480000 ; ret 0x2948
0x0000000000491910 : add eax, 0x89490000 ; ret 0x8349
0x00000000004284c8 : add eax, 0x894d0000 ; retf
0x0000000000481118 : add eax, 0x940fc085 ; ret 0x3d
0x00000000004abd85 : add eax, 0x99a80000 ; cmc ; call rax
0x0000000000472909 : add eax, 0x9f2 ; cmove rax, rdx ; ret
0x0000000000473d19 : add eax, 0xa22 ; cmove rax, rdx ; ret
0x000000000042d38a : add eax, 0xc0310000 ; ret
0x0000000000443ebd : add eax, 0xc428d48 ; ret
0x000000000044499d : add eax, 0xc478d48 ; ret
0x000000000040fcbb : add eax, 0xe8890001 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004554f2 : add eax, 0xe9000000 ; ret
0x00000000004728d9 : add eax, 0xee2 ; cmove rax, rdx ; ret
0x000000000048d2ba : add eax, 0xf7148948 ; ret
0x00000000004357f3 : add eax, 0xf7f0ff3 ; ret
0x000000000048f5ca : add eax, 0xffff50e9 ; push rbx ; ret
0x000000000044e925 : add eax, 1 ; push rax ; call rbx
0x0000000000474941 : add eax, 1 ; ret
0x0000000000474938 : add eax, 2 ; ret
0x0000000000474951 : add eax, 3 ; ret
0x000000000045ac69 : add eax, dword ptr [0] ; ret
0x000000000047b768 : add eax, dword ptr [rax] ; add bl, dh ; ret
0x0000000000489901 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x74], ah ; adc dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000489f5c : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000044ccee : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; retf 0x8548
0x000000000041c508 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000041ae56 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000400efb : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000041afda : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000041fcda : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041fea0 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000042ae77 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e761 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042aea5 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044f504 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044a7bc : add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x0000000000474993 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000449ccb : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000042ae28 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000041cc40 : add eax, dword ptr [rax] ; add byte ptr [rbx + rcx*4 + 0xd], al ; ret 0x29fb
0x000000000044854c : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0xf8e9
0x0000000000489ad0 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x348b4cd8], cl ; ret 0xf41
0x0000000000461e0d : add eax, dword ptr [rax] ; add byte ptr [rcx + 0xf], al ; ret 0xc839
0x000000000044bec5 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x000000000044bf65 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x80], bh ; syscall
0x000000000047c6a6 : add eax, dword ptr [rax] ; add dh, dh ; ret 0x7403
0x000000000041add7 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x000000000046eba4 : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000046f2eb : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000046f359 : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000448230 : add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000047d36c : add eax, dword ptr [rbp - 0xb8] ; call rax
0x00000000004b3f91 : add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004008ba : add eax, dword ptr [rcx + 0xf] ; xchg eax, esp ; rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x0000000000475b1a : add eax, dword ptr [rcx + rdx] ; ret
0x00000000004543c0 : add eax, dword ptr [rcx - 0x77] ; retf
0x00000000004ad402 : add eax, dword ptr [rdi + 0xe] ; and byte ptr [rdx], al ; imul ecx, dword ptr [rsi], 0x18 ; ret
0x0000000000486d93 : add eax, dword ptr [rdx + 8] ; call rax
0x00000000004b3fc5 : add eax, dword ptr [rdx] ; cld ; ret
0x00000000004b3ff9 : add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b1f4a : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x000000000047c3e6 : add eax, dword ptr [rsi] ; call rax
0x000000000048aef6 : add eax, eax ; jmp rax
0x00000000004021d4 : add eax, ebp ; jmp rax
0x0000000000487480 : add eax, ebp ; retf 0xfff3
0x000000000047c707 : add eax, ebx ; call rax
0x000000000044d5bc : add eax, ebx ; jmp rax
0x00000000004408e8 : add eax, ecx ; add rax, rdi ; vzeroupper ; ret
0x000000000046ebab : add eax, ecx ; jmp rax
0x000000000042b299 : add eax, ecx ; ret
0x0000000000440c4d : add eax, ecx ; sub rax, rdx ; vzeroupper ; ret
0x000000000042b7c6 : add eax, ecx ; vzeroupper ; ret
0x000000000042b296 : add eax, edi ; add rax, rcx ; ret
0x000000000042b7c3 : add eax, edi ; add rax, rcx ; vzeroupper ; ret
0x000000000046f1db : add eax, edi ; jmp rax
0x000000000046f4af : add eax, edi ; mov rdx, r8 ; jmp 0x46f483
0x000000000042b4c4 : add eax, edi ; ret
0x0000000000485380 : add eax, edi ; sub rax, r8 ; ret
0x0000000000440d05 : add eax, edi ; sub rax, rdx ; vzeroupper ; ret
0x0000000000446caa : add eax, edi ; sub rax, rsi ; ret
0x000000000042b93a : add eax, edi ; vzeroupper ; ret
0x0000000000401f6a : add eax, edx ; jmp rax
0x0000000000440bf6 : add eax, edx ; sub rax, rdi ; ret
0x000000000047463b : add eax, edx ; sub rax, rdi ; shr rax, 2 ; ret
0x00000000004481dc : add eax, esi ; jmp rax
0x00000000004184dd : add eax, esi ; mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x000000000048c16d : add eax, esp ; jmp rax
0x0000000000463128 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000419df8 : add ebp, dword ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; retf
0x0000000000413a91 : add ebp, ebp ; call 0x4004ac
0x00000000004a7917 : add ebp, ebp ; retf
0x000000000047c3e2 : add ebx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x000000000048a51a : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000488750 : add ebx, dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x0000000000416bf1 : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004b3fb6 : add ebx, dword ptr [rbx + 3] ; ret
0x000000000044e18f : add ebx, dword ptr [rbx - 0x2d] ; loopne 0x44e1f8 ; pop r12 ; ret
0x0000000000482841 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000042c0ab : add ebx, eax ; nop dword ptr [rax] ; ret
0x00000000004359b3 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000447de7 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x447ddc ; ret
0x0000000000442655 : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x00000000004573ed : add ecx, dword ptr [rax + 0x39] ; ret
0x000000000045549d : add ecx, dword ptr [rax + 0x39] ; retf
0x000000000040e08e : add ecx, dword ptr [rax + 1] ; fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000045124a : add ecx, dword ptr [rax - 0x77] ; and al, 0x50 ; call 0x44d528
0x0000000000442659 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000047e837 : add ecx, dword ptr [rax - 0x77] ; mov rax, rcx ; ret
0x000000000044fe03 : add ecx, dword ptr [rax - 0x77] ; or byte ptr [r15], 0x8e ; ret 1
0x00000000004347d4 : add ecx, dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x000000000048bc2f : add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040ea81 : add ecx, dword ptr [rbp + rcx*4 + 0x64] ; ret
0x0000000000480dfa : add ecx, dword ptr [rbp - 0x77] ; dec byte ptr [rax - 0x7d] ; ret
0x0000000000483310 : add ecx, dword ptr [rbp - 0x77] ; ret 0x8d48
0x0000000000435722 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004b3f82 : add ecx, dword ptr [rbx + 3] ; ret
0x00000000004442d4 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x0000000000442656 : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x0000000000448eef : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x0000000000448f4d : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x00000000004ac099 : add ecx, dword ptr [rsi + rcx - 0x50] ; add al, byte ptr [rdx] ; ret 0xb00e
0x0000000000465f59 : add ecx, eax ; mov eax, r9d ; ret
0x0000000000453a25 : add ecx, ebp ; retf 0xfff6
0x000000000042d9bb : add ecx, ebx ; jmp r9
0x000000000042c352 : add ecx, ebx ; jmp rcx
0x0000000000448204 : add ecx, esi ; jmp rcx
0x000000000048e17e : add edi, dword ptr [rax + 4] ; jne 0x48e1a9 ; ret
0x000000000045a444 : add edi, ebx ; jmp rdi
0x000000000042d9b8 : add edi, edx ; add r9, r11 ; jmp r9
0x000000000049498d : add edi, edx ; inc dword ptr [rax + 3] ; cli ; jmp rax
0x0000000000494811 : add edi, edx ; jmp qword ptr [rdx]
0x0000000000494991 : add edi, edx ; jmp rax
0x000000000040d56c : add edi, edx ; jmp rdi
0x00000000004741cb : add edi, esp ; call 0x400494
0x0000000000487244 : add edx, eax ; jmp 0x487252
0x0000000000483572 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x0000000000412320 : add edx, ecx ; jmp 0x412332
0x000000000040d283 : add edx, edi ; jmp rdx
0x00000000004543ba : add esi, dword ptr [rdi + 0xf] ; mov dh, 0x4e ; add eax, dword ptr [rcx - 0x77] ; retf
0x00000000004587f6 : add esi, dword ptr [rdi + rax - 0xd] ; ret
0x0000000000459f45 : add esi, eax ; jmp rsi
0x00000000004358d3 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000447005 : add esi, ebx ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004496dc : add esi, ebx ; ret
0x000000000041ee00 : add esi, ebx ; stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000044830e : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x000000000042d9b5 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000416721 : add esp, 0x10 ; pop rbx ; jmp rax
0x0000000000410921 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000449d0f : add esp, 0x10 ; pop rbx ; ret
0x0000000000412025 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000446bad : add esp, 0x100 ; sub rax, rdx ; ret
0x0000000000482718 : add esp, 0x110 ; pop rbx ; ret
0x000000000040dbfe : add esp, 0x118 ; ret
0x000000000045af9a : add esp, 0x148 ; ret
0x000000000041a239 : add esp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000041f4eb : add esp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000041fb06 : add esp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x000000000044d2da : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004119b5 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000045ad52 : add esp, 0x18 ; ret
0x000000000041722d : add esp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000416e0d : add esp, 0x20 ; pop rbx ; jmp rax
0x0000000000417266 : add esp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000482799 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000416b7f : add esp, 0x20 ; pop rbx ; ret
0x0000000000448d32 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004496aa : add esp, 0x28 ; ret
0x000000000044f698 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048496f : add esp, 0x30 ; pop rbx ; ret
0x000000000048ace6 : add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000040dab4 : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041622e : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004759d1 : add esp, 0x38 ; ret
0x000000000048857c : add esp, 0x40 ; pop rbx ; ret
0x0000000000481cac : add esp, 0x48 ; jmp qword ptr [rax]
0x0000000000449382 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000488663 : add esp, 0x50 ; pop rbx ; ret
0x0000000000481c3a : add esp, 0x58 ; jmp qword ptr [rax]
0x00000000004498da : add esp, 0x58 ; ret
0x00000000004497cc : add esp, 0x68 ; ret
0x0000000000473e34 : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000449b5f : add esp, 0x78 ; ret
0x00000000004688be : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x00000000004754b3 : add esp, 0x80 ; pop rbx ; ret
0x0000000000415af8 : add esp, 0x80 ; ret
0x000000000044bcad : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000400db2 : add esp, 0x88 ; pop rbx ; ret
0x000000000040152f : add esp, 0x98 ; ret
0x00000000004755d3 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000457c06 : add esp, 0xb8 ; pop rbx ; pop r12 ; ret
0x000000000040fa67 : add esp, 0xd0 ; pop rbx ; ret
0x000000000040fbf6 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000040f775 : add esp, 0xd8 ; ret
0x0000000000411d2f : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047fd0b : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000040ff8e : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000044b2f0 : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000044a52c : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000004167d9 : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000004884b9 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x00000000004137e4 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000401bc3 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400413 : add esp, 8 ; ret
0x0000000000423989 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004a900b : add esp, dword ptr [rbx + 0x74] ; or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x00000000004557aa : add qword ptr [rax + 0x39], rcx ; retf
0x000000000045437e : add qword ptr [rcx - 0x77], r8 ; retf
0x00000000004359b2 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435942 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000004358d2 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004741ca : add r15, r12 ; call 0x400495
0x000000000042aea4 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004543bf : add r8, qword ptr [rcx - 0x77] ; retf
0x000000000042d9ba : add r9, r11 ; jmp r9
0x00000000004a8dc9 : add r9b, bl ; retf 0xea91
0x00000000004573ce : add r9b, byte ptr [rax + 0x39] ; ret
0x00000000004573ec : add r9d, dword ptr [rax + 0x39] ; ret
0x0000000000465f58 : add r9d, eax ; mov eax, r9d ; ret
0x00000000004abd84 : add rax, -0x66580000 ; cmc ; call rax
0x0000000000474940 : add rax, 1 ; ret
0x0000000000474937 : add rax, 2 ; ret
0x0000000000474950 : add rax, 3 ; ret
0x000000000045ac68 : add rax, qword ptr [0] ; ret
0x000000000047c3e5 : add rax, qword ptr [r14] ; call rax
0x000000000047d36b : add rax, qword ptr [rbp - 0xb8] ; call rax
0x0000000000486d92 : add rax, qword ptr [rdx + 8] ; call rax
0x000000000045ac67 : add rax, qword ptr fs:[0] ; ret
0x000000000047c706 : add rax, r11 ; call rax
0x000000000048c16c : add rax, r12 ; jmp rax
0x00000000004021d3 : add rax, r13 ; jmp rax
0x000000000048ca6d : add rax, r14 ; jmp rax
0x000000000048b11b : add rax, r15 ; jmp rax
0x000000000048aef5 : add rax, r8 ; jmp rax
0x000000000048c6a5 : add rax, r9 ; jmp rax
0x000000000044d633 : add rax, rbp ; jmp rax
0x000000000044d5bb : add rax, rbx ; jmp rax
0x00000000004408e7 : add rax, rcx ; add rax, rdi ; vzeroupper ; ret
0x000000000046ebaa : add rax, rcx ; jmp rax
0x000000000042b298 : add rax, rcx ; ret
0x0000000000440c4c : add rax, rcx ; sub rax, rdx ; vzeroupper ; ret
0x000000000042b7c5 : add rax, rcx ; vzeroupper ; ret
0x000000000042b295 : add rax, rdi ; add rax, rcx ; ret
0x000000000042b7c2 : add rax, rdi ; add rax, rcx ; vzeroupper ; ret
0x000000000046f1da : add rax, rdi ; jmp rax
0x000000000042b4c3 : add rax, rdi ; ret
0x000000000048537f : add rax, rdi ; sub rax, r8 ; ret
0x0000000000440d04 : add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x0000000000446ca9 : add rax, rdi ; sub rax, rsi ; ret
0x000000000042b939 : add rax, rdi ; vzeroupper ; ret
0x0000000000401f69 : add rax, rdx ; jmp rax
0x0000000000440bf5 : add rax, rdx ; sub rax, rdi ; ret
0x00000000004481db : add rax, rsi ; jmp rax
0x0000000000413a90 : add rbp, r13 ; call 0x4004ad
0x000000000047c3e1 : add rbx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x00000000004557c9 : add rcx, qword ptr [rax + 0x39] ; retf
0x000000000042c351 : add rcx, r11 ; jmp rcx
0x0000000000448203 : add rcx, rsi ; jmp rcx
0x000000000040d56b : add rdi, r10 ; jmp rdi
0x000000000045a443 : add rdi, r11 ; jmp rdi
0x000000000042d9b7 : add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000483571 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000487243 : add rdx, rax ; jmp 0x487253
0x000000000041231f : add rdx, rcx ; jmp 0x412333
0x000000000040d282 : add rdx, rdi ; jmp rdx
0x0000000000459f44 : add rsi, r8 ; jmp rsi
0x0000000000416720 : add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000410920 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000449d0e : add rsp, 0x10 ; pop rbx ; ret
0x0000000000482717 : add rsp, 0x110 ; pop rbx ; ret
0x000000000040dbfd : add rsp, 0x118 ; ret
0x000000000045af99 : add rsp, 0x148 ; ret
0x000000000041a238 : add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000041f4ea : add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000041fb05 : add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x00000000004119b4 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000045ad51 : add rsp, 0x18 ; ret
0x000000000041722c : add rsp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000416e0c : add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000417265 : add rsp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000482798 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000416b7e : add rsp, 0x20 ; pop rbx ; ret
0x00000000004496a9 : add rsp, 0x28 ; ret
0x000000000044f697 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048496e : add rsp, 0x30 ; pop rbx ; ret
0x000000000048ace5 : add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000041622d : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004759d0 : add rsp, 0x38 ; ret
0x000000000048857b : add rsp, 0x40 ; pop rbx ; ret
0x0000000000481cab : add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000488662 : add rsp, 0x50 ; pop rbx ; ret
0x0000000000481c39 : add rsp, 0x58 ; jmp qword ptr [rax]
0x00000000004498d9 : add rsp, 0x58 ; ret
0x00000000004497cb : add rsp, 0x68 ; ret
0x0000000000473e33 : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000449b5e : add rsp, 0x78 ; ret
0x00000000004754b2 : add rsp, 0x80 ; pop rbx ; ret
0x0000000000415af7 : add rsp, 0x80 ; ret
0x000000000044bcac : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000400db1 : add rsp, 0x88 ; pop rbx ; ret
0x000000000040152e : add rsp, 0x98 ; ret
0x00000000004755d2 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x000000000040fa66 : add rsp, 0xd0 ; pop rbx ; ret
0x000000000040fbf5 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000040f774 : add rsp, 0xd8 ; ret
0x0000000000411d2e : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047fd0a : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000040ff8d : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000044b2ef : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000044a52b : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000004167d8 : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000004884b8 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000401bc2 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400412 : add rsp, 8 ; ret
0x0000000000423988 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004247f7 : add word ptr [rax], ax ; and ch, 2 ; cmovne rax, rdx ; ret
0x000000000048544a : add word ptr [rdx + rax*2], 1 ; ret
0x00000000004943b4 : and ah, bl ; stc ; inc dword ptr [rax] ; fdivp st(1) ; jmp rax
0x000000000046b881 : and al, 0 ; jmp rax
0x000000000046c4aa : and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000048d358 : and al, 0x10 ; add rsp, 0x28 ; ret
0x0000000000488451 : and al, 0x10 ; call 0x484e84
0x000000000048ef10 : and al, 0x10 ; call r14
0x000000000044a918 : and al, 0x10 ; call rax
0x00000000004826db : and al, 0x10 ; call rdx
0x000000000041cabc : and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000409558 : and al, 0x10 ; mov qword ptr [rsp + 8], rcx ; call 0x406069
0x0000000000472132 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000048ecf8 : and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000401165 : and al, 0x18 ; call rax
0x00000000004757f0 : and al, 0x18 ; mov eax, 0x101 ; syscall
0x000000000044e8a8 : and al, 0x18 ; mov r9, r13 ; call rbx
0x000000000047204d : and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000047434f : and al, 0x18 ; mov rdi, rbp ; mov r9, r14 ; call rbx
0x00000000004826d6 : and al, 0x18 ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000450f87 : and al, 0x20 ; call r15
0x00000000004531be : and al, 0x20 ; call rax
0x0000000000474010 : and al, 0x20 ; call rbx
0x0000000000449c46 : and al, 0x20 ; je 0x449c79 ; mov eax, 0x48 ; syscall
0x0000000000450e52 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000004a7b44 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000041fb03 : and al, 0x28 ; add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x0000000000450f82 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00000000004229b3 : and al, 0x28 ; mov rdi, rbp ; call rax
0x0000000000451863 : and al, 0x30 ; call r14
0x0000000000451a3b : and al, 0x30 ; call rbx
0x00000000004741fe : and al, 0x30 ; mov rdi, rbp ; call rbx
0x0000000000452cba : and al, 0x38 ; add byte ptr [rsp + rsi - 0xa], dh ; ret
0x0000000000451d25 : and al, 0x38 ; call r12
0x000000000045235d : and al, 0x38 ; call r14
0x0000000000455321 : and al, 0x38 ; call r15
0x000000000045156b : and al, 0x38 ; call rbx
0x0000000000473ee8 : and al, 0x38 ; lea rcx, [rax + 1] ; call rbx
0x0000000000451277 : and al, 0x38 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000045185e : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000451a36 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000004673cc : and al, 0x40 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000045723e : and al, 0x40 ; add byte ptr [rdx + rdi*2 - 0xa], dh ; ret
0x0000000000455ffe : and al, 0x40 ; add byte ptr [rsi + rsi*2 - 0xa], dh ; ret
0x0000000000481ca9 : and al, 0x40 ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000481c37 : and al, 0x40 ; add rsp, 0x58 ; jmp qword ptr [rax]
0x000000000045379c : and al, 0x40 ; call r15
0x0000000000455f48 : and al, 0x40 ; call rbx
0x00000000004531b9 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000451d20 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000452358 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000045531c : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000451566 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000486d91 : and al, 0x48 ; add eax, dword ptr [rdx + 8] ; call rax
0x0000000000416748 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; jmp rax
0x000000000048adc8 : and al, 0x48 ; add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000048aacc : and al, 0x48 ; add esp, 0x38 ; ret
0x0000000000413424 : and al, 0x48 ; mov edi, ebx ; call rax
0x000000000048ddfe : and al, 0x48 ; mov edx, dword ptr [rbp] ; call r12
0x0000000000453797 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000455f43 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000048ddaf : and al, 0x4c ; lea esi, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x0000000000489d17 : and al, 0x4c ; mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489cc5 : and al, 0x4c ; mov esi, esp ; mov edi, ebp ; call rax
0x000000000045124e : and al, 0x50 ; call 0x44d524
0x000000000045124d : and al, 0x50 ; call 0x44d525
0x00000000004203cb : and al, 0x68 ; call rax
0x0000000000403fb7 : and al, 0x68 ; je 0x404000 ; xor edi, edi ; call 0x4201d8
0x00000000004b2160 : and al, 0x69 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; xchg eax, ebx ; sti ; jmp qword ptr [rax]
0x0000000000404032 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; imul al ; ret 0xbfbf
0x0000000000463a9e : and al, 0x83 ; ret
0x00000000004171ab : and al, 0x83 ; retf 0x4c01
0x00000000004578fd : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004192b3 : and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x00000000004047fc : and al, 0x8c ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x000000000045177e : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x000000000049215b : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000004918bb : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000045220b : and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x0000000000451c00 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004579d3 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x000000000048cf3b : and al, 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000000000449d0c : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000449bb3 : and al, 0xc ; mov eax, 0x48 ; syscall
0x0000000000416732 : and al, 0xc ; mov qword ptr [rsp], rdi ; call 0x4129c8
0x0000000000401160 : and al, 0xc ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000479de0 : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x0000000000416d0c : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x000000000048aec8 : and al, 0xd8 ; ret
0x0000000000463771 : and al, 0xe8 ; test eax, 0x8900020e ; ret
0x0000000000418323 : and al, 0xe9 ; ret 0xfffd
0x000000000045261e : and al, 0xf6 ; ret
0x0000000000493f99 : and al, 0xf9 ; jmp qword ptr [rax]
0x0000000000416e3d : and al, 8 ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000040955d : and al, 8 ; call 0x406064
0x000000000040955c : and al, 8 ; call 0x406065
0x000000000041d0d6 : and al, 8 ; call 0x419374
0x000000000040df2f : and al, 8 ; call rax
0x000000000041cac1 : and al, 8 ; call rcx
0x00000000004039ee : and al, 8 ; je 0x403a2b ; mov rdi, rax ; call 0x4004c9
0x000000000044a913 : and al, 8 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000411350 : and al, 8 ; mov rdi, r15 ; call rax
0x000000000048f5b4 : and al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000490213 : and al, byte ptr [rax] ; jne 0x4901fd ; pop rbx ; ret
0x000000000048f5a6 : and al, byte ptr [rax] ; test eax, eax ; je 0x48f5b7 ; ret
0x000000000048f6b6 : and al, byte ptr [rax] ; test eax, eax ; je 0x48f6c7 ; ret
0x0000000000440e5a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x0000000000469611 : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004531bf : and bh, bh ; rol byte ptr [rbx - 0x76befb08], 1 ; ret 0x415f
0x0000000000493f95 : and bh, cl ; inc dword ptr [rax] ; and al, 0xf9 ; jmp qword ptr [rax]
0x00000000004611fa : and bl, byte ptr [rcx + 0x25] ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x000000000046f21b : and bl, ch ; retf 0x9066
0x00000000004115e9 : and byte ptr [r11 + rcx*4 + 0x75], r9b ; sbb byte ptr [rax - 0x77], cl ; retf
0x0000000000411619 : and byte ptr [r8 + 1], r9b ; ret
0x000000000041bf8f : and byte ptr [r8 - 0x7d], r9b ; retf
0x000000000041157e : and byte ptr [r9 - 0x77], r9b ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x000000000042b7d6 : and byte ptr [rax + 0x29], cl ; retf 0x860f
0x00000000004407fa : and byte ptr [rax + 0x3a], al ; xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x000000000042b94c : and byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x000000000041161a : and byte ptr [rax + 1], cl ; ret
0x0000000000400f01 : and byte ptr [rax + 1], cl ; ret 0xb70f
0x00000000004664ce : and byte ptr [rax + 9], cl ; ret 0xff83
0x0000000000440ac8 : and byte ptr [rax + 9], cl ; retf 0x8948
0x0000000000440bed : and byte ptr [rax + 9], cl ; retf 0xf48
0x000000000047396e : and byte ptr [rax + 9], cl ; retf 0xf4c
0x0000000000450e53 : and byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000477348 : and byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x39], r9b ; ret 0x870f
0x000000000045a644 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x45a658 ; call rax
0x000000000044fb96 : and byte ptr [rax - 0x7d], cl ; ret
0x000000000048d436 : and byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000467f04 : and byte ptr [rax - 0x7d], cl ; ret 0xe920
0x000000000041bf90 : and byte ptr [rax - 0x7d], cl ; retf
0x0000000000412f42 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000004601db : and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000048d409 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004482ea : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000049241c : and byte ptr [rbp - 0x77], cl ; ret
0x00000000004922e7 : and byte ptr [rbp - 0x77], cl ; retf 0x8b49
0x00000000004a98e8 : and byte ptr [rbx + 0x3d], bh ; retf
0x000000000048279b : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000468163 : and byte ptr [rbx + rcx*4 + 0x40], cl ; sub cl, ch ; ret 0xffe8
0x00000000004115ea : and byte ptr [rbx + rcx*4 + 0x75], cl ; sbb byte ptr [rax - 0x77], cl ; retf
0x0000000000494264 : and byte ptr [rbx - 0x42df0007], bh ; stc ; jmp qword ptr [rax]
0x000000000045de00 : and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000004941d4 : and byte ptr [rcx + rdi*8 - 0x649ff01], dh ; jmp rax
0x000000000041722f : and byte ptr [rcx - 0x2dcea42f], cl ; jmp rax
0x000000000041157f : and byte ptr [rcx - 0x77], cl ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x000000000047f624 : and byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret
0x00000000004a4e68 : and byte ptr [rdi - 3], dh ; jmp qword ptr [rbx]
0x0000000000447251 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000040fc1b : and byte ptr [rdi], cl ; test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x0000000000444ca0 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000004942e4 : and byte ptr [rdx - 0x43df0007], bh ; stc ; jmp qword ptr [rax]
0x00000000004ad405 : and byte ptr [rdx], al ; imul ecx, dword ptr [rsi], 0x18 ; ret
0x000000000042c3ea : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b1f4d : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x000000000049405c : and byte ptr [rsi - 7], ah ; call qword ptr [rax]
0x0000000000474932 : and ch, 0xf ; je 0x474959 ; add rax, 2 ; ret
0x00000000004482a8 : and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000004247fa : and ch, 2 ; cmovne rax, rdx ; ret
0x00000000004736bb : and ch, al ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x00000000004af680 : and ch, dh ; clc ; call qword ptr [rax]
0x000000000047491d : and cl, 0xf ; je 0x474945 ; ret
0x000000000041787a : and cl, byte ptr [rax + 0x39] ; retf
0x000000000044c891 : and cl, byte ptr [rax + 0x63] ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000047f424 : and cl, byte ptr [rax - 0x77] ; ret 0x1f0f
0x0000000000423f73 : and cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000494814 : and cl, byte ptr [rbx] ; cli ; jmp qword ptr [rdx + 0x12fffa0a]
0x000000000042bc2d : and cl, byte ptr [rcx - 0x77] ; ret
0x0000000000473d1a : and cl, byte ptr [rdx] ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000044911d : and dh, ah ; mov edi, edx ; mov eax, r8d ; syscall
0x000000000044c109 : and dh, al ; sub byte ptr [rcx], al ; ret
0x00000000004944bc : and dh, bl ; stc ; call qword ptr [rax]
0x0000000000469610 : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004943f0 : and dl, bl ; stc ; jmp rax
0x0000000000469188 : and dword ptr [r8], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000469189 : and dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000004a9662 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x0000000000417a37 : and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000417a8f : and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004188be : and dword ptr [rdi], ecx ; mov dh, 0 ; ret
0x0000000000491679 : and dword ptr [rdx], 0x89489000 ; fucomip st(0) ; retf
0x00000000004244d2 : and dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004a6719 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004a9661 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000491678 : and dword ptr fs:[rdx], 0x89489000 ; fucomip st(0) ; retf
0x000000000045ac6b : and eax, 0 ; ret
0x000000000048439c : and eax, 0x28 ; jne 0x4843e6 ; leave ; ret
0x00000000004197d3 : and eax, 0x2a ; add byte ptr [rax], al ; ret
0x00000000004004c9 : and eax, 0x2b8bfa ; nop ; ret
0x000000000040e998 : and eax, 0x30 ; call rax
0x000000000040e8d2 : and eax, 0x30 ; call rdx
0x000000000040e9be : and eax, 0x30 ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000044822d : and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000448278 : and eax, 0x3fffc00 ; pop rbx ; ret
0x00000000004609aa : and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000448323 : and eax, 0x7ff80000 ; div ecx ; mov eax, eax ; ret
0x00000000004482c7 : and eax, 0x7ff80000 ; ret
0x0000000000453c1b : and eax, 0x833fe283 ; retf 0x4180
0x000000000044bf47 : and eax, 0xc ; cmp eax, 4 ; je 0x44bf58 ; ret
0x000000000045ac0c : and eax, 0xf3087400 ; ret
0x000000000048283c : and eax, 2 ; sub eax, 1 ; ret
0x00000000004adbf5 : and eax, dword ptr [rax] ; add byte ptr [rax], ch ; mov bl, 0xf6 ; call qword ptr [rsi]
0x00000000004878d8 : and eax, dword ptr [rax] ; add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x000000000047f445 : and eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000485448 : and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x000000000047fd72 : and eax, dword ptr [rax] ; jne 0x47fdaa ; call qword ptr [rip + 0x23cae4]
0x0000000000487823 : and eax, dword ptr [rax] ; jne 0x487853 ; ret
0x0000000000484e9a : and eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x0000000000484a75 : and eax, dword ptr [rax] ; mov qword ptr [rip + 0x2375ea], rax ; ret
0x000000000047f4ef : and eax, dword ptr [rax] ; mov qword ptr [rsi], rax ; ret
0x000000000047f389 : and eax, dword ptr [rax] ; ret
0x000000000047bbf2 : and eax, dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004a4e20 : and eax, dword ptr [rdi + 0x7458fffd] ; std ; call qword ptr [rax]
0x00000000004a4e44 : and eax, dword ptr [rdi + 0x7650fffd] ; std ; jmp qword ptr [rbx]
0x00000000004a4e4c : and eax, dword ptr [rdi - 0x78dc0003] ; std ; jmp qword ptr [rbx]
0x0000000000452a0e : and eax, dword ptr [rip + 0x29480000] ; ret 0x349
0x0000000000417a38 : and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000417a90 : and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044bee2 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x44bef5 ; ret
0x00000000004a7e14 : and ebx, dword ptr [rbx] ; xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x000000000042d965 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000042d098 : and ecx, 0xffff ; sub eax, ecx ; ret
0x000000000044b63a : and ecx, dword ptr [rax - 0x77] ; ret 0xabe
0x00000000004029e5 : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; retf
0x0000000000493f91 : and ecx, edi ; jmp rax
0x00000000004b3281 : and edi, esp ; jmp qword ptr [rcx]
0x000000000041231c : and edx, 0xfffffffc ; add rdx, rcx ; jmp 0x412336
0x000000000041231b : and rdx, 0xfffffffffffffffc ; add rdx, rcx ; jmp 0x412337
0x000000000044c108 : and sil, al ; sub byte ptr [rcx], al ; ret
0x0000000000474477 : bnd je 0x474486 ; test edx, edx ; jne 0x474478 ; ret
0x000000000042b59a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x000000000042b4c0 : bsf eax, eax ; add rax, rdi ; ret
0x000000000042b9b1 : bsf eax, eax ; add rax, rdi ; vzeroupper ; ret
0x000000000042b4d0 : bsf eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x000000000042b4e0 : bsf eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x000000000042b4b0 : bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x000000000042b40f : bsf eax, eax ; lea rax, [rdi + rax + 0x30] ; ret
0x0000000000440473 : bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x0000000000440a96 : bsf eax, edx ; ret
0x0000000000474527 : bsf eax, edx ; shr rax, 2 ; ret
0x0000000000440bf2 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000440590 : bsf rax, rax ; lea rax, [rdi + rax] ; ret
0x0000000000440ae2 : bsf rax, rdx ; ret
0x0000000000474526 : bsf rax, rdx ; shr rax, 2 ; ret
0x0000000000473357 : bsr eax, eax ; add rax, rdi ; ret
0x00000000004735db : bsr eax, esi ; add rax, rdi ; ret
0x00000000004734e9 : bsr esi, esi ; lea rax, [rcx + rsi] ; ret
0x00000000004733e5 : bsr esi, esi ; lea rax, [rdi + rsi] ; ret
0x0000000000473356 : bsr rax, rax ; add rax, rdi ; ret
0x00000000004735da : bsr rax, rsi ; add rax, rdi ; ret
0x00000000004734e8 : bsr rsi, rsi ; lea rax, [rcx + rsi] ; ret
0x00000000004733e4 : bsr rsi, rsi ; lea rax, [rdi + rsi] ; ret
0x00000000004b0468 : call 0x124afe28
0x00000000004b1ad8 : call 0x144b158f
0x0000000000469ce6 : call 0x21469ce4
0x0000000000469e5c : call 0x21469e5a
0x000000000046a0eb : call 0x2146a0e9
0x000000000046a5b0 : call 0x2146a5ae
0x000000000046a76e : call 0x2146a76c
0x000000000046ad3f : call 0x2146ad3d
0x000000000046af78 : call 0x2146af76
0x0000000000403a1d : call 0x40043a
0x00000000004741cd : call 0x400492
0x0000000000413a59 : call 0x4004aa
0x00000000004039f5 : call 0x4004c2
0x0000000000455850 : call 0x401b12
0x000000000040955f : call 0x406062
0x0000000000421968 : call 0x40dc32
0x000000000041581a : call 0x411a72
0x0000000000416738 : call 0x4129c2
0x000000000041d0d8 : call 0x419372
0x0000000000421b55 : call 0x41dd92
0x0000000000403fbd : call 0x4201d2
0x0000000000483b78 : call 0x43fe67
0x000000000046fbcc : call 0x44be72
0x000000000040fbd7 : call 0x44bea2
0x0000000000451250 : call 0x44d522
0x000000000044e27a : call 0x45ad12
0x000000000040e5b7 : call 0x45b062
0x00000000004614d2 : call 0x45d772
0x0000000000488453 : call 0x484e82
0x00000000004a8fba : call 0xffffffffab585ab0
0x000000000041dd10 : call 0xffffffffc37b251a
0x000000000041f0d9 : call 0xffffffffc37b38e3
0x000000000046ab7e : call 0xffffffffc3caab86
0x0000000000440f47 : call 0xffffffffc4149898
0x0000000000440e67 : call 0xffffffffc43c97b8
0x0000000000461c87 : call 0xffffffffcc301c89
0x0000000000461c86 : call 0xffffffffcc301c8a
0x0000000000496560 : call 0xffffffffd44960d8
0x000000000044b2f5 : call 0xffffffffe1441058
0x00000000004035c2 : call 2
0x0000000000489b70 : call qword ptr [r14]
0x00000000004941b7 : call qword ptr [rax + 0x20fff994]
0x00000000004943eb : call qword ptr [rax + 0x20fff9e7]
0x0000000000494773 : call qword ptr [rax + 0x20fffa10]
0x000000000049455b : call qword ptr [rax + 0x20fffa13]
0x0000000000494c6b : call qword ptr [rax + 0x20fffa37]
0x0000000000494a53 : call qword ptr [rax + 0x20fffa3a]
0x000000000049506b : call qword ptr [rax - 0x1f00055a]
0x0000000000494503 : call qword ptr [rax - 0x1f00062d]
0x0000000000494517 : call qword ptr [rax - 0x1f00063b]
0x0000000000494337 : call qword ptr [rax - 0x1f000659]
0x00000000004944cf : call qword ptr [rax - 0x2f000641]
0x0000000000493f77 : call qword ptr [rax - 0x2f0006e9]
0x0000000000493f67 : call qword ptr [rax - 0x2f0006ee]
0x0000000000493f57 : call qword ptr [rax - 0x2f0006f3]
0x000000000041ee93 : call qword ptr [rax]
0x000000000040ea90 : call qword ptr [rbx]
0x0000000000489d20 : call qword ptr [rcx]
0x000000000041a66d : call qword ptr [rdi]
0x0000000000494837 : call qword ptr [rdx + 0x12fffa06]
0x000000000049482f : call qword ptr [rdx + 0x12fffa07]
0x0000000000494827 : call qword ptr [rdx + 0x12fffa08]
0x000000000049481f : call qword ptr [rdx + 0x12fffa09]
0x0000000000494647 : call qword ptr [rdx + 0x22fffa0e]
0x0000000000494b3f : call qword ptr [rdx + 0x22fffa35]
0x00000000004940b3 : call qword ptr [rdx]
0x000000000047fd76 : call qword ptr [rip + 0x23cae4]
0x00000000004945a3 : call qword ptr [rsi + 0x26fffa12]
0x0000000000494a9b : call qword ptr [rsi + 0x26fffa39]
0x000000000045a899 : call qword ptr [rsi]
0x000000000047c7c7 : call r10
0x000000000040092c : call r11
0x000000000044a810 : call r12
0x000000000044ebb0 : call r14
0x000000000044ad52 : call r15
0x0000000000400410 : call rax
0x000000000040092d : call rbx
0x000000000041cac3 : call rcx
0x000000000044ad53 : call rdi
0x000000000040e8d7 : call rdx
0x000000000044ebb1 : call rsi
0x000000000044a811 : call rsp
0x0000000000428f77 : cdq ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000048c6a4 : cdq ; add rax, r9 ; jmp rax
0x0000000000495039 : cdq ; cli ; call qword ptr [rax]
0x00000000004abd89 : cdq ; cmc ; call rax
0x00000000004a8ec0 : cdq ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004492ae : cdq ; ret
0x00000000004614d3 : cdq ; ret 0xffff
0x000000000040709b : cdq ; sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe07], al ; retf 0x1b
0x00000000004b5bd1 : cdq ; std ; call qword ptr [rdx]
0x0000000000494110 : cdqe ; stc ; jmp rsi
0x000000000047d859 : clc ; add al, 0x75 ; retf
0x0000000000478044 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000469df1 : clc ; add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x000000000041d11a : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041cd77 : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000047e793 : clc ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x000000000040d4dd : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x000000000048874f : clc ; add ebx, dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x000000000044fe02 : clc ; add ecx, dword ptr [rax - 0x77] ; or byte ptr [r15], 0x8e ; ret 1
0x000000000042b297 : clc ; add rax, rcx ; ret
0x000000000042b7c4 : clc ; add rax, rcx ; vzeroupper ; ret
0x00000000004af60a : clc ; call qword ptr [rax]
0x000000000049512d : clc ; cli ; call qword ptr [rax]
0x0000000000495151 : clc ; cli ; inc dword ptr [rax] ; stc ; cli ; jmp qword ptr [rax]
0x0000000000495145 : clc ; cli ; inc eax ; clc ; cli ; jmp rax
0x0000000000495131 : clc ; cli ; jmp qword ptr [rax]
0x0000000000495149 : clc ; cli ; jmp rax
0x0000000000422eb8 : clc ; cmovne rax, rcx ; ret
0x000000000042d909 : clc ; cmp rcx, rax ; jne 0x42d93b ; xor eax, eax ; ret
0x000000000042d908 : clc ; cmp rcx, rax ; jne 0x42d93c ; xor eax, eax ; ret
0x0000000000476a26 : clc ; dec dword ptr [rax + 0x39] ; ret
0x000000000047fa10 : clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000423880 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000472940 : clc ; dec dword ptr [rax + 1] ; ret
0x000000000047fc34 : clc ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000048cb8e : clc ; dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x0000000000401a9c : clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000046fe59 : clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x000000000041136d : clc ; dec dword ptr [rax - 0x77] ; retf
0x0000000000478b6b : clc ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000492255 : clc ; dec dword ptr [rcx - 0x73] ; and byte ptr [rax - 0x7d], cl ; retf
0x0000000000461aa6 : clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000045fa4e : clc ; dec dword ptr [rdi] ; test dword ptr [rsi - 0x16000007], esi ; ret
0x0000000000459794 : clc ; fiadd dword ptr [rbx] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000045ee03 : clc ; idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x0000000000459872 : clc ; inc dword ptr [rcx - 0x77] ; ret 0x840f
0x00000000004482ca : clc ; jg 0x448299 ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000448326 : clc ; jg 0x448326 ; int1 ; mov eax, eax ; ret
0x0000000000454117 : clc ; jg 0x4540a6 ; ret 0xdb76
0x00000000004af61e : clc ; jmp qword ptr [rsi]
0x00000000004609af : clc ; jmp rax
0x000000000048d633 : clc ; leave ; ret
0x00000000004a7b22 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000412a44 : clc ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042f407 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042fd77 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434cc7 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042ff77 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434c37 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000430177 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434ba7 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042f423 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000447e0e : clc ; mov qword ptr [rdi], rcx ; ret
0x0000000000447f8d : clc ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x000000000043865c : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000044709a : clc ; mov qword ptr [rdi], rsi ; ret
0x000000000048d7b1 : clc ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000046f4b0 : clc ; mov rdx, r8 ; jmp 0x46f482
0x0000000000412a5c : clc ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041ac86 : clc ; pop rbp ; pop r12 ; ret
0x00000000004719f7 : clc ; push qword ptr [rbp + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x00000000004755a3 : clc ; push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x0000000000491048 : clc ; push rbx ; ret
0x0000000000412a75 : clc ; ret
0x000000000043ede4 : clc ; rol ch, 1 ; jns 0x43edc5 ; retf 0xead3
0x000000000043ef34 : clc ; rol ch, 1 ; jns 0x43ef15 ; retf 0xead3
0x000000000043f084 : clc ; rol ch, 1 ; jns 0x43f065 ; retf 0xead3
0x000000000043f1d4 : clc ; rol ch, 1 ; jns 0x43f1b5 ; retf 0xead3
0x000000000043f324 : clc ; rol ch, 1 ; jns 0x43f305 ; retf 0xead3
0x000000000043f474 : clc ; rol ch, 1 ; jns 0x43f455 ; retf 0xead3
0x000000000043f5c4 : clc ; rol ch, 1 ; jns 0x43f5a5 ; retf 0xead3
0x000000000043f714 : clc ; rol ch, 1 ; jns 0x43f6f5 ; retf 0xead3
0x000000000043f864 : clc ; rol ch, 1 ; jns 0x43f845 ; retf 0xead3
0x000000000043f9b4 : clc ; rol ch, 1 ; jns 0x43f995 ; retf 0xead3
0x000000000043fb04 : clc ; rol ch, 1 ; jns 0x43fae5 ; retf 0xead3
0x000000000043fc54 : clc ; rol ch, 1 ; jns 0x43fc35 ; retf 0xead3
0x000000000043fda4 : clc ; rol ch, 1 ; jns 0x43fd85 ; retf 0xead3
0x000000000043fef4 : clc ; rol ch, 1 ; jns 0x43fed5 ; retf 0xead3
0x0000000000440044 : clc ; rol ch, 1 ; jns 0x440025 ; retf 0xead3
0x0000000000482f0a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000047463f : clc ; shr rax, 2 ; ret
0x0000000000494a41 : clc ; stc ; jmp rax
0x0000000000481b7d : clc ; std ; jbe 0x481b8d ; ret
0x0000000000485381 : clc ; sub rax, r8 ; ret
0x0000000000440d06 : clc ; sub rax, rdx ; vzeroupper ; ret
0x0000000000446cab : clc ; sub rax, rsi ; ret
0x000000000042b93b : clc ; vzeroupper ; ret
0x00000000004ab3b8 : cld ; adc esi, edi ; jmp rsp
0x000000000044822f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000041231e : cld ; add rdx, rcx ; jmp 0x412334
0x00000000004b408e : cld ; call rdx
0x0000000000497466 : cld ; call rsp
0x00000000004a3b16 : cld ; inc dword ptr [rax - 0x7f000351] ; scasd eax, dword ptr [rdi] ; cld ; jmp qword ptr [rax]
0x000000000047bd4e : cld ; inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x000000000044830c : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000044827a : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004a3b1e : cld ; jmp qword ptr [rax]
0x00000000004b2e82 : cld ; jmp qword ptr [rbx]
0x00000000004b3282 : cld ; jmp qword ptr [rcx]
0x00000000004b415a : cld ; jmp qword ptr [rsi]
0x000000000049742a : cld ; jmp rax
0x00000000004b2e22 : cld ; jmp rdx
0x00000000004a3d62 : cld ; jmp rsp
0x00000000004a88a5 : cld ; lodsb al, byte ptr [rsi] ; loop 0x4a8874 ; retf
0x0000000000490e90 : cld ; mov al, 0x22 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000042fb92 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042fd95 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042ff95 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430195 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000447e16 : cld ; mov dword ptr [rdi], ecx ; ret
0x0000000000447f98 : cld ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x000000000043866e : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000004470a8 : cld ; mov dword ptr [rdi], esi ; ret
0x00000000004470a2 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000042f7c6 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434e56 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f9a6 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434dd6 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fb86 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434d56 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f5e6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434ed6 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000449e17 : cld ; mov rdi, r12 ; mov eax, 0x4f ; syscall
0x0000000000497426 : cld ; push qword ptr [rax] ; sub edi, esp ; jmp rax
0x0000000000497422 : cld ; push rax ; sub edi, esp ; push qword ptr [rax] ; sub edi, esp ; jmp rax
0x000000000042f471 : cld ; ret
0x00000000004b3fa4 : cld ; ret 0xfffc
0x0000000000409560 : cld ; retf 0xffff
0x00000000004a6fc3 : cld ; shr al, cl ; add al, 0x3d ; retf
0x0000000000494a0d : cld ; stc ; jmp qword ptr [rax - 0x1f00061a]
0x00000000004ab289 : cld ; std ; call rax
0x00000000004b2c71 : cld ; sti ; jmp qword ptr [rbx]
0x00000000004a6fd6 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000447932 : cld ; vzeroupper ; ret
0x0000000000400ba8 : cli ; add byte ptr [rax], al ; nop ; pop rbp ; ret
0x0000000000415711 : cli ; add ch, al ; pop rax ; ret
0x0000000000415818 : cli ; add ch, al ; push rcx ; ret 0xffff
0x0000000000469345 : cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x00000000004116d2 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000447e01 : cli ; add dword ptr [rdi + 0x15], esi ; jb 0x447e11 ; mov byte ptr [rdi], cl ; ret
0x0000000000446dfb : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043868c : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000448eee : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x0000000000448f4c : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x000000000040e5b6 : cli ; call 0x45b063
0x00000000004a8fb9 : cli ; call 0xffffffffab585ab1
0x0000000000494772 : cli ; call qword ptr [rax + 0x20fffa10]
0x000000000049455a : cli ; call qword ptr [rax + 0x20fffa13]
0x0000000000494c6a : cli ; call qword ptr [rax + 0x20fffa37]
0x0000000000494a52 : cli ; call qword ptr [rax + 0x20fffa3a]
0x000000000049506a : cli ; call qword ptr [rax - 0x1f00055a]
0x000000000049457a : cli ; call qword ptr [rax]
0x00000000004b1ada : cli ; call qword ptr [rbx]
0x00000000004b17da : cli ; call qword ptr [rcx]
0x00000000004b0ff2 : cli ; call qword ptr [rdi]
0x0000000000494836 : cli ; call qword ptr [rdx + 0x12fffa06]
0x000000000049482e : cli ; call qword ptr [rdx + 0x12fffa07]
0x0000000000494826 : cli ; call qword ptr [rdx + 0x12fffa08]
0x000000000049481e : cli ; call qword ptr [rdx + 0x12fffa09]
0x0000000000494646 : cli ; call qword ptr [rdx + 0x22fffa0e]
0x0000000000494b3e : cli ; call qword ptr [rdx + 0x22fffa35]
0x0000000000494626 : cli ; call qword ptr [rdx]
0x00000000004945a2 : cli ; call qword ptr [rsi + 0x26fffa12]
0x0000000000494a9a : cli ; call qword ptr [rsi + 0x26fffa39]
0x00000000004945c2 : cli ; call qword ptr [rsi]
0x000000000049456a : cli ; call rax
0x00000000004b0f5e : cli ; call rcx
0x000000000049460e : cli ; call rdx
0x00000000004945b2 : cli ; call rsi
0x00000000004946de : cli ; call rsp
0x0000000000495175 : cli ; cli ; jmp qword ptr [rax]
0x000000000044c3b5 : cli ; cmp eax, 0x83497174 ; ret
0x000000000045d55e : cli ; dec dword ptr [rax + 0x29] ; ret
0x000000000047f5b0 : cli ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000045c515 : cli ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000471c47 : cli ; dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x0000000000494566 : cli ; inc dword ptr [rax + 0x12] ; cli ; call rax
0x0000000000494c76 : cli ; inc dword ptr [rax + 0x36] ; cli ; call rax
0x0000000000494a5e : cli ; inc dword ptr [rax + 0x39] ; cli ; call rax
0x000000000049477e : cli ; inc dword ptr [rax + 0xf] ; cli ; call rax
0x000000000049498e : cli ; inc dword ptr [rax + 3] ; cli ; jmp rax
0x0000000000495076 : cli ; inc dword ptr [rax - 0x2f000556] ; stosd dword ptr [rdi], eax ; cli ; jmp qword ptr [rax]
0x0000000000495066 : cli ; inc dword ptr [rax - 0x5b] ; cli ; call qword ptr [rax - 0x1f00055a]
0x0000000000495036 : cli ; inc dword ptr [rax - 0x67] ; cli ; call qword ptr [rax]
0x0000000000495016 : cli ; inc dword ptr [rax - 0x74] ; cli ; jmp rax
0x0000000000494556 : cli ; inc dword ptr [rax] ; adc al, 0xfa ; call qword ptr [rax + 0x20fffa13]
0x000000000049476e : cli ; inc dword ptr [rax] ; adc edx, edi ; call qword ptr [rax + 0x20fffa10]
0x000000000049512a : cli ; inc dword ptr [rax] ; clc ; cli ; call qword ptr [rax]
0x0000000000495096 : cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000495172 : cli ; inc dword ptr [rax] ; cli ; cli ; jmp qword ptr [rax]
0x0000000000494c66 : cli ; inc dword ptr [rax] ; cmp dl, bh ; call qword ptr [rax + 0x20fffa37]
0x0000000000494f9e : cli ; inc dword ptr [rax] ; push rax ; cli ; call qword ptr [rax]
0x0000000000495152 : cli ; inc dword ptr [rax] ; stc ; cli ; jmp qword ptr [rax]
0x0000000000494e02 : cli ; inc dword ptr [rbx + rbp] ; cli ; push qword ptr [rdx + rbp - 6] ; jmp rsp
0x00000000004946da : cli ; inc dword ptr [rbx + rdx - 6] ; call rsp
0x000000000045986f : cli ; inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x00000000004525cd : cli ; inc dword ptr [rcx - 0x77] ; ret
0x00000000004558b5 : cli ; inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x0000000000494612 : cli ; inc dword ptr [rdx + 0x14] ; cli ; call rdx
0x0000000000494bd2 : cli ; inc dword ptr [rdx + rdi - 6] ; call rsp
0x0000000000494842 : cli ; inc dword ptr [rdx] ; add eax, 0x472fffa ; cli ; jmp rdx
0x0000000000494b3a : cli ; inc dword ptr [rdx] ; cli ; call qword ptr [rdx + 0x22fffa35]
0x00000000004945ae : cli ; inc dword ptr [rsi + 0x11] ; cli ; call rsi
0x0000000000494aa6 : cli ; inc dword ptr [rsi + 0x38] ; cli ; call rsi
0x000000000049459e : cli ; inc dword ptr [rsi] ; adc edi, edx ; call qword ptr [rsi + 0x26fffa12]
0x0000000000494a96 : cli ; inc dword ptr [rsi] ; cmp bh, dl ; call qword ptr [rsi + 0x26fffa39]
0x0000000000495146 : cli ; inc eax ; clc ; cli ; jmp rax
0x0000000000494f8e : cli ; inc eax ; cli ; call rax
0x000000000049511e : cli ; inc eax ; idiv edx ; call rax
0x000000000049516a : cli ; inc eax ; stc ; cli ; jmp rax
0x0000000000494eca : cli ; inc eax ; sub edx, edi ; jmp qword ptr [rax]
0x0000000000494a7e : cli ; inc eax ; xor eax, 0x3550fffa ; cli ; jmp rax
0x0000000000438647 : cli ; jg 0x43865a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000446dc6 : cli ; jg 0x446dd8 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000004473f9 : cli ; jg 0x44740c ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000447861 : cli ; jg 0x447874 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000447f82 : cli ; jg 0x447f92 ; vzeroupper ; ret
0x0000000000448158 : cli ; jg 0x448168 ; vzeroupper ; ret
0x00000000004947c6 : cli ; jmp qword ptr [rax + 0x10fffa04]
0x000000000049474e : cli ; jmp qword ptr [rax + 0x10fffa0d]
0x000000000049455e : cli ; jmp qword ptr [rax]
0x0000000000494816 : cli ; jmp qword ptr [rdx + 0x12fffa0a]
0x000000000049464a : cli ; jmp qword ptr [rdx]
0x00000000004945a6 : cli ; jmp qword ptr [rsi]
0x0000000000494766 : cli ; jmp rax
0x000000000040d284 : cli ; jmp rdx
0x000000000049458e : cli ; jmp rsi
0x0000000000494702 : cli ; jmp rsp
0x0000000000494bc6 : cli ; lcall [rsi + 0x2efffa34] ; xor al, 0xfa ; call rsp
0x0000000000494606 : cli ; lcall [rsi + rcx + 0xe2cfffa] ; cli ; call rdx
0x0000000000494e4e : cli ; ljmp [rdx + 0x29] ; cli ; call qword ptr [rax]
0x000000000049460a : cli ; ljmp [rsi + rcx] ; cli ; call rdx
0x0000000000494bca : cli ; ljmp [rsi] ; xor al, 0xfa ; call rsp
0x0000000000454f2c : cli ; loopne 0x454fa9 ; jae 0x454ebf ; retf 0xb941
0x000000000042ff98 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004004ca : cli ; mov ebp, dword ptr [rbx] ; add byte ptr [rsi - 0x70], ah ; ret
0x0000000000403a19 : cli ; mov rdi, rax ; call 0x40043e
0x000000000040d566 : cli ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000042bc48 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000042a6f6 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049474c : cli ; or eax, 0xda0fffa ; cli ; call qword ptr [rax]
0x00000000004a9441 : cli ; push 0x6e ; ja 0x4a93ce ; ret 0x48f
0x0000000000494ebe : cli ; push qword ptr [rax + 0x2b] ; cli ; jmp rax
0x000000000049498a : cli ; push qword ptr [rax + 0x40fffa03] ; add edi, edx ; jmp rax
0x0000000000494562 : cli ; push qword ptr [rax + 0x40fffa12] ; adc bh, dl ; call rax
0x0000000000494c72 : cli ; push qword ptr [rax + 0x40fffa36] ; cli ; call rax
0x0000000000494a5a : cli ; push qword ptr [rax + 0x40fffa39] ; cmp edx, edi ; call rax
0x0000000000494956 : cli ; push qword ptr [rax + 0xa] ; cli ; jmp rax
0x000000000049511a : cli ; push qword ptr [rax - 0x3f000509] ; idiv edx ; call rax
0x00000000004950c2 : cli ; push qword ptr [rax - 0x3f00050e] ; cli ; call rax
0x0000000000494f8a : cli ; push qword ptr [rax - 0x3f0005bb] ; cli ; call rax
0x00000000004947c2 : cli ; push qword ptr [rax] ; add eax, 0x4a0fffa ; cli ; call qword ptr [rax]
0x0000000000495072 : cli ; push qword ptr [rax] ; test eax, 0xaa80fffa ; cli ; call rax
0x00000000004948fe : cli ; push qword ptr [rbp + rax - 6] ; jmp rsp
0x00000000004946d6 : cli ; push qword ptr [rbx + rdx + 0x1344fffa] ; cli ; call rsp
0x0000000000494846 : cli ; push qword ptr [rdx + 4] ; cli ; jmp rdx
0x0000000000494e06 : cli ; push qword ptr [rdx + rbp - 6] ; jmp rsp
0x00000000004945aa : cli ; push qword ptr [rsi + 0x46fffa11] ; adc edx, edi ; call rsi
0x0000000000494aa2 : cli ; push qword ptr [rsi + 0x46fffa38] ; cmp dl, bh ; call rsi
0x000000000049514e : cli ; push rax ; clc ; cli ; inc dword ptr [rax] ; stc ; cli ; jmp qword ptr [rax]
0x00000000004950d2 : cli ; push rax ; cli ; call qword ptr [rax]
0x0000000000494f9a : cli ; push rax ; cli ; inc dword ptr [rax] ; push rax ; cli ; call qword ptr [rax]
0x0000000000495126 : cli ; push rax ; idiv edx ; inc dword ptr [rax] ; clc ; cli ; call qword ptr [rax]
0x0000000000495092 : cli ; push rax ; int1 ; cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000494952 : cli ; push rax ; or bh, dl ; push qword ptr [rax + 0xa] ; cli ; jmp rax
0x0000000000494eba : cli ; push rax ; sub edi, edx ; push qword ptr [rax + 0x2b] ; cli ; jmp rax
0x00000000004945ba : cli ; push rsi ; psubd mm7, mm7 ; xchg byte ptr [rdi], cl ; cli ; call qword ptr [rsi]
0x00000000004948fa : cli ; push rsp ; add eax, 0x574fffa ; cli ; jmp rsp
0x0000000000447d39 : cli ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000004a7ee5 : cli ; ret 0xac65
0x000000000044be6b : cli ; setae al ; ret
0x00000000004b0bd9 : cli ; std ; jmp qword ptr [rdx]
0x00000000004a7d90 : cli ; test bh, dl ; retf 0xdf7f
0x00000000004a6b2a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000489a3a : cmc ; add byte ptr [rax], al ; add al, ch ; int 0x80
0x000000000044d265 : cmc ; add cl, ch ; retf
0x00000000004abcea : cmc ; call qword ptr [rdx]
0x00000000004abd8a : cmc ; call rax
0x00000000004abcfe : cmc ; call rsp
0x00000000004af681 : cmc ; clc ; call qword ptr [rax]
0x00000000004525cc : cmc ; cli ; inc dword ptr [rcx - 0x77] ; ret
0x0000000000478c3f : cmc ; ja 0x478c40 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004abea2 : cmc ; jmp qword ptr [rax]
0x00000000004a9869 : cmc ; mov ch, 0xab ; ret
0x0000000000434dda : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f81e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000446183 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004a6717 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000494a39 : cmc ; stc ; jmp rax
0x00000000004b19b1 : cmc ; std ; call rdx
0x0000000000446187 : cmc ; sub eax, edx ; ret
0x00000000004a8ea5 : cmc ; xlatb ; ret 0x4e27
0x000000000041881a : cmc ; xor al, 0x2a ; add byte ptr [rcx], al ; ret
0x0000000000419139 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000419138 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000448254 : cmove eax, ecx ; pop rbx ; ret
0x0000000000471fa1 : cmove eax, ecx ; ret
0x0000000000423883 : cmove eax, edx ; add rsp, 8 ; ret
0x000000000044821c : cmove eax, edx ; pop rbx ; ret
0x00000000004239bf : cmove eax, edx ; ret
0x0000000000414b8f : cmove ebp, esp ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047e898 : cmove ecx, eax ; mov rax, rcx ; ret
0x0000000000471fa0 : cmove r8, rcx ; ret
0x0000000000448253 : cmove rax, rcx ; pop rbx ; ret
0x0000000000423882 : cmove rax, rdx ; add rsp, 8 ; ret
0x000000000044821b : cmove rax, rdx ; pop rbx ; ret
0x00000000004239be : cmove rax, rdx ; ret
0x000000000047e897 : cmove rcx, rax ; mov rax, rcx ; ret
0x000000000041657b : cmovg eax, ecx ; test rdx, rdx ; jne 0x416579 ; ret
0x0000000000470abb : cmovg eax, ecx ; test rdx, rdx ; jne 0x470ab9 ; ret
0x0000000000422eba : cmovne eax, ecx ; ret
0x00000000004482ac : cmovne eax, edx ; pop rbx ; ret
0x00000000004238bf : cmovne eax, edx ; ret
0x00000000004406c4 : cmovne eax, edx ; vzeroupper ; ret
0x0000000000422eb9 : cmovne rax, rcx ; ret
0x00000000004482ab : cmovne rax, rdx ; pop rbx ; ret
0x00000000004238be : cmovne rax, rdx ; ret
0x00000000004406c3 : cmovne rax, rdx ; vzeroupper ; ret
0x000000000042b258 : cmovs eax, dword ptr [rbx + 0x148f0e7] ; retf 0x8348
0x0000000000450c2c : cmovs eax, edx ; ret
0x000000000048dca8 : cmovs ecx, dword ptr [rcx + 0x1bffe] ; add byte ptr [rax], al ; jmp rax
0x0000000000471d08 : cmovs edi, dword ptr [rcx] ; int1 ; jne 0x471d09 ; lea eax, [rdx + rdi] ; ret
0x00000000004481fe : cmovs esp, dword ptr [rbx + 0xc] ; xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x0000000000448290 : cmovs esp, dword ptr [rbx + 4] ; xchg eax, esi ; add rax, rsi ; jmp rax
0x0000000000446c98 : cmp ah, byte ptr [rbx - 0x27] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000004af44d : cmp al, 0 ; add al, dh ; ret 0xfff7
0x00000000004884e0 : cmp al, 0x23 ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000455a52 : cmp al, 0x24 ; add byte ptr [rcx - 0x77], al ; ret
0x000000000044f942 : cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x0000000000416747 : cmp al, 0x24 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000416736 : cmp al, 0x24 ; call 0x4129c4
0x000000000048ddfd : cmp al, 0x24 ; mov rdx, qword ptr [rbp] ; call r12
0x000000000048d2cc : cmp al, 0x31 ; or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x000000000048d25d : cmp al, 0x32 ; or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x00000000004a7b20 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004a6a23 : cmp al, 0x66 ; movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x00000000004a950b : cmp al, 0x93 ; in al, dx ; retf 0xae32
0x000000000045a441 : cmp al, 0xb3 ; add rdi, r11 ; jmp rdi
0x00000000004a3d60 : cmp al, 0xb5 ; cld ; jmp rsp
0x000000000040d569 : cmp al, 0xba ; add rdi, r10 ; jmp rdi
0x000000000047fd70 : cmp al, 0xcb ; and eax, dword ptr [rax] ; jne 0x47fdac ; call qword ptr [rip + 0x23cae4]
0x000000000044b71d : cmp al, 0xff ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000446646 : cmp al, byte ptr [rsi - 1] ; jne 0x44666c ; xor eax, eax ; ret
0x000000000042b4b6 : cmp al, dh ; ret
0x000000000042b4b5 : cmp al, r14b ; ret
0x000000000048b046 : cmp bh, 0x10 ; jne 0x48b06f ; xor eax, eax ; ret
0x000000000048e1e6 : cmp bh, 0x10 ; jne 0x48e205 ; xor eax, eax ; ret
0x000000000048f046 : cmp bh, 0x10 ; jne 0x48f065 ; xor eax, eax ; ret
0x000000000048fab6 : cmp bh, 0x10 ; jne 0x48fadf ; xor eax, eax ; ret
0x000000000048e1cc : cmp bh, 0x30 ; jne 0x48e201 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048f02c : cmp bh, 0x30 ; jne 0x48f061 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000494a99 : cmp bh, dl ; call qword ptr [rsi + 0x26fffa39]
0x0000000000494bd5 : cmp bh, dl ; call rsp
0x0000000000494a55 : cmp bh, dl ; jmp qword ptr [rax]
0x0000000000410ab2 : cmp byte ptr [r8 - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x00000000004b4874 : cmp byte ptr [rax + 0x2080000], dl ; std ; jmp qword ptr [rdx]
0x000000000041246f : cmp byte ptr [rax + 0x29], cl ; ret
0x0000000000476e33 : cmp byte ptr [rax + 0x29], cl ; ret 0x8d49
0x000000000041050e : cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000412f19 : cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x00000000004016bb : cmp byte ptr [rax + 0x39], cl ; ret 0x4f76
0x000000000048298e : cmp byte ptr [rax + 0x39], cl ; retf
0x000000000042b4f7 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x0000000000470625 : cmp byte ptr [rax + 1], cl ; ret
0x00000000004700b0 : cmp byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004b4074 : cmp byte ptr [rax - 0x35480000], cl ; cld ; jmp qword ptr [rcx]
0x000000000045867f : cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000045b0a7 : cmp byte ptr [rax - 0x73], cl ; dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000451278 : cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000045b224 : cmp byte ptr [rax - 0x75], cl ; jl 0x45b255 ; and byte ptr [rax + 1], cl ; ret
0x0000000000410ab3 : cmp byte ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000047e2b9 : cmp byte ptr [rax - 0x77], cl ; retf
0x0000000000411340 : cmp byte ptr [rax - 0x77], cl ; retf 0x775
0x000000000046fe56 : cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000452b84 : cmp byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000412da0 : cmp byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000042b4e6 : cmp byte ptr [rax], ah ; ret
0x0000000000416bb3 : cmp byte ptr [rax], al ; je 0x416bc5 ; ret
0x000000000048d1cf : cmp byte ptr [rax], al ; je 0x48d1f8 ; add rsp, 0x18 ; ret
0x0000000000446c32 : cmp byte ptr [rax], al ; retf 0xf66
0x0000000000440260 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x000000000042b4d6 : cmp byte ptr [rax], dl ; ret
0x000000000042b4d5 : cmp byte ptr [rax], r10b ; ret
0x000000000042b4e5 : cmp byte ptr [rax], r12b ; ret
0x000000000044025f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x0000000000494228 : cmp byte ptr [rbp - 0x407f0007], 0xf9 ; call qword ptr [rax]
0x00000000004b3fc1 : cmp byte ptr [rbx + 0x2030d07], al ; cld ; ret
0x00000000004b3ff5 : cmp byte ptr [rbx + 0x2030d07], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b3f8d : cmp byte ptr [rbx + 0x3030d07], al ; or al, byte ptr [rcx] ; ret
0x000000000048ace8 : cmp byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x000000000040dab6 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000416230 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000004acccc : cmp byte ptr [rbx - 0x1ff1b5f9], al ; add dword ptr [rdx], eax ; retf
0x00000000004af374 : cmp byte ptr [rbx], bh ; add byte ptr [rax], al ; mov byte ptr [rbp - 9], dl ; jmp qword ptr [rbx]
0x0000000000471a30 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000048d2cb : cmp byte ptr [rcx + rsi], 8 ; jne 0x48d2de ; mov qword ptr [rax], rdx ; ret
0x0000000000403f6b : cmp byte ptr [rcx - 0x75], al ; push rdi ; adc al, 0xf ; retf 0xfa83
0x00000000004583a7 : cmp byte ptr [rcx - 0x77], cl ; push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x0000000000480186 : cmp byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000049422c : cmp byte ptr [rdi - 0x4def0007], 0xf9 ; call rax
0x00000000004ab282 : cmp byte ptr [rdi], 0 ; add byte ptr [rax + 0x40], al ; js 0x4ab28f ; std ; call rax
0x0000000000416b78 : cmp byte ptr [rdi], cl ; ret 0x389
0x000000000042cddd : cmp byte ptr [rdi], dl ; ret
0x000000000042d8f0 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042d8d9 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042d8c2 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042c37e : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000048d25c : cmp byte ptr [rdx + rsi], 8 ; jne 0x48d285 ; mov rax, qword ptr [rax] ; ret
0x000000000048c804 : cmp cl, 0xff ; dec dword ptr [rcx + 0x31] ; retf 0x8948
0x0000000000488dc2 : cmp cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x000000000042dfc1 : cmp cl, byte ptr [rdi] ; retf 0x6601
0x000000000042e111 : cmp cl, byte ptr [rdi] ; retf 0x6602
0x000000000042e261 : cmp cl, byte ptr [rdi] ; retf 0x6603
0x000000000042e3b1 : cmp cl, byte ptr [rdi] ; retf 0x6604
0x000000000042e501 : cmp cl, byte ptr [rdi] ; retf 0x6605
0x000000000042e651 : cmp cl, byte ptr [rdi] ; retf 0x6606
0x000000000042e7a1 : cmp cl, byte ptr [rdi] ; retf 0x6607
0x000000000042e8f1 : cmp cl, byte ptr [rdi] ; retf 0x6608
0x000000000042ea41 : cmp cl, byte ptr [rdi] ; retf 0x6609
0x000000000042eb91 : cmp cl, byte ptr [rdi] ; retf 0x660a
0x000000000042ece1 : cmp cl, byte ptr [rdi] ; retf 0x660b
0x000000000042ee31 : cmp cl, byte ptr [rdi] ; retf 0x660c
0x000000000042ef81 : cmp cl, byte ptr [rdi] ; retf 0x660d
0x000000000042f0d1 : cmp cl, byte ptr [rdi] ; retf 0x660e
0x000000000042f221 : cmp cl, byte ptr [rdi] ; retf 0x660f
0x00000000004331fa : cmp cl, byte ptr [rdi] ; retf 0xf01
0x000000000043337a : cmp cl, byte ptr [rdi] ; retf 0xf02
0x00000000004334fa : cmp cl, byte ptr [rdi] ; retf 0xf03
0x000000000043367a : cmp cl, byte ptr [rdi] ; retf 0xf04
0x00000000004337fa : cmp cl, byte ptr [rdi] ; retf 0xf05
0x000000000043397a : cmp cl, byte ptr [rdi] ; retf 0xf06
0x0000000000433afa : cmp cl, byte ptr [rdi] ; retf 0xf07
0x0000000000433c7a : cmp cl, byte ptr [rdi] ; retf 0xf08
0x0000000000433dfa : cmp cl, byte ptr [rdi] ; retf 0xf09
0x0000000000433f7a : cmp cl, byte ptr [rdi] ; retf 0xf0a
0x00000000004340fa : cmp cl, byte ptr [rdi] ; retf 0xf0b
0x000000000043427a : cmp cl, byte ptr [rdi] ; retf 0xf0c
0x00000000004343fa : cmp cl, byte ptr [rdi] ; retf 0xf0d
0x000000000043457a : cmp cl, byte ptr [rdi] ; retf 0xf0e
0x00000000004346fa : cmp cl, byte ptr [rdi] ; retf 0xf0f
0x00000000004a98e6 : cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000404827 : cmp cl, ch ; ret 0xfffb
0x00000000004406c1 : cmp dh, byte ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x000000000044813a : cmp dh, byte ptr [rdx + 2] ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000048b045 : cmp dil, 0x10 ; jne 0x48b070 ; xor eax, eax ; ret
0x000000000048e1e5 : cmp dil, 0x10 ; jne 0x48e206 ; xor eax, eax ; ret
0x000000000048f045 : cmp dil, 0x10 ; jne 0x48f066 ; xor eax, eax ; ret
0x000000000048fab5 : cmp dil, 0x10 ; jne 0x48fae0 ; xor eax, eax ; ret
0x0000000000447e00 : cmp dl, 1 ; ja 0x447e23 ; jb 0x447e12 ; mov byte ptr [rdi], cl ; ret
0x000000000043868b : cmp dl, 1 ; jb 0x43869d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000446dfa : cmp dl, 1 ; jb 0x446e08 ; mov byte ptr [rdi], cl ; ret
0x0000000000422f25 : cmp dl, al ; jne 0x422f18 ; sub rax, 0x10 ; ret
0x0000000000494c69 : cmp dl, bh ; call qword ptr [rax + 0x20fffa37]
0x0000000000494aa9 : cmp dl, bh ; call rsi
0x0000000000494aa5 : cmp dl, bh ; inc dword ptr [rsi + 0x38] ; cli ; call rsi
0x0000000000494aa8 : cmp dl, r15b ; call rsi
0x0000000000422f24 : cmp dl, r8b ; jne 0x422f19 ; sub rax, 0x10 ; ret
0x00000000004719d8 : cmp dword ptr [rax + 0x30], 0 ; je 0x4719e7 ; ret
0x0000000000429dd7 : cmp dword ptr [rax + rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042a5b7 : cmp dword ptr [rax + rax], ecx ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040ea61 : cmp dword ptr [rax - 0x39], ecx ; ret
0x0000000000434918 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000416bb1 : cmp dword ptr [rdi + 0x38], 0 ; je 0x416bc7 ; ret
0x00000000004246c1 : cmp dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000047fa0f : cmp eax, -1 ; cmove rax, rdx ; ret
0x00000000004719f6 : cmp eax, -1 ; je 0x471a09 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000481b7c : cmp eax, -3 ; jbe 0x481b8e ; ret
0x00000000004878d5 : cmp eax, 0x23169d ; add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x0000000000460ee9 : cmp eax, 0x255832 ; mov rax, qword ptr [rdi + rax*8] ; jmp rax
0x000000000044e273 : cmp eax, 0x26bf74 ; je 0x44e231 ; call 0x45ad19
0x00000000004129c2 : cmp eax, 0x2a65e0 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000040385a : cmp eax, 0x2b5700 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004035c9 : cmp eax, 0x2b88d2 ; call 7
0x0000000000495719 : cmp eax, 0x3da1fffb ; sti ; call rsp
0x0000000000495829 : cmp eax, 0x3dc4fffb ; sti ; call qword ptr [rbx]
0x000000000049587d : cmp eax, 0x3dd4fffb ; sti ; call rsp
0x00000000004956fd : cmp eax, 0x3e62fffb ; sti ; call rsp
0x0000000000400deb : cmp eax, 0x74002bb0 ; or al, 0x81 ; retf 0x440
0x000000000044a832 : cmp eax, 0x7d8b48 ; call r12
0x000000000044c58f : cmp eax, 0x83482f74 ; ret
0x000000000044c3b6 : cmp eax, 0x83497174 ; ret
0x0000000000473644 : cmp eax, 0x89000001 ; ret 0x8948
0x0000000000454f22 : cmp eax, 0x89fffff3 ; retf 0xe283
0x00000000004af619 : cmp eax, 0x96540000 ; clc ; jmp qword ptr [rsi]
0x00000000004af605 : cmp eax, 0x96580000 ; clc ; call qword ptr [rax]
0x00000000004a6e0b : cmp eax, 0xaf6a2574 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004af62d : cmp eax, 0xb8700000 ; clc ; call qword ptr [rax]
0x0000000000403fba : cmp eax, 0xee8ff31 ; ret 1
0x00000000004496d6 : cmp eax, 0xfffff000 ; ja 0x4496e8 ; ret
0x0000000000449724 : cmp eax, 0xfffff000 ; ja 0x449738 ; ret
0x000000000044992f : cmp eax, 0xfffff000 ; ja 0x449998 ; ret
0x00000000004499c5 : cmp eax, 0xfffff000 ; ja 0x4499d8 ; ret
0x0000000000449a02 : cmp eax, 0xfffff000 ; ja 0x449a68 ; ret
0x0000000000449a98 : cmp eax, 0xfffff000 ; ja 0x449ab0 ; ret
0x0000000000449ac8 : cmp eax, 0xfffff000 ; ja 0x449ae0 ; ret
0x0000000000449cd2 : cmp eax, 0xfffff000 ; ja 0x449d20 ; ret
0x0000000000449d48 : cmp eax, 0xfffff000 ; ja 0x449d60 ; ret
0x000000000044a4a1 : cmp eax, 0xfffff000 ; ja 0x44a4b8 ; ret
0x000000000045b02e : cmp eax, 0xfffff000 ; ja 0x45b048 ; ret
0x0000000000475696 : cmp eax, 0xfffff000 ; ja 0x4756a8 ; ret
0x00000000004756ea : cmp eax, 0xfffff000 ; ja 0x475700 ; ret
0x0000000000449648 : cmp eax, 0xfffff001 ; jae 0x449657 ; ret
0x000000000044a6d8 : cmp eax, 0xfffff001 ; jae 0x44a6e7 ; ret
0x000000000044a708 : cmp eax, 0xfffff001 ; jae 0x44a717 ; ret
0x000000000044a738 : cmp eax, 0xfffff001 ; jae 0x44a747 ; ret
0x000000000044bddb : cmp eax, 0xfffff001 ; jae 0x44bdea ; ret
0x000000000044be08 : cmp eax, 0xfffff001 ; jae 0x44be17 ; ret
0x0000000000475618 : cmp eax, 0xfffff001 ; jae 0x475627 ; ret
0x0000000000488688 : cmp eax, 0xfffff001 ; jae 0x488697 ; ret
0x00000000004487bb : cmp eax, 2 ; je 0x4487cf ; xor eax, eax ; ret
0x000000000044bf4a : cmp eax, 4 ; je 0x44bf55 ; ret
0x00000000004a8cd7 : cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x000000000046f4ab : cmp eax, ecx ; jg 0x46f4c8 ; add eax, edi ; mov rdx, r8 ; jmp 0x46f487
0x0000000000446c4f : cmp eax, ecx ; jle 0x446c8f ; movsxd rax, ecx ; ret
0x0000000000446663 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004188bb : cmp eax, edx ; jae 0x4188e7 ; movzx eax, byte ptr [rax] ; ret
0x0000000000487e04 : cmp eax, esi ; je 0x487e15 ; ret
0x000000000046f4aa : cmp eax, r9d ; jg 0x46f4c9 ; add eax, edi ; mov rdx, r8 ; jmp 0x46f488
0x00000000004565cc : cmp ebp, ebx ; jb 0x45663e ; mov rdx, rax ; jmp 0x456595
0x000000000044bee6 : cmp ebx, 0xa ; je 0x44bef1 ; ret
0x000000000044d4fe : cmp ebx, eax ; setne dl ; jmp 0x44d4ea
0x0000000000473d65 : cmp ecx, 0xc00 ; je 0x473d79 ; ret
0x000000000044c111 : cmp ecx, dword ptr [rax + 0x10] ; jae 0x44c106 ; ret
0x000000000048723e : cmp ecx, dword ptr [rax - 0x3f] ; loop 0x48724f ; add rdx, rax ; jmp 0x487258
0x0000000000482648 : cmp ecx, dword ptr [rax - 0x77] ; retf 0xfe8
0x000000000044ea02 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000047fa58 : cmp ecx, dword ptr [rdi + rsi] ; jae 0x47fa08 ; xor eax, eax ; ret
0x0000000000471f9e : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000042d90b : cmp ecx, eax ; jne 0x42d939 ; xor eax, eax ; ret
0x000000000047e7e8 : cmp ecx, eax ; jne 0x47e792 ; mov eax, dword ptr [rdx + 4] ; ret
0x00000000004843a2 : cmp ecx, ecx ; ret
0x0000000000471d0a : cmp ecx, esi ; jne 0x471d07 ; lea eax, [rdx + rdi] ; ret
0x000000000047e7d6 : cmp ecx, esi ; jne 0x47e7b5 ; ret
0x0000000000465f40 : cmp edi, eax ; ja 0x465f27 ; mov eax, r9d ; ret
0x0000000000475a0e : cmp edi, edx ; ja 0x475a3d ; ret
0x0000000000447002 : cmp edi, edx ; jb 0x44700f ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000465f3f : cmp edi, r8d ; ja 0x465f28 ; mov eax, r9d ; ret
0x000000000041f76a : cmp edx, eax ; jne 0x41f735 ; ret
0x0000000000447deb : cmp edx, ecx ; jne 0x447dd8 ; ret
0x0000000000447f52 : cmp edx, ecx ; jne 0x447f3e ; vzeroupper ; ret
0x0000000000448115 : cmp edx, ecx ; jne 0x4480f9 ; vzeroupper ; ret
0x0000000000494b1d : cmp edx, edi ; call qword ptr [rdx]
0x0000000000494a61 : cmp edx, edi ; call rax
0x0000000000494a5d : cmp edx, edi ; inc dword ptr [rax + 0x39] ; cli ; call rax
0x0000000000494a9d : cmp edx, edi ; jmp qword ptr [rsi]
0x0000000000494c5d : cmp edx, edi ; jmp rax
0x000000000044be6a : cmp edx, edi ; setae al ; ret
0x0000000000474476 : cmp edx, esi ; je 0x474487 ; test edx, edx ; jne 0x474479 ; ret
0x00000000004188f9 : cmp esi, -1 ; setne al ; neg eax ; ret
0x00000000004587f4 : cmp esi, 3 ; je 0x458806 ; ret
0x00000000004473e5 : cmp esi, dword ptr [rdx + 5] ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004a8ea4 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x0000000000417b1a : cmp esi, ecx ; jne 0x417b17 ; lea eax, [rdx + rdi] ; ret
0x00000000004ac5ed : cmp esi, esi ; call qword ptr [rdi]
0x00000000004719d7 : cmp qword ptr [rax + 0x30], 0 ; je 0x4719e8 ; ret
0x0000000000416bb0 : cmp qword ptr [rdi + 0x38], 0 ; je 0x416bc8 ; ret
0x000000000044bee5 : cmp r11d, 0xa ; je 0x44bef2 ; ret
0x00000000004565cb : cmp r13, r11 ; jb 0x45663f ; mov rdx, rax ; jmp 0x456596
0x0000000000494bd4 : cmp r15b, dl ; call rsp
0x00000000004496d5 : cmp rax, -0x1000 ; ja 0x4496e9 ; ret
0x0000000000449723 : cmp rax, -0x1000 ; ja 0x449739 ; ret
0x000000000044992e : cmp rax, -0x1000 ; ja 0x449999 ; ret
0x00000000004499c4 : cmp rax, -0x1000 ; ja 0x4499d9 ; ret
0x0000000000449a01 : cmp rax, -0x1000 ; ja 0x449a69 ; ret
0x0000000000449a97 : cmp rax, -0x1000 ; ja 0x449ab1 ; ret
0x0000000000449ac7 : cmp rax, -0x1000 ; ja 0x449ae1 ; ret
0x0000000000449cd1 : cmp rax, -0x1000 ; ja 0x449d21 ; ret
0x0000000000449d47 : cmp rax, -0x1000 ; ja 0x449d61 ; ret
0x000000000044a4a0 : cmp rax, -0x1000 ; ja 0x44a4b9 ; ret
0x000000000045b02d : cmp rax, -0x1000 ; ja 0x45b049 ; ret
0x0000000000475695 : cmp rax, -0x1000 ; ja 0x4756a9 ; ret
0x00000000004756e9 : cmp rax, -0x1000 ; ja 0x475701 ; ret
0x0000000000449647 : cmp rax, -0xfff ; jae 0x449658 ; ret
0x000000000044a6d7 : cmp rax, -0xfff ; jae 0x44a6e8 ; ret
0x000000000044a707 : cmp rax, -0xfff ; jae 0x44a718 ; ret
0x000000000044a737 : cmp rax, -0xfff ; jae 0x44a748 ; ret
0x000000000044bdda : cmp rax, -0xfff ; jae 0x44bdeb ; ret
0x000000000044be07 : cmp rax, -0xfff ; jae 0x44be18 ; ret
0x0000000000475617 : cmp rax, -0xfff ; jae 0x475628 ; ret
0x0000000000488687 : cmp rax, -0xfff ; jae 0x488698 ; ret
0x000000000047fa0e : cmp rax, -1 ; cmove rax, rdx ; ret
0x0000000000481b7b : cmp rax, -3 ; jbe 0x481b8f ; ret
0x00000000004188ba : cmp rax, rdx ; jae 0x4188e8 ; movzx eax, byte ptr [rax] ; ret
0x0000000000487e03 : cmp rax, rsi ; je 0x487e16 ; ret
0x000000000044c110 : cmp rcx, qword ptr [rax + 0x10] ; jae 0x44c107 ; ret
0x000000000047fa57 : cmp rcx, qword ptr [rdi + rsi] ; jae 0x47fa09 ; xor eax, eax ; ret
0x0000000000471f9d : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000047e7e7 : cmp rcx, r8 ; jne 0x47e793 ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000042d90a : cmp rcx, rax ; jne 0x42d93a ; xor eax, eax ; ret
0x0000000000471d09 : cmp rcx, rsi ; jne 0x471d08 ; lea eax, [rdx + rdi] ; ret
0x000000000047e7d5 : cmp rcx, rsi ; jne 0x47e7b6 ; ret
0x0000000000475a0d : cmp rdi, rdx ; ja 0x475a3e ; ret
0x0000000000447001 : cmp rdi, rdx ; jb 0x447010 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000041f769 : cmp rdx, r8 ; jne 0x41f736 ; ret
0x0000000000447dea : cmp rdx, rcx ; jne 0x447dd9 ; ret
0x0000000000447de9 : cmp rdx, rcx ; jne 0x447dda ; ret
0x0000000000447f51 : cmp rdx, rcx ; jne 0x447f3f ; vzeroupper ; ret
0x0000000000448114 : cmp rdx, rcx ; jne 0x4480fa ; vzeroupper ; ret
0x000000000044be69 : cmp rdx, rdi ; setae al ; ret
0x0000000000417b19 : cmp rsi, rcx ; jne 0x417b18 ; lea eax, [rdx + rdi] ; ret
0x000000000042d389 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000049506d : cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; jmp rax
0x000000000040058c : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400595 ; ret
0x00000000004a6ed6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4a6ea2 ; mov ecx, 0x5b92ac50 ; retf
0x000000000043e076 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a8ff1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x0000000000494335 : cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call qword ptr [rax - 0x1f000659]
0x00000000004b0215 : cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call rsi
0x00000000004aa8d5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rbx
0x000000000041cf0d : cmpsd dword ptr [rsi], dword ptr [rdi] ; add eax, 0x83480000 ; retf 0x4901
0x000000000047cb28 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add rax, rdi ; jmp rax
0x000000000046ca29 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004109e9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x00000000004a69bf : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov bx, 0xf32d ; retf
0x0000000000494339 : cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; jmp rax
0x0000000000400b09 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sub eax, dword ptr [rax] ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x000000000048b0c0 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000041a1ac : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000048b155 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x00000000004109ea : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000045177f : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x000000000049215c : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000004918bc : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000004b5051 : cwde ; add byte ptr [rax], al ; pushfq ; std ; jmp rsp
0x00000000004af658 : cwde ; fprem ; call qword ptr [rax]
0x00000000004b0198 : cwde ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x0000000000494111 : cwde ; stc ; jmp rsi
0x0000000000442361 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x0000000000442362 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000044792d : dec byte ptr [rax + 0x7f] ; jl 0x447952 ; cld ; vzeroupper ; ret
0x000000000045dd59 : dec byte ptr [rax - 0x75] ; mov ebp, 0xfffff758 ; call rax
0x0000000000480e5f : dec byte ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0x3de8
0x00000000004727f0 : dec byte ptr [rax - 0x77] ; ret
0x0000000000480dfd : dec byte ptr [rax - 0x7d] ; ret
0x000000000044a982 : dec byte ptr [rbx + rcx*4 + 0x5f] ; or byte ptr [rcx - 0xa], al ; ret
0x000000000040e406 : dec byte ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000044b013 : dec byte ptr [rcx + rcx*4 + 0x42] ; adc byte ptr [rax + 9], cl ; retf 0x8948
0x00000000004741c6 : dec byte ptr [rcx + rcx*4 - 0x11] ; add r15, r12 ; call 0x400499
0x000000000040dfb7 : dec byte ptr [rcx + rcx*4 - 0x11] ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000481b79 : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0x481b91 ; ret
0x0000000000456973 : dec dword ptr [r8 - 0x7d] ; ret 0x8801
0x000000000041459e : dec dword ptr [rax + 0x21] ; retf 0x2148
0x000000000041137d : dec dword ptr [rax + 0x29] ; ret
0x00000000004424a2 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000482b41 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000482c81 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x000000000041e7f5 : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x000000000047642b : dec dword ptr [rax + 0x39] ; ret
0x00000000004131ad : dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000489329 : dec dword ptr [rax + 0x39] ; ret 0xf48
0x000000000041db95 : dec dword ptr [rax + 0x39] ; retf 0x2a74
0x000000000041db67 : dec dword ptr [rax + 0x39] ; retf 0x4b74
0x000000000048483e : dec dword ptr [rax + 0x48e57506] ; mov eax, esi ; ret
0x00000000004a4e5f : dec dword ptr [rax + 0x60fffd77] ; ja 0x4a4e6c ; jmp qword ptr [rax]
0x000000000045ee8c : dec dword ptr [rax + 0x63] ; retf
0x0000000000495faf : dec dword ptr [rax + 0x6b] ; sti ; jmp qword ptr [rax]
0x000000000046eec2 : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x00000000004735d9 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x000000000047fa11 : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000423881 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000473d89 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000045b0ab : dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000472941 : dec dword ptr [rax + 1] ; ret
0x0000000000496597 : dec dword ptr [rax + rsi*2 + 0x73c9fffb] ; sti ; call qword ptr [rax]
0x0000000000403033 : dec dword ptr [rax - 0x39] ; ret
0x00000000004495cf : dec dword ptr [rax - 0x39] ; ret 0
0x0000000000449574 : dec dword ptr [rax - 0x39] ; ret 0x8000
0x000000000045ddc0 : dec dword ptr [rax - 0x39] ; ret 0xac20
0x00000000004494e7 : dec dword ptr [rax - 0x39] ; ret 0xff80
0x0000000000468a76 : dec dword ptr [rax - 0x39] ; ret 0xffa0
0x0000000000449865 : dec dword ptr [rax - 0x39] ; ret 0xffc0
0x000000000044943c : dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000048be6f : dec dword ptr [rax - 0x46] ; mov eax, 0xf ; syscall
0x0000000000456884 : dec dword ptr [rax - 0x73] ; add cl, byte ptr [rax + 0x39] ; ret
0x000000000047fc35 : dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000041ec48 : dec dword ptr [rax - 0x73] ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000048c362 : dec dword ptr [rax - 0x75] ; add byte ptr [rcx + 1], cl ; ret 0xef89
0x000000000044f18c : dec dword ptr [rax - 0x75] ; jne 0x44f126 ; call rsi
0x000000000046928b : dec dword ptr [rax - 0x75] ; mov ebp, 0xfffff730 ; call rax
0x000000000048cb8f : dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x000000000044ac15 : dec dword ptr [rax - 0x75] ; push rdi ; adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x0000000000481dbc : dec dword ptr [rax - 0x77] ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000041f8f4 : dec dword ptr [rax - 0x77] ; add eax, 0x299f64 ; ret
0x000000000048a517 : dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000047f5b1 : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000403a64 : dec dword ptr [rax - 0x77] ; fucomip st(0) ; push rbx ; retf 0xffff
0x0000000000417e32 : dec dword ptr [rax - 0x77] ; out 0x31, eax ; shr al, cl ; ret
0x0000000000401a9d : dec dword ptr [rax - 0x77] ; ret
0x00000000004759fe : dec dword ptr [rax - 0x77] ; ret 0x1477
0x000000000041f0ef : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000047cde7 : dec dword ptr [rax - 0x77] ; ret 0x48e8
0x000000000042449b : dec dword ptr [rax - 0x77] ; ret 0x5ae9
0x000000000047595d : dec dword ptr [rax - 0x77] ; ret 0x7577
0x000000000041ee6c : dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000004237f7 : dec dword ptr [rax - 0x77] ; ret 0x854d
0x000000000045aed2 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x000000000046db20 : dec dword ptr [rax - 0x77] ; ret 0x8b44
0x0000000000449366 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004787cc : dec dword ptr [rax - 0x77] ; ret 0x8d4c
0x0000000000423f16 : dec dword ptr [rax - 0x77] ; ret 0x90e9
0x000000000046de16 : dec dword ptr [rax - 0x77] ; ret 0x9e8
0x000000000044a695 : dec dword ptr [rax - 0x77] ; ret 0xa076
0x00000000004494c1 : dec dword ptr [rax - 0x77] ; ret 0xa0e9
0x000000000045689d : dec dword ptr [rax - 0x77] ; ret 0xb2eb
0x00000000004494ad : dec dword ptr [rax - 0x77] ; ret 0xb4e9
0x0000000000424328 : dec dword ptr [rax - 0x77] ; ret 0xb60f
0x000000000046bb99 : dec dword ptr [rax - 0x77] ; ret 0xb848
0x0000000000475f3c : dec dword ptr [rax - 0x77] ; ret 0xefeb
0x000000000046fe5a : dec dword ptr [rax - 0x77] ; ret 0xf41
0x000000000040583f : dec dword ptr [rax - 0x77] ; ret 0xf748
0x000000000041136e : dec dword ptr [rax - 0x77] ; retf
0x0000000000477f6c : dec dword ptr [rax - 0x77] ; retf 0x2de9
0x0000000000461fe4 : dec dword ptr [rax - 0x77] ; retf 0x8948
0x0000000000410ce9 : dec dword ptr [rax - 0x77] ; retf 0x894c
0x0000000000477ecd : dec dword ptr [rax - 0x77] ; retf 0xb60f
0x000000000046cfdf : dec dword ptr [rax - 0x77] ; retf 0xc148
0x0000000000469a83 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000481b7a : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0x481b90 ; ret
0x000000000040478f : dec dword ptr [rax - 0x7d] ; ret
0x00000000004546a1 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000452d8b : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x0000000000405d8b : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x0000000000456974 : dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000048e157 : dec dword ptr [rax - 0x7d] ; ret 0xe902
0x000000000040d9bc : dec dword ptr [rax - 0x7d] ; retf 0xeb0b
0x0000000000459478 : dec dword ptr [rax - 0x7d] ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000044b720 : dec dword ptr [rax - 0x7f] ; ret
0x000000000043491c : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000047713d : dec dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x000000000048eb54 : dec dword ptr [rax - 9] ; ret
0x00000000004585f5 : dec dword ptr [rax - 9] ; ror dword ptr [rax - 0x77], 1 ; retf 0x8348
0x0000000000461cc4 : dec dword ptr [rbp + 0x63] ; ret 0x20be
0x0000000000477a52 : dec dword ptr [rbp + rcx*4 + 0xd] ; retf 2
0x0000000000467f0d : dec dword ptr [rbp - 0x77] ; ret 0x894c
0x00000000004514fd : dec dword ptr [rbp - 0x77] ; retf
0x000000000045c516 : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000424153 : dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x0000000000400e14 : dec dword ptr [rbx + 0x2bafe115] ; add bh, dh ; ret 0
0x0000000000422e6d : dec dword ptr [rbx + 0x90c2454] ; ret 0xbae9
0x0000000000471c48 : dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x00000000004711db : dec dword ptr [rbx - 0x3b7cb7fa] ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000048c788 : dec dword ptr [rcx + 0x21] ; retf 0x8948
0x000000000048c7a6 : dec dword ptr [rcx + 0x29] ; retf 0x8948
0x000000000048c807 : dec dword ptr [rcx + 0x31] ; retf 0x8948
0x0000000000460503 : dec dword ptr [rcx + 0x39] ; ret
0x0000000000461c1f : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000047c489 : dec dword ptr [rcx + 0x39] ; ret 0x860f
0x000000000048adfa : dec dword ptr [rcx + 0x39] ; retf
0x000000000048c812 : dec dword ptr [rcx + 0x39] ; retf 0x8948
0x000000000046b3a5 : dec dword ptr [rcx + 0x63] ; ret
0x000000000046af27 : dec dword ptr [rcx + 0x63] ; ret 0x8545
0x000000000046d6ce : dec dword ptr [rcx + 0x63] ; retf 0x20be
0x00000000004021cd : dec dword ptr [rcx + 0x63] ; test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x000000000048c7db : dec dword ptr [rcx + 1] ; retf 0x8948
0x000000000048c7d0 : dec dword ptr [rcx + 9] ; retf 0x8948
0x000000000047c705 : dec dword ptr [rcx + rax - 0x28] ; call rax
0x000000000045827a : dec dword ptr [rcx + rcx*4 - 0x11] ; call r12
0x000000000044f189 : dec dword ptr [rcx + rcx*4 - 1] ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x00000000004583d1 : dec dword ptr [rcx + rcx*4 - 9] ; call rbx
0x00000000004586af : dec dword ptr [rcx + rcx*4 - 9] ; call rdx
0x000000000045dbb6 : dec dword ptr [rcx - 0x2f42763f] ; idiv bh ; call rax
0x000000000046cf03 : dec dword ptr [rcx - 0x4e773] ; inc dword ptr [rcx + 0x29] ; retf 0x98e9
0x000000000041bf8c : dec dword ptr [rcx - 0x73] ; and byte ptr [r8 - 0x7d], r9b ; retf
0x0000000000492256 : dec dword ptr [rcx - 0x73] ; and byte ptr [rax - 0x7d], cl ; retf
0x0000000000489587 : dec dword ptr [rcx - 0x73] ; or byte ptr [rax - 0x77], r9b ; ret
0x000000000040e27f : dec dword ptr [rcx - 0x75] ; add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000048f502 : dec dword ptr [rcx - 0x75] ; sub byte ptr [rcx + r9*4 + 0x35], r9b ; retf 0x22cc
0x0000000000460467 : dec dword ptr [rcx - 0x77] ; ret
0x000000000047c7d0 : dec dword ptr [rcx - 0x77] ; ret 0x13e9
0x00000000004047d1 : dec dword ptr [rcx - 0x77] ; ret 0x149
0x000000000047d170 : dec dword ptr [rcx - 0x77] ; ret 0x9be9
0x000000000046aef4 : dec dword ptr [rcx - 0x77] ; ret 0xff31
0x000000000041c326 : dec dword ptr [rcx - 0x7b] ; ret
0x000000000046026f : dec dword ptr [rcx - 0x7d] ; ret
0x000000000049657b : dec dword ptr [rdi + 0x73] ; sti ; call qword ptr [rdi]
0x000000000046076b : dec dword ptr [rdi + rcx + 0x48] ; ret 0x958b
0x0000000000450c2b : dec dword ptr [rdi] ; ret 0x41c3
0x000000000045328f : dec dword ptr [rdi] ; test byte ptr [rsi - 0x8fffffc], cl ; ret 0
0x00000000004464f0 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000045fa4f : dec dword ptr [rdi] ; test dword ptr [rsi - 0x16000007], esi ; ret
0x000000000047d8ca : dec dword ptr [rdi] ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004601d7 : dec dword ptr [rdi] ; xchg byte ptr [rdx], ah ; and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x00000000004213fc : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x00000000004188fb : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000495837 : dec dword ptr [rsi + rdi - 5] ; call rsp
0x000000000049410f : dec dword ptr [rsi - 0x68] ; stc ; jmp rsi
0x0000000000494a4f : dec dword ptr [rsi] ; xor al, 0xfa ; call qword ptr [rax + 0x20fffa3a]
0x0000000000492937 : dec ebx ; scasb al, byte ptr [rdi] ; idiv edi ; movsd dword ptr [rdi], dword ptr [rsi] ; scasd eax, dword ptr [rdi] ; idiv edi ; retf
0x00000000004928bb : dec ebx ; scasb al, byte ptr [rdi] ; idiv edi ; retf
0x0000000000492a6b : dec ebx ; scasb al, byte ptr [rdi] ; idiv edi ; scasw ax, word ptr [rdi] ; idiv edi ; retf
0x000000000049659b : dec ecx ; jae 0x49659e ; call qword ptr [rax]
0x000000000045b5c8 : dec qword ptr [r13 - 0x77] ; retf
0x00000000004424a1 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x0000000000480e68 : div bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000004737c2 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000047e835 : div byte ptr [rbx + rax + 0x48] ; mov dword ptr [rsi], edi ; mov rax, rcx ; ret
0x00000000004587f1 : div byte ptr [rsp + rcx - 0x7d] ; inc byte ptr [rbx] ; je 0x458809 ; ret
0x00000000004512c2 : div dword ptr [rdi + rbp - 0x75] ; adc dword ptr [rdi], ecx ; retf 0xd285
0x0000000000465f56 : div eax ; add r9d, eax ; mov eax, r9d ; ret
0x0000000000448328 : div ecx ; mov eax, eax ; ret
0x000000000044830f : div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000465f55 : div r8d ; add r9d, eax ; mov eax, r9d ; ret
0x000000000042b9e7 : enter -0x23b, -0x29 ; ret 0xc085
0x000000000047e790 : enter -0x3eb8, -8 ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x000000000045a0ad : enter -0x3fcf, -0x18 ; retf
0x0000000000446664 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000004838cb : enter -0x72b8, 0x41 ; adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x000000000044235e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000044249e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000004761c0 : enter -0x72b8, 0xc ; xor byte ptr [rax + 1], cl ; retf
0x000000000042b7c7 : enter -0x73b, 0x77 ; ret
0x000000000047e89a : enter -0x76b8, -0x38 ; ret
0x000000000046479f : enter -0x7cb7, -0x40 ; add dword ptr [rcx], edi ; retf
0x000000000042c194 : enter -2, -1 ; ret
0x0000000000494521 : enter -7, -0x80 ; leave ; stc ; call rax
0x000000000049e17c : enter 0, 0 ; retf
0x00000000004a21d0 : enter 0, 0 ; retf 0
0x000000000049f328 : enter 0x10, 0 ; retf
0x000000000046f4ac : enter 0x117f, 1 ; clc ; mov rdx, r8 ; jmp 0x46f486
0x00000000004408e9 : enter 0x148, -8 ; vzeroupper ; ret
0x000000000046bddc : enter 0x1b9, 0 ; add byte ptr [rax], al ; jmp rax
0x0000000000484691 : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000440c4e : enter 0x2948, -0x30 ; vzeroupper ; ret
0x0000000000425d4d : enter 0x31c3, -0x40 ; ret
0x0000000000446c50 : enter 0x357e, 0x48 ; movsxd rax, ecx ; ret
0x00000000004af604 : enter 0x3d, 0 ; pop rax ; xchg eax, esi ; clc ; call qword ptr [rax]
0x00000000004b3004 : enter 0x77, 0 ; pop rax ; adc al, 0xfc ; jmp qword ptr [rax]
0x00000000004a965c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004b4604 : enter 0x8d, 0 ; sub dl, ch ; cld ; jmp qword ptr [rcx]
0x000000000049eb28 : enter 0xa, 0 ; retf
0x000000000049ef28 : enter 0xd, 0 ; retf
0x000000000042d436 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004402b1 : enter 0xf66, -0x15 ; ret
0x00000000004a23d0 : enter 1, 0 ; retf 1
0x000000000049f6e0 : enter 2, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a25d0 : enter 2, 0 ; retf 2
0x00000000004a27d0 : enter 3, 0 ; retf 3
0x00000000004a29d0 : enter 4, 0 ; retf 4
0x00000000004a2bd0 : enter 5, 0 ; retf 5
0x00000000004a2dd0 : enter 6, 0 ; retf 6
0x00000000004a2fd0 : enter 7, 0 ; retf 7
0x00000000004a31d0 : enter 8, 0 ; retf 8
0x00000000004a33d0 : enter 9, 0 ; retf 9
0x000000000048d273 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x000000000040fbf8 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040f777 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000004581a5 : fadd qword ptr [rax - 0x7bf0ffc2] ; retf
0x0000000000465f43 : fadd qword ptr [rcx + rcx*4 - 0x38] ; ret
0x000000000042cf81 : fbld tbyte ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000490084 : fbstp tbyte ptr [rbp - 0x17] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a8c98 : fcmovb st(0), st(3) ; ret
0x0000000000440d6b : fcmovnb st(0), st(5) ; std ; xlatb ; ret
0x000000000045ec36 : fcmovnb st(0), st(6) ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000048d279 : fcomi st(3) ; ret
0x0000000000410599 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000410376 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044a531 : fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000004a9a19 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000004a7c80 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x0000000000488578 : fdiv dword ptr [rbp + 0x11] ; add rsp, 0x40 ; pop rbx ; ret
0x000000000048865f : fdiv dword ptr [rbp + 0x12] ; add rsp, 0x50 ; pop rbx ; ret
0x0000000000494395 : fdiv st(1), st(0) ; call qword ptr [rax]
0x00000000004943b5 : fdiv st(1), st(0) ; inc dword ptr [rax] ; fdivp st(1) ; jmp rax
0x00000000004944b9 : fdiv st(1), st(0) ; jmp qword ptr [rax]
0x00000000004943d5 : fdiv st(1), st(0) ; jmp rax
0x000000000048aec9 : fdiv st(3) ; ret
0x0000000000417e30 : fdiv st(7), st(0) ; dec dword ptr [rax - 0x77] ; out 0x31, eax ; shr al, cl ; ret
0x00000000004944bd : fdivp st(1) ; call qword ptr [rax]
0x00000000004943b9 : fdivp st(1) ; jmp rax
0x00000000004af618 : fdivr qword ptr [rip - 0x69ac0000] ; clc ; jmp qword ptr [rsi]
0x00000000004a6fd5 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000446668 : fdivr st(7) ; ret
0x000000000040f018 : fiadd dword ptr [rbp + 0x450f48c9] ; ret 0x8348
0x0000000000471383 : fiadd dword ptr [rbx - 0x7bf0fc1e] ; retf
0x0000000000459795 : fiadd dword ptr [rbx] ; add byte ptr [rax + 0x63], cl ; ret
0x00000000004125fa : fiadd word ptr [rcx + rcx*4 - 0x11] ; mov eax, r9d ; syscall
0x00000000004a9866 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x00000000004881d5 : fidivr dword ptr [rax + 1] ; ret
0x000000000049587c : fidivr word ptr [rip + 0x3dd4fffb] ; sti ; call rsp
0x00000000004247b1 : fild word ptr [r9] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000464d32 : fild word ptr [rbp - 0x77] ; ret 0x8b4c
0x00000000004247b2 : fild word ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000419d9c : fimul dword ptr [rax + 0x21] ; ret 0x8948
0x0000000000455439 : fimul dword ptr [rax + 0x29] ; ret 0x8348
0x0000000000480e57 : fimul dword ptr [rax + 0x39] ; ret 0x7472
0x00000000004658cd : fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x00000000004868c4 : fimul dword ptr [rax + 0x39] ; retf 0xe677
0x0000000000465892 : fimul dword ptr [rax + 0x39] ; retf 0xe87f
0x000000000042a516 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046c24d : fimul dword ptr [rax - 0x3f] ; clc ; add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x00000000004049b4 : fimul dword ptr [rbx + 0x4d8b005d] ; add al, 0xf ; retf
0x0000000000450dcf : fimul word ptr [rax + 1] ; ret
0x000000000048451c : fimul word ptr [rbp + 0x11] ; retf
0x0000000000421b51 : fimul word ptr [rcx + rcx*4 - 0x11] ; call 0x41dd96
0x0000000000449a2f : fistp qword ptr [rax + 1] ; syscall
0x00000000004167de : fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000470eb0 : fistp word ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x00000000004859fe : fisttp dword ptr [rax - 0x73] ; push rax ; or byte ptr [rax - 0x73], cl ; or al, 0xca ; jmp 0x485a1c
0x0000000000458a07 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004834d1 : fisttp dword ptr [rax - 0x77] ; ret
0x000000000046671c : fisttp dword ptr [rax - 0x7b] ; rol byte ptr [rcx + 0xf], 0x94 ; ret
0x000000000047f626 : fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret
0x000000000047809e : fisttp dword ptr [rax - 0x7d] ; ret
0x000000000048c6a0 : fisttp dword ptr [rbx + 0x63] ; add al, 0x99 ; add rax, r9 ; jmp rax
0x00000000004834eb : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x0000000000455117 : fisttp dword ptr [rcx - 0x7d] ; ret
0x000000000047d744 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000420feb : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x0000000000405dae : fisttp qword ptr [rax - 0x7d] ; ret 0x4401
0x0000000000457d6a : fisttp qword ptr [rdi] ; ret 0xc389
0x0000000000480e62 : fisttp word ptr [rax - 0x77] ; ret 0x3de8
0x0000000000401903 : fisttp word ptr [rax - 0x7d] ; ret
0x000000000048356f : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000449ced : fisttp word ptr [rcx + 0x3b8c2] ; add byte ptr [rax], al ; syscall
0x000000000043f3ad : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000042d351 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042d051 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000494e4c : fisubr dword ptr [rcx] ; cli ; ljmp [rdx + 0x29] ; cli ; call qword ptr [rax]
0x00000000004837e4 : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x00000000004a7cc1 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x0000000000473612 : fld st(5) ; std ; xlatb ; retf 0xfdc5
0x0000000000473672 : fld st(5) ; std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000042b3f9 : fldenv [rsi + 0xf] ; je 0x42b456 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042b6d7 : fldenv [rsi + 0xf] ; je 0x42b734 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042d3d1 : fldenv [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042b2f1 : fldenv [rsi + 0xf] ; xlatb ; ret
0x0000000000454e23 : fldl2t ; retf 0xfffd
0x000000000046873c : fldpi ; stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x0000000000484584 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000041ae9f : fmul dword ptr [rax + 0x39] ; ret
0x0000000000446937 : fmul dword ptr [rax + 9] ; retf 0x4466
0x0000000000412278 : fmul dword ptr [rax - 0x77] ; ret
0x000000000040e091 : fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000489ad4 : fmul dword ptr [rbx + rcx*4 + 0x34] ; ret 0xf41
0x000000000044c5dc : fmul dword ptr [rbx - 0x7ad33ebc] ; ror byte ptr [rdi], 0x84 ; retf 0
0x0000000000477140 : fmul dword ptr [rcx + 0x21] ; ret
0x0000000000469120 : fmul dword ptr [rdi] ; ret
0x0000000000486d62 : fmul qword ptr [rax - 0x77] ; ret
0x000000000048f10e : fmul qword ptr [rbx + rcx*4 + 0x58] ; sub byte ptr [rbp + 1], cl ; retf
0x0000000000424b09 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000043902f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000045f82f : fmul qword ptr [rdi] ; lea ebp, [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000457f68 : fmul qword ptr [rdi] ; ret 0xc389
0x0000000000473610 : fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x000000000042466f : fnsave dword ptr [rdi] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004565cd : fnsave dword ptr [rdx + 0x68] ; mov rdx, rax ; jmp 0x456594
0x00000000004a950a : fnstsw dword ptr [rbx + rdx*4] ; in al, dx ; retf 0xae32
0x000000000040db09 : fpatan ; ret
0x00000000004af659 : fprem ; call qword ptr [rax]
0x000000000042d151 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a79a7 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000004a7d20 : fstp st(0) ; ret 0xde5d
0x00000000004a6eeb : fstp st(3), st(0) ; retf 0xeb83
0x0000000000490211 : fstp xword ptr [rdx - 0x1e8affde] ; pop rbx ; ret
0x0000000000449658 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000004496e8 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x000000000042d451 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004411d4 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004a92d8 : fsub qword ptr [rbx] ; sub dword ptr [rsi], 0x76 ; retf
0x0000000000446a7b : fsub qword ptr [rsi + 0xf] ; jmp 0x446a47
0x000000000042d251 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004403cc : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000449c94 : fsubr st(3) ; ret 0xf66
0x00000000004a99f8 : fucom st(5) ; loop 0x4a9a51 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000047a2d1 : fucomi st(3) ; ret 0x1f0f
0x0000000000403a67 : fucomip st(0) ; push rbx ; retf 0xffff
0x0000000000472eaf : fucomip st(0) ; ret
0x000000000049167f : fucomip st(0) ; retf
0x000000000048b571 : fucomip st(1) ; ret
0x00000000004a903e : fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000494451 : fyl2xp1 ; inc dword ptr [rax - 0x25] ; stc ; jmp qword ptr [rax]
0x000000000044d4c3 : hlt ; add byte ptr es:[rbp - 0xcf98b40], al ; ret
0x00000000004948fc : hlt ; add eax, 0x574fffa ; cli ; jmp rsp
0x000000000044ad51 : hlt ; call r15
0x000000000046ca28 : hlt ; cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004b09d2 : hlt ; jmp qword ptr [rbx]
0x00000000004b3cfa : hlt ; jmp qword ptr [rcx]
0x000000000044c8e8 : hlt ; jmp qword ptr [rsi]
0x0000000000434d5a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fa0e : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x000000000044911e : hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x0000000000446173 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000400a5a : hlt ; nop dword ptr [rax + rax] ; ret
0x00000000004a7ee3 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000446177 : hlt ; sub eax, edx ; ret
0x0000000000476428 : hlt ; xor al, 0xfd ; dec dword ptr [rax + 0x39] ; ret
0x000000000045dbbc : idiv bh ; call rax
0x000000000045ee04 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x000000000045e916 : idiv bh ; jmp qword ptr [rax]
0x00000000004ad2ae : idiv bh ; retf
0x0000000000450c26 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x00000000004949fd : idiv cl ; jmp rax
0x000000000045ded6 : idiv edi ; call qword ptr [rax]
0x000000000045ee8a : idiv edi ; dec dword ptr [rax + 0x63] ; retf
0x000000000045ddbe : idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xac20
0x000000000046a8c1 : idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000469b1d : idiv edi ; inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000049293a : idiv edi ; movsd dword ptr [rdi], dword ptr [rsi] ; scasd eax, dword ptr [rdi] ; idiv edi ; retf
0x000000000049294e : idiv edi ; pop rcx ; scasd eax, dword ptr [rdi] ; idiv edi ; retf
0x00000000004928ba : idiv edi ; retf
0x00000000004929b2 : idiv edi ; scasw ax, word ptr [rdi] ; idiv edi ; retf
0x0000000000495121 : idiv edx ; call rax
0x0000000000495129 : idiv edx ; inc dword ptr [rax] ; clc ; cli ; call qword ptr [rax]
0x000000000049511d : idiv edx ; inc eax ; idiv edx ; call rax
0x0000000000404038 : imul al ; ret 0xbfbf
0x0000000000478b67 : imul al ; sbb edi, dword ptr [rcx - 8] ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000409bff : imul eax ; retf
0x0000000000402f00 : imul eax ; retf 0x1d2
0x00000000004b2161 : imul eax, dword ptr [rax], 0xfb93ac00 ; jmp qword ptr [rax]
0x0000000000444cd1 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x0000000000428947 : imul eax, dword ptr [rcx], 0x894d0000 ; retf
0x0000000000468202 : imul eax, dword ptr [rcx], 0xc7480000 ; ret 0xffe0
0x0000000000428347 : imul eax, dword ptr [rdi], 0x894d0000 ; retf
0x00000000004296a7 : imul ecx, dword ptr [rbx], 0x894d0000 ; retf
0x000000000042a887 : imul ecx, dword ptr [rcx], 0x894d0000 ; retf
0x0000000000428047 : imul ecx, dword ptr [rdx], 0x894d0000 ; retf
0x00000000004ad407 : imul ecx, dword ptr [rsi], 0x18 ; ret
0x0000000000495f99 : imul edi, ebx, 0xfb6934ff ; call rax
0x0000000000495f85 : imul edi, ebx, 0xfb6bf0ff ; jmp qword ptr [rax]
0x0000000000404964 : imul edi, edx, -1 ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000427a47 : imul edx, dword ptr [rax], 0x894d0000 ; retf
0x0000000000427747 : imul edx, dword ptr [rbx], 0x894d0000 ; retf
0x0000000000427447 : imul edx, dword ptr [rsi], 0x894d0000 ; retf
0x000000000041836e : imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x000000000044414c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x00000000004a9321 : in al, 0x4c ; pop rax ; retf
0x0000000000440e5c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000044c3b3 : in al, 0x80 ; cli ; cmp eax, 0x83497174 ; ret
0x000000000045e4b0 : in al, 0xf ; lahf ; ret
0x0000000000434d3a : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000447dee : in al, 0xf3 ; ret
0x000000000041a667 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; call qword ptr [rdi]
0x000000000041fba5 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; int1 ; ret 2
0x000000000046fbc7 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; lahf ; ret 0xfffd
0x000000000044fb40 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; push rsi ; ret
0x0000000000412da3 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000004216a4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x2a7
0x00000000004182cb : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x000000000045e954 : in al, dx ; add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x000000000045e791 : in al, dx ; add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x0000000000414b91 : in al, dx ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042fa0a : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043513a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000041ee8f : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000042a904 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000045feff : in al, dx ; retf 0x25
0x00000000004a950d : in al, dx ; retf 0xae32
0x000000000045d2ee : in al, dx ; sbb al, ch ; retf
0x000000000048de59 : in al, dx ; sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x000000000048a8d4 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004b1b04 : in al, dx ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rdx]
0x0000000000494a21 : in al, dx ; stc ; jmp rax
0x0000000000477fdd : in al, dx ; sub byte ptr [rbp + rcx*4 + 0x15], cl ; pop rsp ; ret 2
0x00000000004a943e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a93d1 ; ret 0x48f
0x00000000004a943d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a93d2 ; ret 0x48f
0x0000000000497464 : in al, dx ; xor ah, bh ; call rsp
0x00000000004493b6 : in eax, 0 ; add byte ptr [rax], al ; syscall
0x00000000004a7b43 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000484842 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000004a6dd9 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x000000000048c39a : in eax, 0x83 ; call qword ptr [rcx]
0x000000000046371d : in eax, 0xdf ; loopne 0x4636ae ; ret
0x00000000004a99f9 : in eax, 0xe2 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004a7b9a : in eax, 0xe5 ; retf 0x2a91
0x0000000000474933 : in eax, 0xf ; je 0x474958 ; add rax, 2 ; ret
0x00000000004482a9 : in eax, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x0000000000434dba : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004943e9 : in eax, 0xf9 ; call qword ptr [rax + 0x20fff9e7]
0x00000000004944cd : in eax, 0xf9 ; call qword ptr [rax - 0x2f000641]
0x00000000004943a9 : in eax, 0xf9 ; call rax
0x00000000004a8ec1 : in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004247fb : in eax, 2 ; cmovne rax, rdx ; ret
0x0000000000466cc8 : in eax, dx ; add al, 0x84 ; ror byte ptr [rdi], 0x84 ; ret 0x17
0x0000000000469e58 : in eax, dx ; add dword ptr [rax - 0x91743], eax ; jmp qword ptr [rax]
0x0000000000413a92 : in eax, dx ; call 0x4004ab
0x000000000044a80a : in eax, dx ; jne 0x44a827 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b375 : in eax, dx ; jne 0x44b39f ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b3a8 : in eax, dx ; jne 0x44b3f8 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b3d4 : in eax, dx ; jne 0x44b458 ; mov rdi, qword ptr [rbp] ; call r12
0x00000000004900cf : in eax, dx ; jne 0x4900b1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000490322 : in eax, dx ; jne 0x49030f ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490edc : in eax, dx ; jne 0x490ec7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000446992 : in eax, dx ; lea rax, [rcx - 1] ; ret
0x000000000042f81a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004351ba : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000482cb7 : in eax, dx ; or byte ptr [rax + 0x39], cl ; retf
0x0000000000416582 : in eax, dx ; ret
0x00000000004a7918 : in eax, dx ; retf
0x000000000044f367 : in eax, dx ; retf 0x26
0x00000000004949e5 : in eax, dx ; stc ; jmp rax
0x0000000000469a81 : in eax, dx ; std ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000446ae2 : in eax, dx ; sub rax, 1 ; ret
0x0000000000446df8 : inc bl ; cmp dl, 1 ; jb 0x446e0a ; mov byte ptr [rdi], cl ; ret
0x0000000000416b72 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x000000000044a99c : inc byte ptr [rbp - 0x60f0be13] ; ret 0x8545
0x00000000004587f5 : inc byte ptr [rbx] ; je 0x458805 ; ret
0x000000000047f2d8 : inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049422b : inc dword ptr [rax + 0x10fff9bf] ; mov dl, 0xf9 ; call rax
0x0000000000494567 : inc dword ptr [rax + 0x12] ; cli ; call rax
0x0000000000494c77 : inc dword ptr [rax + 0x36] ; cli ; call rax
0x0000000000494a5f : inc dword ptr [rax + 0x39] ; cli ; call rax
0x0000000000496577 : inc dword ptr [rax + 0x4ffffb75] ; jae 0x496582 ; call qword ptr [rdi]
0x00000000004941cb : inc dword ptr [rax + 0x58fff997] ; mov dl, 0xf9 ; jmp qword ptr [rax]
0x0000000000494053 : inc dword ptr [rax + 0x64] ; stc ; push qword ptr [rax] ; stc ; jmp qword ptr [rax]
0x000000000049477f : inc dword ptr [rax + 0xf] ; cli ; call rax
0x000000000049498f : inc dword ptr [rax + 3] ; cli ; jmp rax
0x000000000049443b : inc dword ptr [rax - 0x21] ; stc ; jmp qword ptr [rax]
0x00000000004944b7 : inc dword ptr [rax - 0x24] ; stc ; jmp qword ptr [rax]
0x0000000000494453 : inc dword ptr [rax - 0x25] ; stc ; jmp qword ptr [rax]
0x00000000004943cf : inc dword ptr [rax - 0x26] ; stc ; inc dword ptr [rax] ; fdiv st(1), st(0) ; jmp rax
0x00000000004944ff : inc dword ptr [rax - 0x2e] ; stc ; call qword ptr [rax - 0x1f00062d]
0x0000000000495077 : inc dword ptr [rax - 0x2f000556] ; stosd dword ptr [rdi], eax ; cli ; jmp qword ptr [rax]
0x0000000000494523 : inc dword ptr [rax - 0x2f000637] ; retf 0xfff9
0x0000000000494343 : inc dword ptr [rax - 0x2f000655] ; lodsb al, byte ptr [rsi] ; stc ; jmp qword ptr [rax]
0x0000000000494357 : inc dword ptr [rax - 0x2f000663] ; sahf ; stc ; jmp qword ptr [rax]
0x0000000000494513 : inc dword ptr [rax - 0x3c] ; stc ; call qword ptr [rax - 0x1f00063b]
0x000000000049430f : inc dword ptr [rax - 0x3f000669] ; wait ; stc ; call qword ptr [rax]
0x000000000049425f : inc dword ptr [rax - 0x47] ; stc ; jmp qword ptr [rax]
0x0000000000494333 : inc dword ptr [rax - 0x5a] ; stc ; call qword ptr [rax - 0x1f000659]
0x0000000000495067 : inc dword ptr [rax - 0x5b] ; cli ; call qword ptr [rax - 0x1f00055a]
0x0000000000495037 : inc dword ptr [rax - 0x67] ; cli ; call qword ptr [rax]
0x00000000004941c3 : inc dword ptr [rax - 0x6a] ; stc ; jmp rax
0x0000000000495017 : inc dword ptr [rax - 0x74] ; cli ; jmp rax
0x00000000004a3b17 : inc dword ptr [rax - 0x7f000351] ; scasd eax, dword ptr [rdi] ; cld ; jmp qword ptr [rax]
0x000000000046a5ad : inc dword ptr [rax - 0x91743] ; jmp qword ptr [rax]
0x000000000045ee45 : inc dword ptr [rax - 0x93b43] ; jmp qword ptr [rax]
0x0000000000494557 : inc dword ptr [rax] ; adc al, 0xfa ; call qword ptr [rax + 0x20fffa13]
0x000000000049476f : inc dword ptr [rax] ; adc edx, edi ; call qword ptr [rax + 0x20fffa10]
0x0000000000460479 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; retf 0x8944
0x000000000045ee06 : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x000000000044824f : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x000000000042d967 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000493f97 : inc dword ptr [rax] ; and al, 0xf9 ; jmp qword ptr [rax]
0x000000000049512b : inc dword ptr [rax] ; clc ; cli ; call qword ptr [rax]
0x0000000000495097 : inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000495173 : inc dword ptr [rax] ; cli ; cli ; jmp qword ptr [rax]
0x0000000000494c67 : inc dword ptr [rax] ; cmp dl, bh ; call qword ptr [rax + 0x20fffa37]
0x00000000004943d3 : inc dword ptr [rax] ; fdiv st(1), st(0) ; jmp rax
0x00000000004943b7 : inc dword ptr [rax] ; fdivp st(1) ; jmp rax
0x00000000004941d7 : inc dword ptr [rax] ; mov dh, 0xf9 ; jmp rax
0x00000000004942ff : inc dword ptr [rax] ; mov eax, 0xb9d0fff9 ; stc ; call rax
0x0000000000494063 : inc dword ptr [rax] ; push 0x68f0fff9 ; stc ; jmp rax
0x0000000000494f9f : inc dword ptr [rax] ; push rax ; cli ; call qword ptr [rax]
0x000000000049401f : inc dword ptr [rax] ; push rdx ; stc ; push qword ptr [rax + 0x53] ; stc ; jmp rax
0x0000000000495153 : inc dword ptr [rax] ; stc ; cli ; jmp qword ptr [rax]
0x00000000004941b3 : inc dword ptr [rax] ; xchg eax, esp ; stc ; call qword ptr [rax + 0x20fff994]
0x0000000000455114 : inc dword ptr [rbp + 0x31] ; fisttp dword ptr [rcx - 0x7d] ; ret
0x000000000047bd4f : inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x00000000004929af : inc dword ptr [rbp + 0x66fff7ae] ; scasd eax, dword ptr [rdi] ; idiv edi ; retf
0x00000000004826cc : inc dword ptr [rbp - 0x76b08a40] ; ret
0x0000000000402760 : inc dword ptr [rbp - 0x7aa48740] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000400927 : inc dword ptr [rbx + 0x438d01c1] ; call rbx
0x0000000000494e03 : inc dword ptr [rbx + rbp] ; cli ; push qword ptr [rdx + rbp - 6] ; jmp rsp
0x00000000004946db : inc dword ptr [rbx + rdx - 6] ; call rsp
0x000000000040d4db : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x000000000048e3c9 : inc dword ptr [rbx - 0x38b7f808] ; ret 0xffff
0x0000000000459870 : inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x000000000048c5c3 : inc dword ptr [rbx - 0x7bf0bf1e] ; ret
0x000000000045edc4 : inc dword ptr [rbx - 0x8f743] ; call qword ptr [rax]
0x000000000044830d : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000044827b : inc dword ptr [rbx] ; pop rbx ; ret
0x000000000047f2d9 : inc dword ptr [rcx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000460192 : inc dword ptr [rcx + 0x29] ; ret 0x8545
0x000000000046cf09 : inc dword ptr [rcx + 0x29] ; retf 0x98e9
0x0000000000488104 : inc dword ptr [rcx + 0xf] ; mov dh, 0x49 ; add al, 0x89 ; retf 0xeac0
0x0000000000460dd1 : inc dword ptr [rcx + 0xf] ; mov esi, 0x3d8d48c7 ; ret
0x0000000000481012 : inc dword ptr [rcx + rbp - 0x40] ; ret
0x000000000041285b : inc dword ptr [rcx + rcx*4 - 0x18] ; syscall
0x000000000046f951 : inc dword ptr [rcx + rcx*4 - 0x40] ; jmp 0x46f927
0x00000000004525ce : inc dword ptr [rcx - 0x77] ; ret
0x00000000004558b6 : inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x0000000000459873 : inc dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000046dcc6 : inc dword ptr [rcx - 0x7d] ; retf
0x000000000044a687 : inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x0000000000469b1f : inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000046522f : inc dword ptr [rcx] ; retf
0x0000000000494613 : inc dword ptr [rdx + 0x14] ; cli ; call rdx
0x0000000000494bd3 : inc dword ptr [rdx + rdi - 6] ; call rsp
0x0000000000494843 : inc dword ptr [rdx] ; add eax, 0x472fffa ; cli ; jmp rdx
0x0000000000494b3b : inc dword ptr [rdx] ; cli ; call qword ptr [rdx + 0x22fffa35]
0x000000000043fb8d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000004945af : inc dword ptr [rsi + 0x11] ; cli ; call rsi
0x0000000000494aa7 : inc dword ptr [rsi + 0x38] ; cli ; call rsi
0x00000000004928b3 : inc dword ptr [rsi + rbp*4 - 9] ; ljmp [rax] ; scasb al, byte ptr [rdi] ; idiv edi ; retf
0x000000000048e1a2 : inc dword ptr [rsi*2 + 0x8b80f] ; add byte ptr [rax], al ; ret
0x000000000049459f : inc dword ptr [rsi] ; adc edi, edx ; call qword ptr [rsi + 0x26fffa12]
0x0000000000494a97 : inc dword ptr [rsi] ; cmp bh, dl ; call qword ptr [rsi + 0x26fffa39]
0x0000000000493f8f : inc eax ; and ecx, edi ; jmp rax
0x0000000000495147 : inc eax ; clc ; cli ; jmp rax
0x0000000000494f8f : inc eax ; cli ; call rax
0x000000000049511f : inc eax ; idiv edx ; call rax
0x00000000004941eb : inc eax ; mov edi, 0xb250fff9 ; stc ; call qword ptr [rax]
0x000000000049516b : inc eax ; stc ; cli ; jmp rax
0x0000000000493faf : inc eax ; sub bh, cl ; jmp rax
0x0000000000494ecb : inc eax ; sub edx, edi ; jmp qword ptr [rax]
0x0000000000494313 : inc eax ; wait ; stc ; call qword ptr [rax]
0x0000000000494a7f : inc eax ; xor eax, 0x3550fffa ; cli ; jmp rax
0x00000000004ab767 : inc ebp ; adc dh, bh ; call rax
0x000000000042c2bc : inc ebp ; std ; xlatb ; ret 0xe883
0x0000000000471fac : inc ebx ; nop ; xor eax, eax ; ret
0x0000000000446669 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000495827 : inc esp ; cmp eax, 0x3dc4fffb ; sti ; call qword ptr [rbx]
0x0000000000463510 : insb byte ptr [rdi], dx ; add al, 4 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x3e8
0x00000000004248eb : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000042b084 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000403fb6 : insb byte ptr [rdi], dx ; and al, 0x68 ; je 0x404001 ; xor edi, edi ; call 0x4201d9
0x00000000004a99fe : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x000000000045d555 : insb byte ptr [rdi], dx ; ret 0x4c40
0x00000000004a8dc6 : insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000424600 : insb byte ptr [rdi], dx ; xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000453286 : insd dword ptr [rdi], dx ; add al, 0 ; add bh, dh ; ret 0xf800
0x0000000000409eef : insd dword ptr [rdi], dx ; add al, 0 ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x00000000004244fb : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000485447 : insd dword ptr [rdi], dx ; and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x0000000000490152 : insd dword ptr [rdi], dx ; js 0x4901cf ; ret 0x8b48
0x00000000004a99ff : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004a7dad : insd dword ptr [rdi], dx ; ret 0xb9b9
0x0000000000454f9f : insd dword ptr [rdi], dx ; retf
0x00000000004a8cbf : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004681fa : int 0x80
0x0000000000474356 : int1 ; call rbx
0x0000000000491047 : int1 ; clc ; push rbx ; ret
0x0000000000495095 : int1 ; cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x000000000041903b : int1 ; jae 0x419042 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000456492 : int1 ; je 0x456641 ; mov rdx, rax ; jmp 0x456459
0x0000000000456897 : int1 ; je 0x456641 ; mov rdx, rax ; jmp 0x45685e
0x000000000045690e : int1 ; je 0x456641 ; mov rdx, rax ; jmp 0x4568d5
0x0000000000446d7b : int1 ; jl 0x446dcc ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446d9c : int1 ; jl 0x446ded ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446daf : int1 ; jl 0x446e00 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446e84 : int1 ; jl 0x446ed5 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446edc : int1 ; jl 0x446f2d ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000446f79 : int1 ; jl 0x446fca ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000448205 : int1 ; jmp rcx
0x0000000000471d0b : int1 ; jne 0x471d06 ; lea eax, [rdx + rdi] ; ret
0x000000000047e7d7 : int1 ; jne 0x47e7b4 ; ret
0x00000000004a8c84 : int1 ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x0000000000448329 : int1 ; mov eax, eax ; ret
0x0000000000434bab : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042ffdf : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000040e5b3 : int1 ; mov rdx, r15 ; call 0x45b066
0x0000000000446143 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000448310 : int1 ; pop rbx ; mov eax, eax ; ret
0x00000000004a93d6 : int1 ; ret 0x5803
0x000000000041fbab : int1 ; ret 2
0x0000000000446147 : int1 ; sub eax, edx ; ret
0x0000000000400926 : iretd ; inc dword ptr [rbx + 0x438d01c1] ; call rbx
0x0000000000405dbd : ja 0x405d9e ; mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000438ab3 : ja 0x438ab7 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000444297 : ja 0x44429d ; ret
0x00000000004442b3 : ja 0x4442bd ; mov dword ptr [rdi], ecx ; ret
0x00000000004442f4 : ja 0x444303 ; mov qword ptr [rdi], rcx ; ret
0x0000000000444379 : ja 0x44438d ; ret
0x00000000004443cf : ja 0x4443e7 ; ret
0x0000000000444451 : ja 0x44446d ; ret
0x00000000004448b7 : ja 0x4448c1 ; lea rax, [rdi + 2] ; ret
0x00000000004448d3 : ja 0x4448e1 ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x0000000000444924 : ja 0x444937 ; mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x0000000000444a09 : ja 0x444a21 ; lea rax, [rdi + 0x10] ; ret
0x0000000000444a7f : ja 0x444a9b ; lea rax, [rdi + 0x14] ; ret
0x0000000000444b01 : ja 0x444b21 ; lea rax, [rdi + 0x18] ; ret
0x0000000000447084 : ja 0x4470b5 ; jb 0x447096 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004473e4 : ja 0x44742a ; jb 0x4473f6 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447834 : ja 0x447892 ; jb 0x447846 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447e03 : ja 0x447e20 ; jb 0x447e0f ; mov byte ptr [rdi], cl ; ret
0x0000000000447f71 : ja 0x447fa8 ; jb 0x447f80 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000448139 : ja 0x44817e ; jb 0x448148 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000044911c : ja 0x449148 ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x00000000004496db : ja 0x4496e3 ; ret
0x0000000000449729 : ja 0x449733 ; ret
0x0000000000449934 : ja 0x449993 ; ret
0x00000000004499ca : ja 0x4499d3 ; ret
0x0000000000449a07 : ja 0x449a63 ; ret
0x0000000000449a9d : ja 0x449aab ; ret
0x0000000000449acd : ja 0x449adb ; ret
0x0000000000449cd7 : ja 0x449d1b ; ret
0x0000000000449d4d : ja 0x449d5b ; ret
0x000000000044a4a6 : ja 0x44a4b3 ; ret
0x000000000044c890 : ja 0x44c8bd ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000044d5b5 : ja 0x44d609 ; movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x000000000045b033 : ja 0x45b043 ; ret
0x0000000000465f42 : ja 0x465f25 ; mov eax, r9d ; ret
0x0000000000471c45 : ja 0x471c5d ; cli ; dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x0000000000474e19 : ja 0x474de7 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000047569b : ja 0x4756a3 ; ret
0x00000000004756ef : ja 0x4756fb ; ret
0x0000000000475a10 : ja 0x475a3b ; ret
0x0000000000478c40 : ja 0x478c3f ; dec dword ptr [rax - 0x77] ; ret
0x000000000047d8b4 : ja 0x47d8c0 ; add byte ptr [rax + 0x15], bh ; syscall
0x0000000000482f6e : ja 0x482fc0 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000048dd5d : ja 0x48dd66 ; sbb eax, eax ; ret
0x00000000004a4e65 : ja 0x4a4e66 ; jmp qword ptr [rax]
0x00000000004a4e69 : ja 0x4a4e6a ; jmp qword ptr [rbx]
0x00000000004a9444 : ja 0x4a93cb ; ret 0x48f
0x00000000004b3005 : ja 0x4b300d ; add byte ptr [rax + 0x14], bl ; cld ; jmp qword ptr [rax]
0x00000000004188bd : jae 0x4188e5 ; movzx eax, byte ptr [rax] ; ret
0x000000000041903c : jae 0x419041 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004190d3 : jae 0x4190d8 ; dec dword ptr [rax - 0x77] ; ret
0x000000000044919e : jae 0x4491a0 ; dec dword ptr [rax - 0x77] ; ret
0x000000000044964d : jae 0x449652 ; ret
0x000000000044a6dd : jae 0x44a6e2 ; ret
0x000000000044a70d : jae 0x44a712 ; ret
0x000000000044a73d : jae 0x44a742 ; ret
0x000000000044bde0 : jae 0x44bde5 ; ret
0x000000000044be0d : jae 0x44be12 ; ret
0x000000000044c114 : jae 0x44c103 ; ret
0x0000000000454f2f : jae 0x454ebc ; retf 0xb941
0x000000000045adde : jae 0x45ae25 ; xor eax, eax ; pop rbx ; ret
0x000000000047561d : jae 0x475622 ; ret
0x000000000047fa5b : jae 0x47fa05 ; xor eax, eax ; ret
0x00000000004881d4 : jae 0x4881b7 ; mov eax, 1 ; ret
0x000000000048868d : jae 0x488692 ; ret
0x000000000048ece6 : jae 0x48ecf9 ; mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x000000000049294c : jae 0x492905 ; idiv edi ; pop rcx ; scasd eax, dword ptr [rdi] ; idiv edi ; retf
0x000000000049657d : jae 0x49657c ; call qword ptr [rdi]
0x000000000049657c : jae 0x49657d ; call qword ptr [rdi]
0x000000000049659d : jae 0x49659c ; call qword ptr [rax]
0x00000000004a7a02 : jae 0x4a79e4 ; jo 0x4a7a80 ; mov ebp, 0xfb67d10d ; ret
0x00000000004a889e : jae 0x4a8879 ; push rsi ; pop rdx ; je 0x4a886e ; ret 0xacfc
0x00000000004ad162 : jae 0x4ad170 ; ret
0x00000000004b1475 : jae 0x4b1473 ; call qword ptr [rdx]
0x00000000004b1474 : jae 0x4b1474 ; call qword ptr [rdx]
0x00000000004b14f5 : jae 0x4b14f3 ; jmp rax
0x000000000041dd47 : jb 0x41dd31 ; mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x000000000042dfea : jb 0x42dffa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e13a : jb 0x42e14a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e28a : jb 0x42e29a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e3da : jb 0x42e3ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e52a : jb 0x42e53a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e67a : jb 0x42e68a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e7ca : jb 0x42e7da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e91a : jb 0x42e92a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ea6a : jb 0x42ea7a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ebba : jb 0x42ebca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ed0a : jb 0x42ed1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ee5a : jb 0x42ee6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042efaa : jb 0x42efba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f0fa : jb 0x42f10a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f24a : jb 0x42f25a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004309ba : jb 0x4309ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430b0a : jb 0x430b1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430c5a : jb 0x430c6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430daa : jb 0x430dba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430efa : jb 0x430f0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043104a : jb 0x43105a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043119a : jb 0x4311aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004312ea : jb 0x4312fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043143a : jb 0x43144a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043158a : jb 0x43159a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004316da : jb 0x4316ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043182a : jb 0x43183a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043197a : jb 0x43198a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431aca : jb 0x431ada ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431c1a : jb 0x431c2a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043868e : jb 0x43869a ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000446de5 : jb 0x446df4 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000446df0 : jb 0x446e03 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000446dfd : jb 0x446e05 ; mov byte ptr [rdi], cl ; ret
0x0000000000447004 : jb 0x44700d ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000447086 : jb 0x447094 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447085 : jb 0x447095 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004473e6 : jb 0x4473f4 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447836 : jb 0x447844 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447e05 : jb 0x447e0d ; mov byte ptr [rdi], cl ; ret
0x0000000000447f73 : jb 0x447f7e ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000044813b : jb 0x448146 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000004565ce : jb 0x45663c ; mov rdx, rax ; jmp 0x456593
0x0000000000484e74 : jb 0x484e9d ; add cl, ch ; retf
0x0000000000494848 : jb 0x494851 ; cli ; jmp rdx
0x0000000000496545 : jb 0x496544 ; jmp rdx
0x0000000000496541 : jb 0x496544 ; ljmp [rdx] ; jb 0x496548 ; jmp rdx
0x00000000004017e4 : jbe 0x4017f8 ; syscall
0x000000000041091f : jbe 0x410972 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004138f8 : jbe 0x41392a ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000042b4f6 : jbe 0x42b535 ; add rax, rdi ; ret
0x000000000042b506 : jbe 0x42b537 ; lea rax, [rdi + rax + 0x10] ; ret
0x000000000042b516 : jbe 0x42b537 ; lea rax, [rdi + rax + 0x20] ; ret
0x000000000042b526 : jbe 0x42b537 ; lea rax, [rdi + rax + 0x30] ; ret
0x000000000042b937 : jbe 0x42b9a8 ; add rax, rdi ; vzeroupper ; ret
0x0000000000456002 : jbe 0x455ffc ; ret
0x000000000047293e : jbe 0x472921 ; clc ; dec dword ptr [rax + 1] ; ret
0x0000000000481b7f : jbe 0x481b8b ; ret
0x0000000000494144 : jbe 0x4940df ; stc ; call qword ptr [rsi]
0x00000000004a4e49 : jbe 0x4a4e4a ; jmp qword ptr [rbx]
0x00000000004a92dc : jbe 0x4a92af ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000004a92db : jbe 0x4a92b0 ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000004b2e65 : jbe 0x4b2e6d ; add byte ptr [rax + 0xb], bh ; cld ; jmp qword ptr [rax]
0x000000000040040e : je 0x400414 ; call rax
0x0000000000400a89 : je 0x400aa0 ; pop rbp ; mov edi, 0x6babd0 ; jmp rax
0x0000000000400acb : je 0x400ae0 ; pop rbp ; mov edi, 0x6babd0 ; jmp rax
0x00000000004039f0 : je 0x403a29 ; mov rdi, rax ; call 0x4004c7
0x0000000000403fb9 : je 0x403ffe ; xor edi, edi ; call 0x4201d6
0x000000000040598e : je 0x40599e ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x000000000041246d : je 0x412498 ; cmp byte ptr [rax + 0x29], cl ; ret
0x00000000004129c8 : je 0x4129cf ; ret
0x000000000041459c : je 0x4145d3 ; dec dword ptr [rax + 0x21] ; retf 0x2148
0x0000000000416731 : je 0x416760 ; or al, 0x48 ; mov dword ptr [rsp], edi ; call 0x4129c9
0x0000000000416bb5 : je 0x416bc3 ; ret
0x00000000004229b2 : je 0x4229de ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000422ea3 : je 0x422eb6 ; lea rax, [rdx - 0x10] ; ret
0x00000000004230b0 : je 0x42303d ; retf 0x4c89
0x00000000004230af : je 0x42303e ; retf 0x4c89
0x0000000000424562 : je 0x42452d ; ret
0x000000000042a2e3 : je 0x42a2ad ; lea r10, [r10 + r9] ; jmp r10
0x000000000042b1ca : je 0x42b1d2 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000042b3fc : je 0x42b453 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042b6da : je 0x42b731 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042c0a5 : je 0x42c0b7 ; sbb eax, eax ; or eax, 1 ; ret
0x000000000042d6c7 : je 0x42d6d1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043d103 : je 0x43d0cd ; lea r10, [r10 + r9] ; jmp r10
0x000000000043ec93 : je 0x43ec5d ; lea r10, [r10 + r9] ; jmp r10
0x0000000000440471 : je 0x440489 ; bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x0000000000440a94 : je 0x440a9f ; bsf eax, edx ; ret
0x0000000000440b3d : je 0x440b56 ; bsf rax, rdx ; ret
0x0000000000447113 : je 0x447134 ; ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x00000000004487be : je 0x4487cc ; xor eax, eax ; ret
0x00000000004487b9 : je 0x4487d9 ; cmp eax, 2 ; je 0x4487d1 ; xor eax, eax ; ret
0x000000000044880d : je 0x4487f3 ; ret
0x0000000000449c48 : je 0x449c77 ; mov eax, 0x48 ; syscall
0x000000000044a007 : je 0x44a032 ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x000000000044a56a : je 0x44a571 ; ret
0x000000000044bee9 : je 0x44beee ; ret
0x000000000044bf4d : je 0x44bf52 ; ret
0x000000000044c79c : je 0x44c7af ; lea rdi, [rcx + rax + 0x20] ; jmp rdx
0x000000000044d4c8 : je 0x44d4d3 ; ret
0x000000000044d4e4 : je 0x44d4f9 ; mov dword ptr [rip + 0x26b5cc], edx ; pop rbx ; ret
0x000000000044e278 : je 0x44e22c ; call 0x45ad14
0x000000000044e274 : je 0x44e23d ; add byte ptr es:[rsi + rbp*4 - 0x18], dh ; xchg eax, ecx ; retf 0
0x0000000000451565 : je 0x451593 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000451d1f : je 0x451d4e ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x000000000045200f : je 0x45203e ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000452357 : je 0x452386 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000452596 : je 0x4525c5 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000452bfe : je 0x452c2c ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000453796 : je 0x4537c5 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000454822 : je 0x454851 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000045531b : je 0x45534a ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00000000004556c3 : je 0x4556f2 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000455b07 : je 0x455b36 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000455f42 : je 0x455f70 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000456504 : je 0x456533 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000456493 : je 0x456640 ; mov rdx, rax ; jmp 0x456458
0x0000000000456898 : je 0x456640 ; mov rdx, rax ; jmp 0x45685d
0x000000000045690f : je 0x456640 ; mov rdx, rax ; jmp 0x4568d4
0x0000000000456833 : je 0x456862 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000456d47 : je 0x456d76 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000457182 : je 0x4571b0 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000004587f7 : je 0x458803 ; ret
0x00000000004587f2 : je 0x458808 ; cmp esi, 3 ; je 0x458808 ; ret
0x000000000045914a : je 0x459150 ; call rsi
0x0000000000459246 : je 0x45924c ; call rax
0x000000000045a64b : je 0x45a651 ; call rax
0x000000000045ac0e : je 0x45ac1b ; ret
0x00000000004609a8 : je 0x460a10 ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000468d8c : je 0x468db7 ; and byte ptr [rax + 1], cl ; ret
0x000000000046c4a8 : je 0x46c45a ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000470b86 : je 0x470bd6 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000470b85 : je 0x470bd7 ; add esp, 0x20 ; pop rbx ; ret
0x00000000004719dc : je 0x4719e3 ; ret
0x00000000004719f9 : je 0x471a06 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000471a33 : je 0x471a95 ; pop rbp ; pop r12 ; ret
0x0000000000471abf : je 0x471b21 ; pop rbp ; pop r12 ; ret
0x0000000000471c4a : je 0x471c74 ; or al, 0xeb ; ret 0x5590
0x00000000004738cc : je 0x4738f6 ; bsf rax, rdx ; ret
0x0000000000473d6b : je 0x473d73 ; ret
0x000000000047434e : je 0x47437d ; sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x0000000000474478 : je 0x474485 ; test edx, edx ; jne 0x474477 ; ret
0x0000000000474919 : je 0x474939 ; mov cl, dl ; and cl, 0xf ; je 0x474949 ; ret
0x0000000000474920 : je 0x474942 ; ret
0x0000000000474935 : je 0x474956 ; add rax, 2 ; ret
0x000000000047587d : je 0x4758af ; mov eax, 0x101 ; syscall
0x0000000000475df2 : je 0x475ef1 ; xor eax, eax ; leave ; ret
0x000000000047e836 : je 0x47e843 ; mov qword ptr [rsi], rdi ; mov rax, rcx ; ret
0x000000000048100d : je 0x480f5f ; sub eax, r8d ; ret
0x0000000000485142 : je 0x485156 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485648 : je 0x485673 ; or byte ptr [rax + 1], cl ; ret
0x000000000048723d : je 0x487282 ; shl rdx, 5 ; add rdx, rax ; jmp 0x487259
0x0000000000487e06 : je 0x487e13 ; ret
0x000000000048ac4d : je 0x48ac78 ; adc byte ptr [rcx - 0x77], cl ; ret
0x000000000048d1e8 : je 0x48d1d2 ; add rsp, 0x18 ; ret
0x000000000048d1d1 : je 0x48d1f6 ; add rsp, 0x18 ; ret
0x000000000048d278 : je 0x48d258 ; ret
0x000000000048d2b9 : je 0x48d2c6 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x000000000048f5aa : je 0x48f5b3 ; ret
0x000000000048f5e3 : je 0x48f5f4 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f5f9 ; ret
0x000000000048f6ba : je 0x48f6c3 ; ret
0x0000000000490e53 : je 0x490e5e ; call rax
0x0000000000494900 : je 0x49490a ; cli ; jmp rsp
0x0000000000494e08 : je 0x494e37 ; cli ; jmp rsp
0x00000000004a4e25 : je 0x4a4e26 ; call qword ptr [rax]
0x00000000004a4e3d : je 0x4a4e3e ; jmp qword ptr [rbx]
0x00000000004a4e39 : je 0x4a4e3e ; lcall [rax + 0x74] ; std ; jmp qword ptr [rbx]
0x00000000004a4ea5 : je 0x4a4ea6 ; jmp qword ptr [rbx]
0x00000000004a6e0c : je 0x4a6e3a ; push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004a7b68 : je 0x4a7b33 ; xor al, 0xd8 ; ret
0x00000000004a88a2 : je 0x4a886a ; ret 0xacfc
0x00000000004ad2ac : je 0x4ad23f ; idiv bh ; retf
0x00000000004b2c6d : je 0x4b2c75 ; add byte ptr [rax - 4], dl ; sti ; jmp qword ptr [rbx]
0x00000000004b2c85 : je 0x4b2c8d ; add byte ptr [rax - 4], ch ; sti ; jmp qword ptr [rbx]
0x00000000004b2c84 : je 0x4b2c8e ; add byte ptr [rax - 4], ch ; sti ; jmp qword ptr [rbx]
0x0000000000416bb2 : jg 0x416bf2 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x00000000004218c5 : jg 0x4218f5 ; add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000042fbc9 : jg 0x42fc1c ; ret
0x000000000042fc10 : jg 0x42fc60 ; mov ebx, 0x4f7f0ff3 ; retf
0x000000000042fc15 : jg 0x42fc68 ; retf
0x000000000042fc4f : jg 0x42fc9a ; ret
0x000000000042fc8f : jg 0x42fcda ; retf
0x000000000042fdc9 : jg 0x42fe1c ; ret 0x894c
0x000000000042fe10 : jg 0x42fe60 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x000000000042fe15 : jg 0x42fe68 ; retf 0x894c
0x000000000042fe4f : jg 0x42fe9a ; ret 0x894c
0x000000000042fe8b : jg 0x42fed6 ; retf 0x894c
0x0000000000432599 : jg 0x4325ec ; ret
0x00000000004325e0 : jg 0x432630 ; mov ebx, 0x4f7f0ff3 ; retf
0x00000000004325e5 : jg 0x432638 ; retf
0x000000000043261f : jg 0x43266a ; ret
0x000000000043265f : jg 0x4326aa ; retf
0x0000000000432799 : jg 0x4327ec ; ret 0x894c
0x00000000004327e0 : jg 0x432830 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x00000000004327e5 : jg 0x432838 ; retf 0x894c
0x000000000043281f : jg 0x43286a ; ret 0x894c
0x000000000043285b : jg 0x4328a6 ; retf 0x894c
0x0000000000434b88 : jg 0x434bd9 ; loope 0x434b87 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434bff : jg 0x434c4a ; ret 0xff2
0x0000000000434c18 : jg 0x434c69 ; loop 0x434c17 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434c8f : jg 0x434cda ; ret
0x0000000000434ca8 : jg 0x434cf9 ; jrcxz 0x434ca7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434d38 : jg 0x434d89 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434db8 : jg 0x434e09 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434e38 : jg 0x434e89 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434eb8 : jg 0x434f09 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435015 : jg 0x435065 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000043501f : jg 0x43506a ; retf 0xff2
0x0000000000435095 : jg 0x4350e5 ; mov ebx, 0x46f00ff2 ; retf
0x000000000043509f : jg 0x4350ea ; retf
0x0000000000435138 : jg 0x435189 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004351b8 : jg 0x435209 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435248 : jg 0x435299 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004352c8 : jg 0x435319 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043533c : jg 0x435347 ; ret
0x0000000000435396 : jg 0x4353a9 ; ret
0x0000000000435391 : jg 0x4353e1 ; psllq mm1, qword ptr [rdi] ; jg 0x4353ae ; ret
0x0000000000435406 : jg 0x435419 ; ret
0x0000000000435476 : jg 0x435489 ; ret
0x0000000000435471 : jg 0x4354c1 ; or eax, 0xf7f0ff3 ; ret
0x00000000004354e6 : jg 0x4354f9 ; ret
0x00000000004354e1 : jg 0x435531 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435556 : jg 0x435569 ; ret
0x0000000000435551 : jg 0x4355a1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000004355c6 : jg 0x4355d9 ; ret
0x00000000004355c1 : jg 0x435611 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435636 : jg 0x435649 ; ret
0x0000000000435631 : jg 0x435681 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004356a6 : jg 0x4356b9 ; ret
0x00000000004356a1 : jg 0x4356f1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435716 : jg 0x435729 ; ret
0x0000000000435786 : jg 0x435799 ; ret
0x00000000004357f6 : jg 0x435809 ; ret
0x00000000004357f1 : jg 0x435841 ; add eax, 0xf7f0ff3 ; ret
0x0000000000435866 : jg 0x435879 ; ret
0x0000000000435861 : jg 0x4358b1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000004358d6 : jg 0x4358e9 ; ret
0x00000000004358d1 : jg 0x435921 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435946 : jg 0x435959 ; ret
0x0000000000435941 : jg 0x435991 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000004359b6 : jg 0x4359c9 ; ret
0x00000000004359b1 : jg 0x435a01 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004376a8 : jg 0x4376f9 ; loope 0x4376a7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043771f : jg 0x43776a ; ret 0xff2
0x0000000000437738 : jg 0x437789 ; loop 0x437737 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004377af : jg 0x4377fa ; ret
0x00000000004377c8 : jg 0x437819 ; jrcxz 0x4377c7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437858 : jg 0x4378a9 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004378d8 : jg 0x437929 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437958 : jg 0x4379a9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004379d8 : jg 0x437a29 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437b35 : jg 0x437b85 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x0000000000437b3f : jg 0x437b8a ; retf 0xff2
0x0000000000437bb5 : jg 0x437c05 ; mov ebx, 0x46f00ff2 ; retf
0x0000000000437bbf : jg 0x437c0a ; retf
0x0000000000437c58 : jg 0x437ca9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437cd8 : jg 0x437d29 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437d68 : jg 0x437db9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437de8 : jg 0x437e39 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437e5c : jg 0x437e67 ; ret
0x0000000000437eb6 : jg 0x437ec9 ; ret
0x0000000000437eb1 : jg 0x437f01 ; psllq mm1, qword ptr [rdi] ; jg 0x437ece ; ret
0x0000000000437f26 : jg 0x437f39 ; ret
0x0000000000437f96 : jg 0x437fa9 ; ret
0x0000000000437f91 : jg 0x437fe1 ; or eax, 0xf7f0ff3 ; ret
0x0000000000438006 : jg 0x438019 ; ret
0x0000000000438001 : jg 0x438051 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438076 : jg 0x438089 ; ret
0x0000000000438071 : jg 0x4380c1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000004380e6 : jg 0x4380f9 ; ret
0x00000000004380e1 : jg 0x438131 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438156 : jg 0x438169 ; ret
0x0000000000438151 : jg 0x4381a1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004381c6 : jg 0x4381d9 ; ret
0x00000000004381c1 : jg 0x438211 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438236 : jg 0x438249 ; ret
0x00000000004382a6 : jg 0x4382b9 ; ret
0x0000000000438316 : jg 0x438329 ; ret
0x0000000000438311 : jg 0x438361 ; add eax, 0xf7f0ff3 ; ret
0x0000000000438386 : jg 0x438399 ; ret
0x0000000000438381 : jg 0x4383d1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000004383f6 : jg 0x438409 ; ret
0x00000000004383f1 : jg 0x438441 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438466 : jg 0x438479 ; ret
0x0000000000438461 : jg 0x4384b1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000004384d6 : jg 0x4384e9 ; ret
0x00000000004384d1 : jg 0x438521 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438634 : jg 0x438645 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000438648 : jg 0x438659 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000438aba : jg 0x438ab6 ; ret
0x0000000000444366 : jg 0x444371 ; ret
0x0000000000444376 : jg 0x444384 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000044438a : jg 0x444399 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000004443a9 : jg 0x4443b7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000004443b9 : jg 0x4443c7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000004443c9 : jg 0x4443da ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000004443ea : jg 0x4443f9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000044440a : jg 0x444419 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000044442a : jg 0x444439 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000044444a : jg 0x44445c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000044448d : jg 0x44449f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000004444ad : jg 0x4444bf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000004444cb : jg 0x4444db ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000004444eb : jg 0x4444fb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000044450b : jg 0x44451b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000044452b : jg 0x44453b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004449f6 : jg 0x444a05 ; lea rax, [rdi + 0xf] ; ret
0x0000000000444a06 : jg 0x444a18 ; mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x0000000000444a39 : jg 0x444a4b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x0000000000444a59 : jg 0x444a6b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x0000000000444b7f : jg 0x444bdf ; or eax, 0x1c478d48 ; ret
0x0000000000446dc7 : jg 0x446dd7 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000446dbd : jg 0x446ddd ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000447254 : jg 0x44728c ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000447322 : jg 0x44735a ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000004473fa : jg 0x44740b ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000044758b : jg 0x4475b5 ; vzeroupper ; ret
0x0000000000447632 : jg 0x44763c ; vzeroupper ; ret
0x00000000004476be : jg 0x4476e8 ; vzeroupper ; ret
0x000000000044774e : jg 0x447758 ; vzeroupper ; ret
0x0000000000447862 : jg 0x447873 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000447a46 : jg 0x447a70 ; vzeroupper ; ret
0x0000000000447a45 : jg 0x447a71 ; vzeroupper ; ret
0x0000000000447b0c : jg 0x447b16 ; vzeroupper ; ret
0x0000000000447b0b : jg 0x447b17 ; vzeroupper ; ret
0x0000000000447bdf : jg 0x447c09 ; vzeroupper ; ret
0x0000000000447bde : jg 0x447c0a ; vzeroupper ; ret
0x0000000000447cb2 : jg 0x447cbc ; vzeroupper ; ret
0x0000000000447cb1 : jg 0x447cbd ; vzeroupper ; ret
0x0000000000447d1c : jg 0x447d27 ; ret
0x0000000000447d6c : jg 0x447d77 ; ret
0x0000000000447de3 : jg 0x447e2f ; xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000447e74 : jg 0x447e82 ; vzeroupper ; ret
0x0000000000447ec4 : jg 0x447ed2 ; vzeroupper ; ret
0x0000000000447f83 : jg 0x447f91 ; vzeroupper ; ret
0x0000000000448001 : jg 0x44800f ; vzeroupper ; ret
0x0000000000448000 : jg 0x448010 ; vzeroupper ; ret
0x0000000000448061 : jg 0x44806f ; vzeroupper ; ret
0x0000000000448060 : jg 0x448070 ; vzeroupper ; ret
0x000000000044814b : jg 0x448159 ; vzeroupper ; ret
0x0000000000448159 : jg 0x448167 ; vzeroupper ; ret
0x00000000004481b0 : jg 0x4481ed ; ret 0x2b77
0x00000000004482cb : jg 0x448298 ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000448327 : jg 0x448325 ; int1 ; mov eax, eax ; ret
0x000000000044e476 : jg 0x44e3fd ; retf
0x0000000000454118 : jg 0x4540a5 ; ret 0xdb76
0x000000000045f112 : jg 0x45f12b ; test byte ptr [rip - 0x7c000011], al ; ret
0x0000000000469702 : jg 0x46971b ; test byte ptr [rip - 0x7c000003], dl ; ret
0x000000000046ab7a : jg 0x46ab93 ; test byte ptr [rbp - 0x7c000018], bl ; ret
0x000000000046ac77 : jg 0x46ac90 ; test byte ptr [rax - 0x7c000019], ah ; ret
0x000000000046f4ad : jg 0x46f4c6 ; add eax, edi ; mov rdx, r8 ; jmp 0x46f485
0x000000000047f4c7 : jg 0x47f4d9 ; test rdi, rdi ; jne 0x47f4a8 ; ret
0x000000000048aa98 : jg 0x48aaa2 ; add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x000000000040df2a : jge 0x40df33 ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004191c7 : jge 0x4191d3 ; sub al, byte ptr [rax] ; ret
0x000000000044a835 : jge 0x44a83a ; call r12
0x000000000044a85d : jge 0x44a862 ; call r12
0x000000000044ad4d : jge 0x44acfd ; mov r12d, r14d ; call r15
0x000000000044b3ad : jge 0x44b3b2 ; call r12
0x000000000044b3d9 : jge 0x44b3de ; call r12
0x000000000044b40d : jge 0x44b412 ; call r12
0x000000000044b43d : jge 0x44b442 ; call r12
0x000000000044b465 : jge 0x44b46a ; call r12
0x000000000044b495 : jge 0x44b49a ; call r12
0x000000000048d632 : jge 0x48d62f ; leave ; ret
0x000000000048d7b0 : jge 0x48d7b3 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048d8fc : jge 0x48d8f9 ; leave ; ret
0x000000000048d948 : jge 0x48d94b ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048dad7 : jge 0x48dada ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048dc37 : jge 0x48dc34 ; leave ; ret
0x000000000048dc88 : jge 0x48dc8b ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004a6e6a : jge 0x4a6e4b ; push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000004a87b4 : jge 0x4a8825 ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x000000000040115f : jl 0x40118d ; or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000404a66 : jl 0x404a91 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000040d458 : jl 0x40d483 ; or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000417082 : jl 0x41709e ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041eacb : jl 0x41eac5 ; ret 0x7508
0x00000000004385b4 : jl 0x438603 ; adc dword ptr [rcx - 1], edi ; ret
0x00000000004385f0 : jl 0x43863f ; adc dword ptr [rcx - 1], ebx ; ret
0x00000000004387ee : jl 0x43883d ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000438955 : jl 0x4389a4 ; adc dword ptr [rcx + 7], edi ; ret
0x0000000000438ab7 : jl 0x438b06 ; adc dword ptr [rdi - 8], edi ; ret
0x0000000000446d7c : jl 0x446dcb ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446d9d : jl 0x446dec ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446db0 : jl 0x446dff ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446e85 : jl 0x446ed4 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446edd : jl 0x446f2c ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000446f7a : jl 0x446fc9 ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000447930 : jl 0x44794f ; cld ; vzeroupper ; ret
0x000000000044a912 : jl 0x44a940 ; or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000450e51 : jl 0x450e7f ; and byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000451276 : jl 0x4512a4 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000004531b8 : jl 0x4531e6 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000045379b : jl 0x4537c5 ; call r15
0x00000000004541ea : jl 0x454218 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000455b0c : jl 0x455b36 ; call r15
0x0000000000455f47 : jl 0x455f70 ; call rbx
0x0000000000455ffd : jl 0x45602a ; add byte ptr [rsi + rsi*2 - 0xa], sil ; ret
0x000000000045672d : jl 0x456757 ; or al, 0xe9 ; ret
0x0000000000456d4c : jl 0x456d76 ; call r15
0x0000000000457187 : jl 0x4571b0 ; call rbx
0x000000000045723d : jl 0x45726a ; add byte ptr [rdx + rdi*2 - 0xa], sil ; ret
0x000000000045b227 : jl 0x45b252 ; and byte ptr [rax + 1], cl ; ret
0x000000000045b69e : jl 0x45b6c9 ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000045b9e6 : jl 0x45ba11 ; xor byte ptr [rax + 0x39], cl ; ret 0x8d48
0x00000000004673cb : jl 0x4673f8 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000468ab5 : jl 0x468ae0 ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000004757ef : jl 0x47581d ; sbb byte ptr [rax + 0x101], bh ; syscall
0x000000000047b6c5 : jl 0x47b6f0 ; or byte ptr [rax - 0x7d], cl ; ret 0x101
0x00000000004826d5 : jl 0x482703 ; sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x0000000000494810 : jl 0x494818 ; cli ; jmp qword ptr [rdx]
0x00000000004a89b2 : jl 0x4a8a11 ; leave ; retf
0x00000000004aa8d4 : jl 0x4aa87f ; std ; jmp rbx
0x00000000004b14f4 : jl 0x4b156c ; cli ; jmp rax
0x0000000000440ade : jle 0x440ae8 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000446c51 : jle 0x446c8d ; movsxd rax, ecx ; ret
0x0000000000458842 : jle 0x458855 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000004a6e62 : jle 0x4a6dfb ; xlatb ; retf 0xa1eb
0x00000000004a8a25 : jle 0x4a8a60 ; pop rsp ; sbb ebp, ebx ; retf
0x000000000042397e : jmp 0x40043a
0x0000000000414812 : jmp 0x4147d8
0x0000000000423865 : jmp 0x423833
0x000000000042c7d8 : jmp 0x42c7a6
0x000000000042c856 : jmp 0x42c824
0x000000000042cce8 : jmp 0x42ccb6
0x000000000042cd66 : jmp 0x42cd34
0x00000000004402b4 : jmp 0x44027a
0x00000000004404cc : jmp 0x440492
0x000000000044693e : jmp 0x446904
0x0000000000446a0f : jmp 0x4469d5
0x0000000000446a7e : jmp 0x446a44
0x00000000004485c8 : jmp 0x448596
0x000000000044e252 : jmp 0x45acc2
0x000000000046a8f8 : jmp 0x46a8be
0x000000000046b433 : jmp 0x46b401
0x000000000046f955 : jmp 0x46f923
0x00000000004725d3 : jmp 0x472599
0x0000000000485c5a : jmp 0x485c20
0x00000000004a8a29 : jmp 0x4a89f7
0x00000000004a8f76 : jmp 0x4a8f44
0x0000000000482f71 : jmp 0xffffffffc357b8c6
0x000000000047bab9 : jmp 0xffffffffeb097d49
0x00000000004755b3 : jmp 0xfffffffff6791843
0x0000000000494037 : jmp qword ptr [rax + 0x10fff95a]
0x00000000004947c7 : jmp qword ptr [rax + 0x10fffa04]
0x000000000049474f : jmp qword ptr [rax + 0x10fffa0d]
0x0000000000494a0f : jmp qword ptr [rax - 0x1f00061a]
0x000000000040e331 : jmp qword ptr [rax]
0x000000000049293b : jmp qword ptr [rbp - 0x34000851]
0x00000000004a4e2b : jmp qword ptr [rbx]
0x000000000049571b : jmp qword ptr [rcx - 0x2b0004c3]
0x0000000000492753 : jmp qword ptr [rcx]
0x0000000000495713 : jmp qword ptr [rdi]
0x0000000000494817 : jmp qword ptr [rdx + 0x12fffa0a]
0x000000000049275f : jmp qword ptr [rdx - 0x29000907]
0x000000000049464b : jmp qword ptr [rdx]
0x000000000044c8d2 : jmp qword ptr [rsi]
0x00000000004249b9 : jmp r10
0x0000000000480180 : jmp r11
0x000000000042d9bd : jmp r9
0x0000000000400a91 : jmp rax
0x0000000000480181 : jmp rbx
0x0000000000422522 : jmp rcx
0x000000000040d56e : jmp rdi
0x000000000040d285 : jmp rdx
0x0000000000459f47 : jmp rsi
0x0000000000494703 : jmp rsp
0x000000000040058d : jne 0x400594 ; ret
0x0000000000405ddc : jne 0x405df0 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000040db08 : jne 0x40dae6 ; ret
0x000000000040dbfb : jne 0x40dc25 ; add rsp, 0x118 ; ret
0x000000000040f772 : jne 0x40f785 ; add rsp, 0xd8 ; ret
0x00000000004148e5 : jne 0x4148f3 ; ret
0x0000000000416508 : jne 0x41655c ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000416581 : jne 0x416573 ; ret
0x000000000041749e : jne 0x417493 ; ret
0x0000000000417ad1 : jne 0x417a97 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000417b1c : jne 0x417b15 ; lea eax, [rdx + rdi] ; ret
0x0000000000418436 : jne 0x41842b ; ret
0x000000000041a090 : jne 0x41a09f ; add rsp, 0x20 ; pop rbx ; ret
0x000000000041f76c : jne 0x41f733 ; ret
0x0000000000422307 : jne 0x422337 ; add byte ptr [rax - 0x7d], cl ; retf 0x4801
0x0000000000422c1a : jne 0x422ba1 ; ret
0x0000000000422f27 : jne 0x422f16 ; sub rax, 0x10 ; ret
0x000000000042600c : jne 0x425ff6 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000042b4a7 : jne 0x42b504 ; xor eax, eax ; ret
0x000000000042b477 : jne 0x42b528 ; xor eax, eax ; ret
0x000000000042b923 : jne 0x42b947 ; xor eax, eax ; vzeroupper ; ret
0x000000000042c05a : jne 0x42c065 ; vzeroupper ; ret
0x000000000042c154 : jne 0x42c066 ; ret
0x000000000042c29f : jne 0x42c069 ; vzeroupper ; ret
0x000000000042d90d : jne 0x42d937 ; xor eax, eax ; ret
0x000000000042cf01 : jne 0x42d93b ; xor eax, eax ; ret
0x000000000042cf29 : jne 0x42d947 ; xor eax, eax ; ret
0x0000000000444ce5 : jne 0x444c76 ; lea rax, [rdi + 3] ; ret
0x0000000000444cb7 : jne 0x444c76 ; lea rax, [rdi + 7] ; ret
0x0000000000444cb6 : jne 0x444c77 ; lea rax, [rdi + 7] ; ret
0x0000000000446444 : jne 0x446658 ; xor eax, eax ; ret
0x0000000000446649 : jne 0x446669 ; xor eax, eax ; ret
0x00000000004464f1 : jne 0x44666d ; xor eax, eax ; ret
0x0000000000446661 : jne 0x44666e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000446771 : jne 0x446762 ; ret
0x0000000000446821 : jne 0x446812 ; ret
0x0000000000446991 : jne 0x446986 ; lea rax, [rcx - 1] ; ret
0x0000000000446ae1 : jne 0x446ad6 ; sub rax, 1 ; ret
0x0000000000447ded : jne 0x447dd6 ; ret
0x0000000000447f54 : jne 0x447f3c ; vzeroupper ; ret
0x0000000000448117 : jne 0x4480f7 ; vzeroupper ; ret
0x00000000004485c2 : jne 0x4484f7 ; jmp 0x44859c
0x00000000004488ef : jne 0x44891b ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004496a7 : jne 0x4496bf ; add rsp, 0x28 ; ret
0x00000000004498d7 : jne 0x449921 ; add rsp, 0x58 ; ret
0x0000000000449928 : jne 0x449944 ; xor eax, eax ; syscall
0x00000000004499f8 : jne 0x449a17 ; mov eax, 1 ; syscall
0x0000000000449b35 : jne 0x449b9f ; mov eax, 0x48 ; syscall
0x0000000000449c67 : jne 0x449cb9 ; add rsp, 0x68 ; ret
0x0000000000449cc8 : jne 0x449ce7 ; mov eax, 3 ; syscall
0x000000000044a5d6 : jne 0x44a5ed ; add rsp, 0x28 ; ret
0x000000000044a80b : jne 0x44a826 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044a831 : jne 0x44a877 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044a859 : jne 0x44a897 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b376 : jne 0x44b39e ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b3a9 : jne 0x44b3f7 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b3d5 : jne 0x44b457 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b461 : jne 0x44b4c8 ; mov rdi, qword ptr [r13] ; call r12
0x000000000044b491 : jne 0x44b4f9 ; mov rdi, qword ptr [r13] ; call r12
0x000000000044be92 : jne 0x44be89 ; pop rdx ; pop r10 ; ret
0x000000000044be82 : jne 0x44be94 ; nop ; mov eax, 0xca ; syscall
0x000000000044f18f : jne 0x44f123 ; call rsi
0x000000000045ad4f : jne 0x45ad5c ; add rsp, 0x18 ; ret
0x000000000045af97 : jne 0x45afec ; add rsp, 0x148 ; ret
0x00000000004634c7 : jne 0x4634d3 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; retf 6
0x00000000004689b2 : jne 0x4689c5 ; add rsp, 0xd8 ; ret
0x0000000000470ac1 : jne 0x470ab3 ; ret
0x0000000000471d0c : jne 0x471d05 ; lea eax, [rdx + rdi] ; ret
0x00000000004737c3 : jne 0x4737ce ; xor rax, rax ; ret
0x0000000000473bc3 : jne 0x473bf8 ; mov rax, r8 ; vzeroupper ; ret
0x000000000047447c : jne 0x474473 ; ret
0x0000000000474483 : jne 0x47448e ; xor rax, rax ; ret
0x000000000047471b : jne 0x4746d6 ; mov rax, rdx ; ret
0x0000000000475767 : jne 0x4757cd ; mov eax, 0x101 ; syscall
0x000000000047589c : jne 0x4758e9 ; add rsp, 0x58 ; ret
0x000000000047591f : jne 0x475932 ; movzx eax, al ; add rsp, 0x58 ; ret
0x00000000004759ce : jne 0x4759f1 ; add rsp, 0x38 ; ret
0x000000000047e7ea : jne 0x47e790 ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000047e7d8 : jne 0x47e7b3 ; ret
0x000000000047f477 : jne 0x47f491 ; mov rax, qword ptr [rip + 0x23cf30] ; ret
0x000000000047f4cc : jne 0x47f4a3 ; ret
0x000000000047fd74 : jne 0x47fda8 ; call qword ptr [rip + 0x23cae4]
0x0000000000480f89 : jne 0x480f61 ; movsx eax, cl ; neg eax ; ret
0x0000000000481d7a : jne 0x481d89 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000481e75 : jne 0x481ea9 ; add rsp, 0x38 ; ret
0x0000000000481f35 : jne 0x481f64 ; add rsp, 0x68 ; ret
0x0000000000482096 : jne 0x4820d4 ; add rsp, 0x78 ; ret
0x0000000000482365 : jne 0x482394 ; add rsp, 0x68 ; ret
0x00000000004843a1 : jne 0x4843e1 ; leave ; ret
0x0000000000484841 : jne 0x48482d ; mov rax, rsi ; ret
0x00000000004848c5 : jne 0x4848a5 ; mov rax, rsi ; ret
0x000000000048502d : jne 0x48503a ; add rsp, 0x38 ; ret
0x0000000000485110 : jne 0x48512a ; add rsp, 0x38 ; ret
0x0000000000487826 : jne 0x487850 ; ret
0x0000000000487825 : jne 0x487851 ; ret
0x00000000004878db : jne 0x4878e2 ; pop rbx ; ret
0x000000000048846b : jne 0x488482 ; add rsp, 0x38 ; ret
0x0000000000488579 : jne 0x488593 ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000488660 : jne 0x48867b ; add rsp, 0x50 ; pop rbx ; ret
0x000000000048b049 : jne 0x48b06c ; xor eax, eax ; ret
0x000000000048b031 : jne 0x48b071 ; mov rax, qword ptr [rsi + 0xb0] ; ret
0x000000000048d260 : jne 0x48d281 ; mov rax, qword ptr [rax] ; ret
0x000000000048d2cf : jne 0x48d2da ; mov qword ptr [rax], rdx ; ret
0x000000000048d62e : jne 0x48d627 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048d8f8 : jne 0x48d8f1 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048dc33 : jne 0x48dc2c ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048e184 : jne 0x48e1a3 ; ret
0x000000000048e1a4 : jne 0x48e1bc ; mov eax, 8 ; ret
0x000000000048e1cf : jne 0x48e1fe ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048e1e9 : jne 0x48e202 ; xor eax, eax ; ret
0x000000000048f02f : jne 0x48f05e ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048f049 : jne 0x48f062 ; xor eax, eax ; ret
0x000000000048f5e9 : jne 0x48f5f3 ; ret
0x000000000048f604 : jne 0x48f613 ; ret
0x000000000048f834 : jne 0x48f843 ; ret
0x000000000048fab9 : jne 0x48fadc ; xor eax, eax ; ret
0x0000000000490085 : jne 0x490078 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004900d0 : jne 0x4900b0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000490215 : jne 0x4901fb ; pop rbx ; ret
0x0000000000490323 : jne 0x49030e ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490edd : jne 0x490ec6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000491061 : jne 0x491078 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000496579 : jne 0x49657c ; dec dword ptr [rdi + 0x73] ; sti ; call qword ptr [rdi]
0x00000000004a6ed7 : jne 0x4a6ea1 ; mov ecx, 0x5b92ac50 ; retf
0x00000000004a8e6b : jne 0x4a8e92 ; retf 0x32dd
0x00000000004b2e1d : jne 0x4b2e25 ; add al, ah ; add al, 0xfc ; jmp rdx
0x000000000042d1be : jno 0x42d1cd ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000432f81 : jno 0x432fb0 ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x00000000004385b0 : jno 0x4385b9 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00000000004387ea : jno 0x4387f3 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x0000000000438951 : jno 0x438962 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x0000000000438ab6 : jno 0x438b3a ; adc qword ptr [rdi - 8], rdi ; ret
0x0000000000482e64 : jno 0x482eb6 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004248c1 : jnp 0x4248f5 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004a7885 : jnp 0x4a7842 ; ret
0x00000000004a8882 : jnp 0x4a88e0 ; retf
0x00000000004a8c89 : jnp 0x4a8cd6 ; retf 0x99e0
0x00000000004a98e9 : jnp 0x4a992a ; retf
0x000000000042455f : jns 0x424567 ; add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x00000000004385b7 : jns 0x4385ba ; ret
0x00000000004387f1 : jns 0x4387f4 ; ret
0x0000000000438958 : jns 0x438963 ; ret
0x000000000043ede7 : jns 0x43edc2 ; retf 0xead3
0x000000000043ef37 : jns 0x43ef12 ; retf 0xead3
0x000000000043f087 : jns 0x43f062 ; retf 0xead3
0x000000000043f1d7 : jns 0x43f1b2 ; retf 0xead3
0x000000000043f327 : jns 0x43f302 ; retf 0xead3
0x000000000043f477 : jns 0x43f452 ; retf 0xead3
0x000000000043f5c7 : jns 0x43f5a2 ; retf 0xead3
0x000000000043f717 : jns 0x43f6f2 ; retf 0xead3
0x000000000043f867 : jns 0x43f842 ; retf 0xead3
0x000000000043f9b7 : jns 0x43f992 ; retf 0xead3
0x000000000043fb07 : jns 0x43fae2 ; retf 0xead3
0x000000000043fc57 : jns 0x43fc32 ; retf 0xead3
0x000000000043fda7 : jns 0x43fd82 ; retf 0xead3
0x000000000043fef7 : jns 0x43fed2 ; retf 0xead3
0x0000000000440047 : jns 0x440022 ; retf 0xead3
0x000000000044b3d6 : jns 0x44b426 ; mov edi, dword ptr [rbp] ; call r12
0x0000000000478b6a : jns 0x478b69 ; dec dword ptr [rax - 0x7d] ; ret
0x000000000048af1e : jns 0x48af2b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000048d1ce : jns 0x48d211 ; add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000048df3e : jns 0x48df4b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000048fb3e : jns 0x48fb4b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x00000000004a698e : jns 0x4a6924 ; ret 0xf869
0x00000000004a698d : jns 0x4a6925 ; ret 0xf869
0x0000000000414704 : jo 0x414755 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000414734 : jo 0x414785 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044a37d : jo 0x44a381 ; dec dword ptr [rax - 0x77] ; ret
0x000000000044c122 : jo 0x44c146 ; ret
0x0000000000453090 : jo 0x45309a ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000470b3a : jo 0x470b52 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000473e36 : jo 0x473e98 ; pop rbp ; pop r12 ; ret
0x000000000047404d : jo 0x4740af ; pop rbp ; pop r12 ; ret
0x0000000000482254 : jo 0x4822ba ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000492254 : jo 0x492257 ; dec dword ptr [rcx - 0x73] ; and byte ptr [rax - 0x7d], cl ; retf
0x0000000000493f8c : jo 0x493f9f ; stc ; inc eax ; and ecx, edi ; jmp rax
0x0000000000494024 : jo 0x49407c ; stc ; jmp rax
0x0000000000494290 : jo 0x49424a ; stc ; push qword ptr [rax] ; mov bl, 0xf9 ; call qword ptr [rax]
0x00000000004944b4 : jo 0x494497 ; stc ; inc dword ptr [rax - 0x24] ; stc ; jmp qword ptr [rax]
0x0000000000494958 : jo 0x494967 ; cli ; jmp rax
0x0000000000494ec0 : jo 0x494ef0 ; cli ; jmp rax
0x0000000000495fac : jo 0x496020 ; sti ; dec dword ptr [rax + 0x6b] ; sti ; jmp qword ptr [rax]
0x0000000000496561 : jo 0x496560 ; call rbx
0x000000000049658d : jo 0x49658c ; call rbx
0x0000000000496599 : jo 0x49659c ; dec ecx ; jae 0x4965a0 ; call qword ptr [rax]
0x00000000004a7a04 : jo 0x4a7a7e ; mov ebp, 0xfb67d10d ; ret
0x00000000004aea9c : jo 0x4aeaa3 ; ret 0xa01
0x00000000004af630 : jo 0x4af5ed ; clc ; call qword ptr [rax]
0x00000000004afaa0 : jo 0x4afa2a ; stc ; call qword ptr [rbx]
0x00000000004b3dbd : jo 0x4b3dc4 ; retf
0x0000000000421dca : jp 0x421dfa ; add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x0000000000457242 : jp 0x45723c ; ret
0x0000000000468a74 : jp 0x468a74 ; dec dword ptr [rax - 0x39] ; ret 0xffa0
0x00000000004a7b93 : jp 0x4a7b4d ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000004af94d : jp 0x4af94a ; call rsp
0x0000000000434caa : jrcxz 0x434ca5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434ca9 : jrcxz 0x434ca6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004377ca : jrcxz 0x4377c5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004377c9 : jrcxz 0x4377c6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044bee3 : jrcxz 0x44bea8 ; cmp r11d, 0xa ; je 0x44bef4 ; ret
0x00000000004682ff : jrcxz 0x468305 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x00000000004682fe : jrcxz 0x468306 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000047fb6e : jrcxz 0x47fbbc ; mov esi, ebx ; syscall
0x0000000000490324 : jrcxz 0x490386 ; pop rbp ; pop r12 ; ret
0x00000000004943a5 : jrcxz 0x4943a2 ; call rax
0x00000000004944c9 : jrcxz 0x4944c6 ; jmp rax
0x00000000004a67e5 : jrcxz 0x4a683f ; ret
0x00000000004a89ad : jrcxz 0x4a8970 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000004a9509 : jrcxz 0x4a94ed ; cmp al, 0x93 ; in al, dx ; retf 0xae32
0x00000000004aa8e8 : jrcxz 0x4aa893 ; std ; jmp rbx
0x000000000040e9c5 : js 0x40e9e9 ; call rdx
0x00000000004719d9 : js 0x471a11 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000047bd52 : js 0x47bd65 ; pop rbx ; ret
0x000000000048d486 : js 0x48d493 ; add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000048d493 : js 0x48d49f ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000490153 : js 0x4901ce ; ret 0x8b48
0x00000000004a4e29 : js 0x4a4e2a ; jmp qword ptr [rbx]
0x00000000004a88e8 : js 0x4a88bc ; movsxd rbx, dword ptr [rsi + rax*8 + 0x74] ; retf 0x93a2
0x00000000004a8881 : js 0x4a8901 ; pop rdx ; retf
0x00000000004ab288 : js 0x4ab289 ; std ; call rax
0x00000000004ab287 : js 0x4ab28a ; std ; call rax
0x00000000004ab286 : js 0x4ab28b ; std ; call rax
0x00000000004abce8 : js 0x4abc80 ; cmc ; call qword ptr [rdx]
0x00000000004af798 : js 0x4af7e4 ; stc ; jmp qword ptr [rbx]
0x00000000004b2e68 : js 0x4b2e78 ; cld ; jmp qword ptr [rax]
0x000000000046b303 : lahf ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000045586b : lahf ; add dword ptr [rax], eax ; add al, ch ; pushfq ; ret 0xfffa
0x0000000000456495 : lahf ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x000000000041f15f : lahf ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004a8ec3 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000047e7eb : lahf ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000043f8ed : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045ebaf : lahf ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004a87b2 : lahf ; or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004a8fb4 : lahf ; push -0x57d3205 ; call 0xffffffffab585ab6
0x00000000004a6fc0 : lahf ; push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x000000000044aaeb : lahf ; ret
0x0000000000418ddf : lahf ; ret 0x3949
0x0000000000418e92 : lahf ; ret 0x48e9
0x000000000044a9a1 : lahf ; ret 0x8545
0x00000000004a671d : lahf ; ret 0x871e
0x00000000004481a9 : lahf ; ret 0xea81
0x000000000048c841 : lahf ; ret 0xf45
0x000000000046fbcd : lahf ; ret 0xfffd
0x000000000041cc9d : lahf ; retf
0x000000000041f8f9 : lahf ; sub dword ptr [rax], eax ; ret
0x000000000043ff7d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000495833 : lcall [rax + 0x3e] ; sti ; dec dword ptr [rsi + rdi - 5] ; call rsp
0x00000000004a4e23 : lcall [rax + 0x74] ; std ; call qword ptr [rax]
0x00000000004a4e3b : lcall [rax + 0x74] ; std ; jmp qword ptr [rbx]
0x00000000004a4e37 : lcall [rax + 0x74] ; std ; lcall [rax + 0x74] ; std ; jmp qword ptr [rbx]
0x00000000004941cf : lcall [rax - 0x4e] ; stc ; jmp qword ptr [rax]
0x000000000041ac82 : lcall [rbx + 0x48] ; mov eax, edi ; pop rbp ; pop r12 ; ret
0x000000000044e24d : lcall [rbx + 0x5d] ; pop r12 ; jmp 0x45acc7
0x00000000004194e0 : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000412045 : lcall [rbx + 0x5d] ; pop r12 ; ret
0x0000000000411dcb : lcall [rbx + 0x5d] ; ret
0x000000000047fe16 : lcall [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x00000000004106fe : lcall [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x000000000049294f : lcall [rcx - 0x51] ; idiv edi ; retf
0x000000000049653f : lcall [rdi + 0x72] ; sti ; ljmp [rdx] ; jb 0x49654a ; jmp rdx
0x0000000000494bc7 : lcall [rsi + 0x2efffa34] ; xor al, 0xfa ; call rsp
0x0000000000494607 : lcall [rsi + rcx + 0xe2cfffa] ; cli ; call rdx
0x00000000004aa8df : lcall [rsi - 0x594b0003] ; std ; jmp rbx
0x0000000000435336 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000417b2b : lea eax, [r8 - 1] ; ret
0x000000000048af3c : lea eax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000042b4d4 : lea eax, [rax + rdi + 0x10] ; ret
0x000000000042b4e4 : lea eax, [rax + rdi + 0x20] ; ret
0x000000000042b4b4 : lea eax, [rax + rdi - 0x10] ; ret
0x0000000000417b2c : lea eax, [rax - 1] ; ret
0x000000000046ada5 : lea eax, [rbx] ; add byte ptr [rcx - 0x77], al ; retf
0x00000000004734ed : lea eax, [rcx + rsi] ; ret
0x0000000000446994 : lea eax, [rcx - 1] ; ret
0x0000000000444a0c : lea eax, [rdi + 0x10] ; ret
0x0000000000444a21 : lea eax, [rdi + 0x11] ; ret
0x0000000000444a3f : lea eax, [rdi + 0x12] ; ret
0x0000000000444a5f : lea eax, [rdi + 0x13] ; ret
0x0000000000444a82 : lea eax, [rdi + 0x14] ; ret
0x0000000000444aa1 : lea eax, [rdi + 0x15] ; ret
0x0000000000444ac1 : lea eax, [rdi + 0x16] ; ret
0x0000000000444ae1 : lea eax, [rdi + 0x17] ; ret
0x0000000000444b04 : lea eax, [rdi + 0x18] ; ret
0x0000000000444b29 : lea eax, [rdi + 0x19] ; ret
0x0000000000444b47 : lea eax, [rdi + 0x1a] ; ret
0x0000000000444b67 : lea eax, [rdi + 0x1b] ; ret
0x0000000000444b83 : lea eax, [rdi + 0x1c] ; ret
0x0000000000444ba3 : lea eax, [rdi + 0x1d] ; ret
0x0000000000444bc3 : lea eax, [rdi + 0x1e] ; ret
0x0000000000444be3 : lea eax, [rdi + 0x1f] ; ret
0x000000000044495d : lea eax, [rdi + 0xa] ; ret
0x000000000044497d : lea eax, [rdi + 0xb] ; ret
0x000000000044499f : lea eax, [rdi + 0xc] ; ret
0x00000000004449bf : lea eax, [rdi + 0xd] ; ret
0x00000000004449df : lea eax, [rdi + 0xe] ; ret
0x00000000004449f9 : lea eax, [rdi + 0xf] ; ret
0x00000000004448a7 : lea eax, [rdi + 1] ; ret
0x00000000004448ba : lea eax, [rdi + 2] ; ret
0x00000000004448c5 : lea eax, [rdi + 3] ; ret
0x00000000004448d8 : lea eax, [rdi + 4] ; ret
0x00000000004448ed : lea eax, [rdi + 5] ; ret
0x000000000044490b : lea eax, [rdi + 6] ; ret
0x0000000000444917 : lea eax, [rdi + 7] ; ret
0x000000000044492a : lea eax, [rdi + 8] ; ret
0x000000000044493f : lea eax, [rdi + 9] ; ret
0x000000000042b509 : lea eax, [rdi + rax + 0x10] ; ret
0x000000000042b519 : lea eax, [rdi + rax + 0x20] ; ret
0x000000000042b413 : lea eax, [rdi + rax + 0x30] ; ret
0x0000000000473735 : lea eax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x0000000000440477 : lea eax, [rdi + rax] ; ret
0x0000000000446cea : lea eax, [rdi + rcx] ; sub rax, rsi ; ret
0x00000000004733e9 : lea eax, [rdi + rsi] ; ret
0x0000000000444893 : lea eax, [rdi] ; ret
0x0000000000443e7d : lea eax, [rdx + 0xa] ; ret
0x0000000000443e9d : lea eax, [rdx + 0xb] ; ret
0x0000000000443ebf : lea eax, [rdx + 0xc] ; ret
0x0000000000443edf : lea eax, [rdx + 0xd] ; ret
0x0000000000443eff : lea eax, [rdx + 0xe] ; ret
0x0000000000443d8f : lea eax, [rdx + 0xf] ; ret
0x0000000000443db7 : lea eax, [rdx + 1] ; ret
0x0000000000443dcd : lea eax, [rdx + 2] ; ret
0x0000000000443de5 : lea eax, [rdx + 3] ; ret
0x0000000000443dfb : lea eax, [rdx + 4] ; ret
0x0000000000443e0d : lea eax, [rdx + 5] ; ret
0x0000000000443e2b : lea eax, [rdx + 6] ; ret
0x0000000000443d37 : lea eax, [rdx + 7] ; ret
0x0000000000443e3d : lea eax, [rdx + 8] ; ret
0x0000000000443e5d : lea eax, [rdx + 9] ; ret
0x0000000000417b1e : lea eax, [rdx + rdi] ; ret
0x00000000004482c3 : lea eax, [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000422ea6 : lea eax, [rdx - 0x10] ; ret
0x0000000000443da5 : lea eax, [rdx] ; ret
0x000000000042468a : lea eax, [rip + 0x23660] ; cmovne rax, rdx ; ret
0x000000000044d4b1 : lea eax, [rip + 0x26ce49] ; ret
0x000000000042455c : lea eax, [rip + 0x79ee] ; je 0x424533 ; ret
0x000000000046b42c : lea eax, [rsi + 8] ; mov qword ptr [rdx + 8], rax ; jmp 0x46b408
0x0000000000419167 : lea eax, [rsi] ; sub al, byte ptr [rax] ; ret
0x000000000045f831 : lea ebp, [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000040e051 : lea ebx, [rdi + rax] ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004a6fd1 : lea ebx, [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000473eeb : lea ecx, [rax + 1] ; call rbx
0x0000000000474086 : lea ecx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000472324 : lea ecx, [rbp - 0x40] ; mov rdi, r15 ; call r12
0x000000000042da20 : lea ecx, [rbx + rcx] ; jmp r9
0x000000000044412e : lea ecx, [rbx + rcx] ; jmp rcx
0x0000000000485a04 : lea ecx, [rdx + rcx*8] ; jmp 0x485a16
0x0000000000422eb6 : lea ecx, [rdx - 8] ; cmovne rax, rcx ; ret
0x0000000000475b17 : lea ecx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000472130 : lea ecx, [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000047204b : lea ecx, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x000000000047400e : lea ecx, [rsp + 0x20] ; call rbx
0x00000000004741fc : lea ecx, [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000473ee6 : lea ecx, [rsp + 0x38] ; lea rcx, [rax + 1] ; call rbx
0x000000000044c79f : lea edi, [rcx + rax + 0x20] ; jmp rdx
0x00000000004035c8 : lea edi, [rip + 0x2b88d2] ; call 8
0x0000000000418441 : lea edx, [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000485a00 : lea edx, [rax + 8] ; lea rcx, [rdx + rcx*8] ; jmp 0x485a1a
0x0000000000471ea7 : lea edx, [rax + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000042daf4 : lea edx, [rbx + rdx] ; jmp rdx
0x00000000004249b6 : lea edx, [rdx + rcx] ; jmp r10
0x000000000042dee8 : lea edx, [rdx - 0x40] ; jmp r9
0x00000000004245d3 : lea edx, [rip + 0x11407] ; cmovne rax, rdx ; ret
0x000000000042391f : lea edx, [rip + 0x1d62b] ; cmovne rax, rdx ; ret
0x00000000004247af : lea edx, [rip + 0x1df4b] ; cmovne rax, rdx ; ret
0x0000000000424544 : lea edx, [rip + 0x209c6] ; cmovne rax, rdx ; ret
0x00000000004238b8 : lea edx, [rip + 0x21332] ; cmovne rax, rdx ; ret
0x00000000004238ef : lea edx, [rip + 0x272b] ; cmovne rax, rdx ; ret
0x000000000047444a : lea edx, [rip + 0x30] ; cmovne rax, rdx ; ret
0x00000000004239f9 : lea edx, [rip + 0x50d1] ; cmovne rax, rdx ; ret
0x0000000000424873 : lea edx, [rip + 0xe697] ; cmovne rax, rdx ; ret
0x0000000000424733 : lea edx, [rip + 0xe7b7] ; cmovne rax, rdx ; ret
0x000000000048ddb1 : lea esi, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x000000000046b87d : lea esi, [rip + 0x24b59d] ; jmp rax
0x000000000044700f : lea esi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000047e306 : lea esp, [rbx + rdi*8 - 0x76b30001] ; ret 0x2948
0x00000000004249b5 : lea r10, [r10 + r9] ; jmp r10
0x000000000048ddb0 : lea r14, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x000000000042da1f : lea r9, [r11 + r9] ; jmp r9
0x0000000000472323 : lea r9, [rbp - 0x40] ; mov rdi, r15 ; call r12
0x000000000047212f : lea r9, [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000047204a : lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x000000000047400d : lea r9, [rsp + 0x20] ; call rbx
0x00000000004741fb : lea r9, [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000473ee5 : lea r9, [rsp + 0x38] ; lea rcx, [rax + 1] ; call rbx
0x000000000048af3b : lea rax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000042b4d3 : lea rax, [rax + rdi + 0x10] ; ret
0x000000000042b4e3 : lea rax, [rax + rdi + 0x20] ; ret
0x000000000042b4b3 : lea rax, [rax + rdi - 0x10] ; ret
0x00000000004734ec : lea rax, [rcx + rsi] ; ret
0x0000000000446993 : lea rax, [rcx - 1] ; ret
0x0000000000444a0b : lea rax, [rdi + 0x10] ; ret
0x0000000000444a20 : lea rax, [rdi + 0x11] ; ret
0x0000000000444a3e : lea rax, [rdi + 0x12] ; ret
0x0000000000444a5e : lea rax, [rdi + 0x13] ; ret
0x0000000000444a81 : lea rax, [rdi + 0x14] ; ret
0x0000000000444aa0 : lea rax, [rdi + 0x15] ; ret
0x0000000000444ac0 : lea rax, [rdi + 0x16] ; ret
0x0000000000444ae0 : lea rax, [rdi + 0x17] ; ret
0x0000000000444b03 : lea rax, [rdi + 0x18] ; ret
0x0000000000444b28 : lea rax, [rdi + 0x19] ; ret
0x0000000000444b46 : lea rax, [rdi + 0x1a] ; ret
0x0000000000444b66 : lea rax, [rdi + 0x1b] ; ret
0x0000000000444b82 : lea rax, [rdi + 0x1c] ; ret
0x0000000000444ba2 : lea rax, [rdi + 0x1d] ; ret
0x0000000000444bc2 : lea rax, [rdi + 0x1e] ; ret
0x0000000000444be2 : lea rax, [rdi + 0x1f] ; ret
0x000000000044495c : lea rax, [rdi + 0xa] ; ret
0x000000000044497c : lea rax, [rdi + 0xb] ; ret
0x000000000044499e : lea rax, [rdi + 0xc] ; ret
0x00000000004449be : lea rax, [rdi + 0xd] ; ret
0x00000000004449de : lea rax, [rdi + 0xe] ; ret
0x00000000004449f8 : lea rax, [rdi + 0xf] ; ret
0x00000000004448a6 : lea rax, [rdi + 1] ; ret
0x00000000004448b9 : lea rax, [rdi + 2] ; ret
0x00000000004448c4 : lea rax, [rdi + 3] ; ret
0x00000000004448d7 : lea rax, [rdi + 4] ; ret
0x00000000004448ec : lea rax, [rdi + 5] ; ret
0x000000000044490a : lea rax, [rdi + 6] ; ret
0x0000000000444916 : lea rax, [rdi + 7] ; ret
0x0000000000444929 : lea rax, [rdi + 8] ; ret
0x000000000044493e : lea rax, [rdi + 9] ; ret
0x000000000042b508 : lea rax, [rdi + rax + 0x10] ; ret
0x000000000042b518 : lea rax, [rdi + rax + 0x20] ; ret
0x000000000042b412 : lea rax, [rdi + rax + 0x30] ; ret
0x0000000000473734 : lea rax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x0000000000440476 : lea rax, [rdi + rax] ; ret
0x0000000000446ce9 : lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x00000000004733e8 : lea rax, [rdi + rsi] ; ret
0x0000000000444892 : lea rax, [rdi] ; ret
0x0000000000443e7c : lea rax, [rdx + 0xa] ; ret
0x0000000000443e9c : lea rax, [rdx + 0xb] ; ret
0x0000000000443ebe : lea rax, [rdx + 0xc] ; ret
0x0000000000443ede : lea rax, [rdx + 0xd] ; ret
0x0000000000443efe : lea rax, [rdx + 0xe] ; ret
0x0000000000443d8e : lea rax, [rdx + 0xf] ; ret
0x0000000000443db6 : lea rax, [rdx + 1] ; ret
0x0000000000443dcc : lea rax, [rdx + 2] ; ret
0x0000000000443de4 : lea rax, [rdx + 3] ; ret
0x0000000000443dfa : lea rax, [rdx + 4] ; ret
0x0000000000443e0c : lea rax, [rdx + 5] ; ret
0x0000000000443e2a : lea rax, [rdx + 6] ; ret
0x0000000000443d36 : lea rax, [rdx + 7] ; ret
0x0000000000443e3c : lea rax, [rdx + 8] ; ret
0x0000000000443e5c : lea rax, [rdx + 9] ; ret
0x0000000000422ea5 : lea rax, [rdx - 0x10] ; ret
0x0000000000443da4 : lea rax, [rdx] ; ret
0x000000000044d4b0 : lea rax, [rip + 0x26ce49] ; ret
0x000000000046b42b : lea rax, [rsi + 8] ; mov qword ptr [rdx + 8], rax ; jmp 0x46b409
0x000000000040e050 : lea rbx, [r15 + rax] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044412d : lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000473eea : lea rcx, [rax + 1] ; call rbx
0x0000000000474085 : lea rcx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000485a03 : lea rcx, [rdx + rcx*8] ; jmp 0x485a17
0x0000000000422eb5 : lea rcx, [rdx - 8] ; cmovne rax, rcx ; ret
0x0000000000475b16 : lea rcx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000044c79e : lea rdi, [rcx + rax + 0x20] ; jmp rdx
0x00000000004035c7 : lea rdi, [rip + 0x2b88d2] ; call 9
0x000000000042daf3 : lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004859ff : lea rdx, [rax + 8] ; lea rcx, [rdx + rcx*8] ; jmp 0x485a1b
0x000000000042dee7 : lea rdx, [rdx - 0x40] ; jmp r9
0x000000000046b87c : lea rsi, [rip + 0x24b59d] ; jmp rax
0x000000000044700e : lea rsi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000429f47 : leave ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042ae27 : leave ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004579da : leave ; call r15
0x000000000049659c : leave ; jae 0x49659d ; call qword ptr [rax]
0x0000000000446770 : leave ; jne 0x446763 ; ret
0x0000000000446820 : leave ; jne 0x446813 ; ret
0x0000000000446ae0 : leave ; jne 0x446ad7 ; sub rax, 1 ; ret
0x000000000047471a : leave ; jne 0x4746d7 ; mov rax, rdx ; ret
0x0000000000446ce8 : leave ; lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x000000000048aef0 : leave ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000046bd99 : leave ; movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000400be2 : leave ; ret
0x0000000000438ca3 : leave ; ret 5
0x00000000004a89b4 : leave ; retf
0x00000000004a7181 : leave ; retf 0x6ee8
0x00000000004a62a9 : leave ; retf 0xcccb
0x0000000000494525 : leave ; stc ; call rax
0x000000000047400a : leave ; xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x000000000049438f : ljmp [rax - 0x26] ; stc ; push qword ptr [rax] ; fdiv st(1), st(0) ; call qword ptr [rax]
0x00000000004928b7 : ljmp [rax] ; scasb al, byte ptr [rdi] ; idiv edi ; retf
0x000000000041021d : ljmp [rcx - 0x76b7ffd6] ; ret 0x8948
0x0000000000494e4f : ljmp [rdx + 0x29] ; cli ; call qword ptr [rax]
0x0000000000496543 : ljmp [rdx] ; jb 0x496546 ; jmp rdx
0x000000000049460b : ljmp [rsi + rcx] ; cli ; call rdx
0x0000000000494bcb : ljmp [rsi] ; xor al, 0xfa ; call rsp
0x000000000042c70e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047f2d7 : lock inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410080 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004460f0 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000004a88a6 : lodsb al, byte ptr [rsi] ; loop 0x4a8873 ; retf
0x000000000042a544 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004a965d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004b17e8 : lodsb al, byte ptr [rsi] ; pop rdi ; add byte ptr [rax], al ; xchg eax, esp ; xchg eax, esp ; cli ; call qword ptr [rcx]
0x000000000048f7b0 : lodsb al, byte ptr [rsi] ; retf
0x0000000000494349 : lodsb al, byte ptr [rsi] ; stc ; jmp qword ptr [rax]
0x00000000004b2164 : lodsb al, byte ptr [rsi] ; xchg eax, ebx ; sti ; jmp qword ptr [rax]
0x00000000004a6edb : lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x000000000046129f : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x00000000004a8c85 : lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x0000000000482fd2 : lodsd eax, dword ptr [rsi] ; ret
0x000000000041231d : loop 0x41231f ; add rdx, rcx ; jmp 0x412335
0x0000000000421b4e : loop 0x421ba1 ; mov esi, ebx ; mov rdi, r13 ; call 0x41dd99
0x000000000042600d : loop 0x426045 ; shr byte ptr [rcx], 0xc8 ; ret
0x0000000000434c1a : loop 0x434c15 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434c19 : loop 0x434c16 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043773a : loop 0x437735 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437739 : loop 0x437736 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044828f : loop 0x4482a9 ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000044c133 : loop 0x44c186 ; mov dword ptr [rax + 0x20], ecx ; mov byte ptr [rax + 0x28], 1 ; ret
0x00000000004728da : loop 0x4728f2 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000047594e : loop 0x475916 ; add dword ptr [rax + rax], edx ; mov eax, ecx ; syscall
0x0000000000487241 : loop 0x48724c ; add rdx, rax ; jmp 0x487255
0x000000000048d1e9 : loop 0x48d238 ; add esp, 0x18 ; ret
0x00000000004940b8 : loop 0x49404c ; stc ; jmp rdx
0x00000000004a88a7 : loop 0x4a8872 ; retf
0x00000000004a99fa : loop 0x4a9a4f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000434b8a : loope 0x434b85 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434b89 : loope 0x434b86 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004376aa : loope 0x4376a5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004376a9 : loope 0x4376a6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000444e1b : loope 0x444e25 ; add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x000000000044880e : loope 0x448805 ; ret
0x000000000044e18e : loope 0x44e19b ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000047491e : loope 0x474933 ; je 0x474944 ; ret
0x000000000047caeb : loope 0x47caf1 ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000482e67 : loope 0x482eb9 ; mov dword ptr [rdi], ecx ; ret
0x0000000000482e98 : loope 0x482eeb ; mov dword ptr [rdi - 8], ecx ; ret
0x0000000000482f0d : loope 0x482f60 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x0000000000490216 : loope 0x490275 ; ret
0x0000000000490ede : loope 0x490f40 ; pop rbp ; pop r12 ; ret
0x00000000004943a1 : loope 0x49439e ; call rax
0x00000000004944c5 : loope 0x4944c2 ; jmp rax
0x00000000004a89b1 : loope 0x4a8a33 ; pop rdx ; leave ; retf
0x000000000040f857 : loopne 0x40f8bd ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004129c3 : loopne 0x412a32 ; sub al, byte ptr [rax] ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000041ca9c : loopne 0x41cab0 ; xchg eax, esp ; ret 0x3de9
0x000000000041f898 : loopne 0x41f867 ; sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042241f : loopne 0x422485 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000042df41 : loopne 0x42df58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042df40 : loopne 0x42df59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e091 : loopne 0x42e0a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e090 : loopne 0x42e0a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e1e1 : loopne 0x42e1f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e1e0 : loopne 0x42e1f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e331 : loopne 0x42e348 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e330 : loopne 0x42e349 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e481 : loopne 0x42e498 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e480 : loopne 0x42e499 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e5d1 : loopne 0x42e5e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e5d0 : loopne 0x42e5e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e721 : loopne 0x42e738 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e720 : loopne 0x42e739 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e86f : loopne 0x42e886 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e86e : loopne 0x42e887 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e9c1 : loopne 0x42e9d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e9c0 : loopne 0x42e9d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042eb11 : loopne 0x42eb28 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042eb10 : loopne 0x42eb29 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ec61 : loopne 0x42ec78 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ec60 : loopne 0x42ec79 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042edb1 : loopne 0x42edc8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042edb0 : loopne 0x42edc9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ef01 : loopne 0x42ef18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ef00 : loopne 0x42ef19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f051 : loopne 0x42f068 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f050 : loopne 0x42f069 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f1a1 : loopne 0x42f1b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f1a0 : loopne 0x42f1b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430911 : loopne 0x430928 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430910 : loopne 0x430929 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430a61 : loopne 0x430a78 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430a60 : loopne 0x430a79 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430bb1 : loopne 0x430bc8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430bb0 : loopne 0x430bc9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430d01 : loopne 0x430d18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430d00 : loopne 0x430d19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430e51 : loopne 0x430e68 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430e50 : loopne 0x430e69 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430fa1 : loopne 0x430fb8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430fa0 : loopne 0x430fb9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004310f1 : loopne 0x431108 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004310f0 : loopne 0x431109 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000043123f : loopne 0x431256 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000043123e : loopne 0x431257 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431391 : loopne 0x4313a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431390 : loopne 0x4313a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004314e1 : loopne 0x4314f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004314e0 : loopne 0x4314f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431631 : loopne 0x431648 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431630 : loopne 0x431649 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431781 : loopne 0x431798 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431780 : loopne 0x431799 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004318d1 : loopne 0x4318e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004318d0 : loopne 0x4318e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431a21 : loopne 0x431a38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431a20 : loopne 0x431a39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431b71 : loopne 0x431b88 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431b70 : loopne 0x431b89 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004481fd : loopne 0x448217 ; movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000044bf48 : loopne 0x44bf5d ; cmp eax, 4 ; je 0x44bf57 ; ret
0x000000000044d264 : loopne 0x44d260 ; add cl, ch ; retf
0x000000000044e192 : loopne 0x44e1f5 ; pop r12 ; ret
0x0000000000454f2d : loopne 0x454fa8 ; jae 0x454ebe ; retf 0xb941
0x000000000046371f : loopne 0x4636ac ; ret
0x000000000046d88a : loopne 0x46d890 ; dec dword ptr [rcx + 0x63] ; ret
0x000000000046edb9 : loopne 0x46ee1d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046f595 : loopne 0x46f5f9 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000048283d : loopne 0x482846 ; sub eax, 1 ; ret
0x000000000048f5a4 : loopne 0x48f57c ; and al, byte ptr [rax] ; test eax, eax ; je 0x48f5b9 ; ret
0x0000000000493f94 : loopne 0x493fbf ; stc ; inc dword ptr [rax] ; and al, 0xf9 ; jmp qword ptr [rax]
0x000000000049406c : loopne 0x4940da ; stc ; call rax
0x0000000000494284 : loopne 0x494243 ; stc ; jmp rax
0x0000000000494288 : loopne 0x494249 ; stc ; jmp rax
0x00000000004944c4 : loopne 0x4944aa ; stc ; jmp rax
0x00000000004944c8 : loopne 0x4944b0 ; stc ; jmp rax
0x00000000004944cc : loopne 0x4944ba ; stc ; call qword ptr [rax - 0x2f000641]
0x00000000004944c1 : loopne 0x4944be ; jmp rax
0x00000000004950d0 : loopne 0x4950cb ; cli ; push rax ; cli ; call qword ptr [rax]
0x0000000000495170 : loopne 0x495172 ; cli ; inc dword ptr [rax] ; cli ; cli ; jmp qword ptr [rax]
0x00000000004a6fd4 : loopne 0x4a6fb4 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004b2e20 : loopne 0x4b2e29 ; cld ; jmp rdx
0x00000000004b2e1c : loopne 0x4b2e9a ; add byte ptr [rax], al ; loopne 0x4b2e2d ; cld ; jmp rdx
0x00000000004946d8 : mov ah, 0x13 ; cli ; inc dword ptr [rbx + rdx - 6] ; call rsp
0x00000000004a69ea : mov ah, 0x13 ; ret
0x000000000049215a : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000004918ba : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000495710 : mov ah, 0x3d ; sti ; jmp qword ptr [rdi]
0x00000000004b14f0 : mov ah, 0x5c ; add byte ptr [rax], al ; jl 0x4b1570 ; cli ; jmp rax
0x00000000004a6e90 : mov ah, 0xa5 ; ret
0x00000000004aa8e4 : mov ah, 0xa6 ; std ; jmp rbx
0x00000000004b076c : mov ah, 0xcd ; stc ; jmp qword ptr [rdx]
0x00000000004adcd1 : mov ah, 0xf6 ; call qword ptr [rdx]
0x00000000004942f9 : mov ah, 0xf9 ; call qword ptr [rax]
0x00000000004941d5 : mov ah, 0xf9 ; inc dword ptr [rax] ; mov dh, 0xf9 ; jmp rax
0x00000000004941f5 : mov ah, 0xf9 ; push rax ; mov ch, 0xf9 ; call rax
0x00000000004a67e4 : mov ah, bl ; push rsi ; ret
0x0000000000458442 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x3d], cl ; jmp rdx
0x000000000048b036 : mov al, 0 ; add byte ptr [rax], al ; ret
0x00000000004579d4 : mov al, 0 ; add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x0000000000494564 : mov al, 0x12 ; cli ; inc dword ptr [rax + 0x12] ; cli ; call rax
0x0000000000490e91 : mov al, 0x22 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000400dec : mov al, 0x2b ; add byte ptr [rsp + rcx - 0x7f], dh ; retf 0x440
0x0000000000494c74 : mov al, 0x36 ; cli ; inc dword ptr [rax + 0x36] ; cli ; call rax
0x0000000000494a5c : mov al, 0x39 ; cli ; inc dword ptr [rax + 0x39] ; cli ; call rax
0x0000000000494f8c : mov al, 0x45 ; cli ; inc eax ; cli ; call rax
0x0000000000494014 : mov al, 0x4d ; stc ; jmp qword ptr [rax]
0x00000000004b0fec : mov al, 0x57 ; add byte ptr [rax], al ; rcr byte ptr [rdi], 1 ; cli ; call qword ptr [rdi]
0x00000000004b40ec : mov al, 0x88 ; add byte ptr [rax], al ; push rax ; retf
0x00000000004941c0 : mov al, 0x95 ; stc ; inc dword ptr [rax - 0x6a] ; stc ; jmp rax
0x000000000044083f : mov al, 0xc5 ; std ; xlatb ; ret
0x000000000048d8df : mov al, 0xe8 ; retf
0x000000000047bd4c : mov al, 0xe9 ; cld ; inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x00000000004a8c96 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x000000000049477c : mov al, 0xf ; cli ; inc dword ptr [rax + 0xf] ; cli ; call rax
0x000000000040468f : mov al, 0xf ; retf
0x00000000004950c4 : mov al, 0xf2 ; cli ; inc eax ; cli ; call rax
0x00000000004950f0 : mov al, 0xf3 ; cli ; call rax
0x000000000049511c : mov al, 0xf7 ; cli ; inc eax ; idiv edx ; call rax
0x000000000049498c : mov al, 3 ; cli ; inc dword ptr [rax + 3] ; cli ; jmp rax
0x000000000046372b : mov al, byte ptr [rbx - 0x76ffffe6] ; ret 0xc389
0x0000000000442616 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000442634 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000443da0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000004425f0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000442600 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000435951 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004a8d20 : mov bh, 0x38 ; push 0xfd4cbe ; retf 0xf64
0x0000000000458034 : mov bh, 0x43 ; add al, 0x89 ; retf
0x0000000000457baf : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x0000000000444cb8 : mov bh, 0x48 ; lea eax, [rdi + 7] ; ret
0x00000000004a8ff8 : mov bh, 0x4e ; retf 0x9d7d
0x00000000004a7cc4 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00000000004a62a6 : mov bh, 0xc8 ; leave ; retf 0xcccb
0x000000000047f4ed : mov bh, 0xce ; and eax, dword ptr [rax] ; mov qword ptr [rsi], rax ; ret
0x0000000000413489 : mov bh, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x0000000000424735 : mov bh, 0xe7 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000049427d : mov bh, 0xf9 ; call qword ptr [rax]
0x000000000049425d : mov bh, 0xf9 ; inc dword ptr [rax - 0x47] ; stc ; jmp qword ptr [rax]
0x000000000041db93 : mov bh, 0xff ; dec dword ptr [rax + 0x39] ; retf 0x2a74
0x000000000048f7b7 : mov bh, 0xff ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000487e5c : mov bh, 0xff ; nop ; add rsp, 8 ; ret
0x00000000004a93d3 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000495015 : mov bh, dl ; inc dword ptr [rax - 0x74] ; cli ; jmp rax
0x00000000004465ae : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004a905b : mov bl, 0x29 ; retf 0xbf4b
0x000000000047471c : mov bl, 0x48 ; mov eax, edx ; ret
0x000000000045a442 : mov bl, 0x4c ; add edi, ebx ; jmp rdi
0x00000000004a8da3 : mov bl, 0x8e ; ret 0xdcd9
0x0000000000415c23 : mov bl, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x00000000004a9040 : mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004adbf9 : mov bl, 0xf6 ; call qword ptr [rsi]
0x0000000000494295 : mov bl, 0xf9 ; call qword ptr [rax]
0x0000000000494215 : mov bl, 0xf9 ; call rax
0x00000000004a69c1 : mov bx, 0xf32d ; retf
0x0000000000481110 : mov byte ptr [r8 + 0x15], r15b ; syscall
0x000000000044e44a : mov byte ptr [r8 - 0x7d], r9b ; ret 0x4830
0x0000000000481111 : mov byte ptr [rax + 0x15], bh ; syscall
0x000000000044c10a : mov byte ptr [rax + 0x28], 1 ; ret
0x00000000004a29cc : mov byte ptr [rax + rax], 0 ; enter 4, 0 ; retf 4
0x000000000044e44b : mov byte ptr [rax - 0x7d], cl ; ret 0x4830
0x00000000004b4089 : mov byte ptr [rax], al ; add ah, dl ; retf 0xfffc
0x000000000044bcaf : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000400db4 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b4088 : mov byte ptr [rax], r8b ; add ah, dl ; retf 0xfffc
0x00000000004af378 : mov byte ptr [rbp - 9], dl ; jmp qword ptr [rbx]
0x000000000046eca7 : mov byte ptr [rcx + 0xf], 0x4f ; ret
0x0000000000459f43 : mov byte ptr [rcx + rax - 0x3a], cl ; jmp rsi
0x000000000048aef4 : mov byte ptr [rcx + rax - 0x40], cl ; jmp rax
0x0000000000405dbf : mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045eac3 : mov byte ptr [rcx], cl ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000444a08 : mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x0000000000444378 : mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000444a7e : mov byte ptr [rdi + 0x14], dh ; lea rax, [rdi + 0x14] ; ret
0x00000000004443ce : mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000444b00 : mov byte ptr [rdi + 0x18], dh ; lea rax, [rdi + 0x18] ; ret
0x0000000000444450 : mov byte ptr [rdi + 0x18], dh ; ret
0x00000000004448b6 : mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x0000000000444296 : mov byte ptr [rdi + 2], dh ; ret
0x00000000004448d2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x00000000004442b2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000004442f3 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000004a9055 : mov byte ptr [rdi - 0x17ac8d3c], al ; mov bl, 0x29 ; retf 0xbf4b
0x000000000042f56b : mov byte ptr [rdi - 1], dl ; ret
0x0000000000412a70 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x0000000000438692 : mov byte ptr [rdi], cl ; ret
0x0000000000447f75 : mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000444890 : mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x0000000000444270 : mov byte ptr [rdi], dh ; ret
0x00000000004359c3 : mov byte ptr [rdi], dl ; ret
0x0000000000443dc9 : mov byte ptr [rdx + 2], al ; lea rax, [rdx + 2] ; ret
0x0000000000442619 : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000443df7 : mov byte ptr [rdx + 4], al ; lea rax, [rdx + 4] ; ret
0x0000000000442637 : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000443da2 : mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000004425f2 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000048ba60 : mov byte ptr [rip + 0x230749], 8 ; ret
0x0000000000400b06 : mov byte ptr [rip + 0x2ba7d3], 1 ; pop rbp ; ret
0x000000000041dd49 : mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x000000000048483f : mov byte ptr [rsi], al ; jne 0x48482f ; mov rax, rsi ; ret
0x00000000004848c3 : mov byte ptr [rsi], al ; jne 0x4848a7 ; mov rax, rsi ; ret
0x00000000004a67e2 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x00000000004a7b23 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004a87b6 : mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004a8ebf : mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004a986a : mov ch, 0xab ; ret
0x00000000004714b7 : mov ch, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x00000000004add71 : mov ch, 0xf6 ; call qword ptr [rsi]
0x00000000004941f9 : mov ch, 0xf9 ; call rax
0x0000000000494279 : mov ch, 0xf9 ; push qword ptr [rax] ; mov bh, 0xf9 ; call qword ptr [rax]
0x0000000000494299 : mov ch, 0xf9 ; push rax ; mov dh, 0xf9 ; call rax
0x00000000004a3d61 : mov ch, 0xfc ; jmp rsp
0x000000000042d286 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004029e7 : mov cl, 0x35 ; retf
0x00000000004a92c1 : mov cl, 0x3f ; retf
0x000000000045134b : mov cl, 0xf ; retf 0xd285
0x0000000000494291 : mov cl, 0xf9 ; push qword ptr [rax] ; mov bl, 0xf9 ; call qword ptr [rax]
0x00000000004942b1 : mov cl, 0xf9 ; push rax ; mov dl, 0xf9 ; call rax
0x000000000045ab47 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000043ae75 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x00000000004249b4 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000004a8c92 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000042c0d4 : mov cl, byte ptr [rsi + rdx - 1] ; sub eax, ecx ; ret
0x0000000000438690 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000047491b : mov cl, dl ; and cl, 0xf ; je 0x474947 ; ret
0x00000000004a8f4c : mov cs, edi ; ret 0x8b36
0x00000000004681b2 : mov cs, word ptr [rdx - 0x77000000] ; ror byte ptr [rcx - 0x77], cl ; ret
0x000000000043f3fe : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x0000000000444290 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000048496a : mov dh, 0 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000000000048e11f : mov dh, 0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000416832 : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412d1f : mov dh, 0 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004188c0 : mov dh, 0 ; ret
0x00000000004945ac : mov dh, 0x11 ; cli ; inc dword ptr [rsi + 0x11] ; cli ; call rsi
0x00000000004359c1 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000042bc24 : mov dh, 0x16 ; sub eax, edx ; ret
0x000000000040db04 : mov dh, 0x17 ; test dl, dl ; jne 0x40daea ; ret
0x000000000046678e : mov dh, 0x34 ; add dword ptr [rbp - 0x41f040be], ecx ; retf 0x53c
0x0000000000494aa4 : mov dh, 0x38 ; cli ; inc dword ptr [rsi + 0x38] ; cli ; call rsi
0x0000000000456948 : mov dh, 0x40 ; add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x000000000046ecbc : mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000045695e : mov dh, 0x40 ; add ecx, dword ptr [rax + 0x39] ; retf
0x000000000040da29 : mov dh, 0x40 ; or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xfff0
0x0000000000456972 : mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x00000000004695db : mov dh, 0x46 ; or al, 0x83 ; ret
0x0000000000446181 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000446171 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000446141 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000446161 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000446151 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000045e1b9 : mov dh, 0x47 ; or al, 0x83 ; ret
0x0000000000488107 : mov dh, 0x49 ; add al, 0x89 ; retf 0xeac0
0x000000000045437d : mov dh, 0x4e ; add dword ptr [rcx - 0x77], eax ; retf
0x00000000004543be : mov dh, 0x4e ; add eax, dword ptr [rcx - 0x77] ; retf
0x00000000004a7c82 : mov dh, 0x4e ; ret 0x474c
0x0000000000446185 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x0000000000446175 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x0000000000446145 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x0000000000446155 : mov dh, 0x56 ; sub eax, edx ; ret
0x0000000000463448 : mov dh, 0x67 ; or al, 0x89 ; ret 0xc689
0x0000000000405f5a : mov dh, 0x73 ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000040eec4 : mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000455486 : mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x000000000048be51 : mov dh, 0x78 ; add cl, byte ptr [rax - 0x7d] ; rol byte ptr [rdx], 0xe9 ; retf 0xfffc
0x0000000000455471 : mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x000000000045549b : mov dh, 0x78 ; add ecx, dword ptr [rax + 0x39] ; retf
0x00000000004557c4 : mov dh, 0x7a ; add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x0000000000478daf : mov dh, 0x87 ; adc eax, 0x89000003 ; ret 0xe8c0
0x0000000000475922 : mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x000000000048c166 : mov dh, 0xc0 ; movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x000000000046ea38 : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000004884bd : mov dh, 0xc0 ; neg eax ; ret
0x0000000000484d8a : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044e921 : mov dh, 0xc0 ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x0000000000448261 : mov dh, 0xc1 ; pop rbx ; ret
0x0000000000415632 : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a8ec4 : mov dh, 0xc7 ; ret 0xe71f
0x000000000048aeef : mov dh, 0xc9 ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000042bc4a : mov dh, 0xd2 ; sub eax, edx ; ret
0x000000000048c69f : mov dh, 0xdb ; movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x0000000000447089 : mov dh, 0xe ; mov byte ptr [rdi], cl ; ret
0x0000000000425d61 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042c0e4 : mov dh, 0xe ; sub eax, ecx ; ret
0x000000000049429d : mov dh, 0xf9 ; call rax
0x00000000004941d9 : mov dh, 0xf9 ; jmp rax
0x000000000040d565 : mov dh, 0xfa ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x0000000000416841 : mov dh, 2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412d31 : mov dh, 2 ; ret
0x000000000042c0e1 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042bc21 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000425d64 : mov dh, 7 ; sub eax, ecx ; ret
0x000000000044880c : mov dh, byte ptr [rcx - 0xd] ; ret
0x0000000000494d40 : mov dl, 0x2b ; cli ; jmp qword ptr [rdx]
0x000000000040ea6d : mov dl, 0x6b ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000413872 : mov dl, 0x6b ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000004131f8 : mov dl, 0x6b ; add byte ptr [rax - 0x77], cl ; ret 0x294d
0x000000000042483a : mov dl, 0x75 ; sub dword ptr [rax], eax ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004941f1 : mov dl, 0xf9 ; call qword ptr [rax]
0x0000000000494231 : mov dl, 0xf9 ; call rax
0x00000000004941d1 : mov dl, 0xf9 ; jmp qword ptr [rax]
0x00000000004942f5 : mov dl, 0xf9 ; push qword ptr [rax] ; mov ah, 0xf9 ; call qword ptr [rax]
0x0000000000494211 : mov dl, 0xf9 ; push rax ; mov bl, 0xf9 ; call rax
0x000000000042f5f0 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004625ad : mov ds, word ptr [rax + rax + 0x63490000] ; ret 0x8944
0x00000000004a92de : mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x0000000000438686 : mov dword ptr [r9 - 2], ecx ; ret
0x0000000000438671 : mov dword ptr [r9 - 4], ecx ; ret
0x000000000044c0a1 : mov dword ptr [rax + 0x10], ecx ; mov qword ptr [rax + 8], rdx ; ret
0x0000000000470af9 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000470b39 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000471b38 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000044c107 : mov dword ptr [rax + 0x20], ecx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000044c121 : mov dword ptr [rax + 0x20], esi ; ret
0x0000000000470afd : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000471bba : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000450b5f : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000450b62 : mov dword ptr [rax + 0x54], edx ; ret
0x0000000000417555 : mov dword ptr [rax + 8], 0 ; ret
0x000000000044c0a5 : mov dword ptr [rax + 8], edx ; ret
0x000000000046605d : mov dword ptr [rax], 0x16 ; mov eax, edx ; ret
0x000000000040f252 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x000000000041dd7a : mov dword ptr [rax], 0xc ; mov rax, rsi ; ret
0x0000000000484f4d : mov dword ptr [rax], edi ; pop rbx ; ret
0x0000000000484e9d : mov dword ptr [rax], edx ; add rsp, 8 ; ret
0x000000000041a882 : mov dword ptr [rax], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000484f41 : mov dword ptr [rax], edx ; pop rbx ; ret
0x000000000048d2d2 : mov dword ptr [rax], edx ; ret
0x0000000000471eab : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x000000000047c7c1 : mov dword ptr [rbp - 0x100], ebx ; call r10
0x000000000048110f : mov dword ptr [rbp - 0x78], eax ; mov eax, 0x15 ; syscall
0x00000000004035bc : mov dword ptr [rbp - 0x98], ecx ; call 8
0x000000000047d161 : mov dword ptr [rbp - 0xe0], ebx ; call r10
0x0000000000458832 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000412b47 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x0000000000481dbe : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000412f2f : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x000000000047faae : mov dword ptr [rbx + 0x10], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485c53 : mov dword ptr [rbx + 0x18], 0 ; jmp 0x485c27
0x0000000000481cf3 : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004884e5 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x00000000004885b9 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x000000000045addd : mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x0000000000416bed : mov dword ptr [rbx + 0x40], esp ; mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004166d1 : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000471d6a : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041836d : mov dword ptr [rbx + 0x60], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000414702 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000470b84 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000471a31 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000458847 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000485713 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000416b7c : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048a519 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000416bf0 : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000402e8e : mov dword ptr [rbx], ebp ; add byte ptr [rax + 1], cl ; retf 0x8948
0x0000000000412a45 : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000471b3b : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000410041 : mov dword ptr [rcx + 0x130], edx ; ret
0x0000000000400d6e : mov dword ptr [rcx + rax*2], 0x72f2a30f ; ret 0xfe83
0x0000000000450eb5 : mov dword ptr [rcx - 0x7d], 0x940f07fc ; ret 0x1f0f
0x0000000000438687 : mov dword ptr [rcx - 2], ecx ; ret
0x0000000000438672 : mov dword ptr [rcx - 4], ecx ; ret
0x0000000000438661 : mov dword ptr [rcx - 8], ecx ; ret
0x000000000044965a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000004192b4 : mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x0000000000444a1d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x11] ; ret
0x0000000000444a5b : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x0000000000444add : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x17] ; ret
0x00000000004443cb : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000044444d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000044438d : mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000444490 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000004444b0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000444471 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000444b43 : mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1a] ; ret
0x0000000000444493 : mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000004165b3 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000444b25 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x19] ; ret
0x0000000000444b63 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1b] ; ret
0x0000000000444475 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000004192b1 : mov dword ptr [rdi + 0x24], ebp ; mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x000000000047b765 : mov dword ptr [rdi + 0x300], eax ; ret
0x000000000047b737 : mov dword ptr [rdi + 0x308], eax ; ret
0x00000000004165e3 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000048d311 : mov dword ptr [rdi + 0x98], esi ; ret
0x0000000000444a9d : mov dword ptr [rdi + 0xe], ecx ; lea rax, [rdi + 0x15] ; ret
0x00000000004443ed : mov dword ptr [rdi + 0xe], ecx ; ret
0x0000000000444a3b : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x0000000000444abd : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x16] ; ret
0x00000000004443ab : mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000435805 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435648 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004358e8 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x0000000000435795 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004355d8 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000444907 : mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x0000000000435725 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435568 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004442d7 : mov dword ptr [rdi + 3], edx ; ret
0x00000000004448e9 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 5] ; ret
0x00000000004354f8 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004442c9 : mov dword ptr [rdi + 4], edx ; ret
0x000000000044499b : mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xc] ; ret
0x0000000000435488 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000044433b : mov dword ptr [rdi + 5], edx ; ret
0x00000000004449bb : mov dword ptr [rdi + 6], edx ; lea rax, [rdi + 0xd] ; ret
0x0000000000435418 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000044434b : mov dword ptr [rdi + 6], edx ; ret
0x0000000000444959 : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x00000000004449db : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xe] ; ret
0x00000000004353a8 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000444319 : mov dword ptr [rdi + 7], edx ; ret
0x000000000048478e : mov dword ptr [rdi + 8], eax ; mov eax, 2 ; ret
0x00000000004165b7 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000482fa4 : mov dword ptr [rdi + 8], ecx ; ret
0x0000000000444979 : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x000000000044493b : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 9] ; ret
0x0000000000484444 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000044430b : mov dword ptr [rdi + 8], edx ; ret
0x0000000000447e1b : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], cx ; ret
0x00000000004470b5 : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], si ; ret
0x0000000000447e13 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000447f95 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000004470a5 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x0000000000447e0b : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rcx ; ret
0x0000000000447097 : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rsi ; ret
0x000000000048d2bc : mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000042f2b5 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042f2f3 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000482f0f : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000042f63c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434e58 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f81c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434dd8 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fa0c : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434d58 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fbdd : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434cc9 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042fddd : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434c39 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042ffdd : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434ba9 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042f9bd : mov dword ptr [rdi - 2], ecx ; ret
0x000000000042f7d5 : mov dword ptr [rdi - 2], edx ; ret
0x000000000042f9b9 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x000000000042fd99 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f46f : mov dword ptr [rdi - 4], edx ; ret
0x000000000042fd96 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042ff96 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430196 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f2b9 : mov dword ptr [rdi - 8], ecx ; ret
0x000000000042f2f7 : mov dword ptr [rdi - 8], edx ; ret
0x000000000042f46c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f568 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042f4b4 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434ed8 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000482e94 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000482f9e : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00000000004687da : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004448d5 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x0000000000444927 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 8] ; ret
0x00000000004448b4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x0000000000444294 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000444905 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x00000000004442d5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000444957 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x0000000000444317 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000444977 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x0000000000444327 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000446de7 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000444338 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000444348 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000444358 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000004442c6 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000444308 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000446df3 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x00000000004353ac : mov dword ptr [rdi], ecx ; ret
0x0000000000447f8f : mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000004448a4 : mov dword ptr [rdi], edx ; lea rax, [rdi + 1] ; ret
0x00000000004448c2 : mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x0000000000444914 : mov dword ptr [rdi], edx ; lea rax, [rdi + 7] ; ret
0x00000000004356b4 : mov dword ptr [rdi], edx ; ret
0x000000000043866f : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000484616 : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000043865e : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000438683 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x000000000044709c : mov dword ptr [rdi], esi ; ret
0x000000000042ded2 : mov dword ptr [rdi], esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000412bc5 : mov dword ptr [rdx + 0x130], edi ; pop rbx ; ret
0x0000000000443e27 : mov dword ptr [rdx + 3], eax ; lea rax, [rdx + 6] ; ret
0x0000000000442657 : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000443e09 : mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x0000000000442649 : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x0000000000443ebb : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 0xc] ; ret
0x0000000000443e39 : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 8] ; ret
0x0000000000442669 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000443edb : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 0xd] ; ret
0x0000000000443e59 : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 9] ; ret
0x0000000000442679 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000443e79 : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xa] ; ret
0x0000000000443efb : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xe] ; ret
0x0000000000442689 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000046b430 : mov dword ptr [rdx + 8], eax ; jmp 0x46b404
0x0000000000443e99 : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xb] ; ret
0x0000000000443d8b : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xf] ; ret
0x00000000004425db : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000004184e0 : mov dword ptr [rdx + 8], eax ; xor eax, eax ; ret
0x00000000004049ab : mov dword ptr [rdx - 0x76b60001], edi ; ret 0x149
0x0000000000443db4 : mov dword ptr [rdx], eax ; lea rax, [rdx + 1] ; ret
0x0000000000443de2 : mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x0000000000443d34 : mov dword ptr [rdx], eax ; lea rax, [rdx + 7] ; ret
0x00000000004496ea : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000484618 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000484775 : mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x000000000044999a : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x0000000000442584 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000484f2d : mov dword ptr [rdx], eax ; pop rbx ; ret
0x0000000000418448 : mov dword ptr [rdx], eax ; ret
0x000000000049020f : mov dword ptr [rip + 0x22badb], ebx ; jne 0x490201 ; pop rbx ; ret
0x0000000000484a78 : mov dword ptr [rip + 0x2375ea], eax ; ret
0x000000000047f385 : mov dword ptr [rip + 0x23d025], eax ; ret
0x000000000045ac08 : mov dword ptr [rip + 0x25feaa], edx ; je 0x45ac21 ; ret
0x000000000044d4e6 : mov dword ptr [rip + 0x26b5cc], edx ; pop rbx ; ret
0x000000000041f8f6 : mov dword ptr [rip + 0x299f64], eax ; ret
0x000000000041981c : mov dword ptr [rip + 0x2a003e], eax ; ret
0x0000000000419317 : mov dword ptr [rip + 0x2a04d3], eax ; ret
0x000000000041932e : mov dword ptr [rip + 0x2a04d8], eax ; ret
0x00000000004192ef : mov dword ptr [rip + 0x2a04f3], eax ; ret
0x00000000004192cf : mov dword ptr [rip + 0x2a050b], eax ; ret
0x00000000004191c5 : mov dword ptr [rip + 0x2a067d], eax ; ret
0x00000000004191b5 : mov dword ptr [rip + 0x2a0685], eax ; ret
0x00000000004191a3 : mov dword ptr [rip + 0x2a0687], edx ; ret
0x0000000000419165 : mov dword ptr [rip + 0x2a068d], eax ; ret
0x0000000000419155 : mov dword ptr [rip + 0x2a06a5], eax ; ret
0x0000000000419344 : mov dword ptr [rip + 0x2a2a4a], eax ; ret
0x00000000004017e3 : mov dword ptr [rsi + 0x10], esi ; syscall
0x0000000000446df6 : mov dword ptr [rsi - 2], ecx ; ret
0x0000000000446de9 : mov dword ptr [rsi - 4], ecx ; ret
0x0000000000478951 : mov dword ptr [rsi], 0xffffffff ; xor eax, eax ; ret
0x000000000048d2fe : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000047f4f2 : mov dword ptr [rsi], eax ; ret
0x000000000047e839 : mov dword ptr [rsi], edi ; mov rax, rcx ; ret
0x000000000041caba : mov dword ptr [rsp + 0x10], ebx ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000041cb77 : mov dword ptr [rsp + 0x10], edx ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000045124c : mov dword ptr [rsp + 0x50], eax ; call 0x44d526
0x000000000041cabf : mov dword ptr [rsp + 8], eax ; call rcx
0x000000000040955b : mov dword ptr [rsp + 8], ecx ; call 0x406066
0x000000000041134e : mov dword ptr [rsp + 8], ecx ; mov rdi, r15 ; call rax
0x000000000041d0d4 : mov dword ptr [rsp + 8], edx ; call 0x419376
0x000000000041d0d3 : mov dword ptr [rsp + 8], r10d ; call 0x419377
0x0000000000489cc3 : mov dword ptr [rsp], eax ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000413422 : mov dword ptr [rsp], ecx ; mov rdi, rbx ; call rax
0x0000000000416735 : mov dword ptr [rsp], edi ; call 0x4129c5
0x000000000046605c : mov dword ptr fs:[rax], 0x16 ; mov eax, edx ; ret
0x000000000040f251 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x0000000000475a2c : mov dword ptr fs:[rax], edx ; xor eax, eax ; ret
0x0000000000449659 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000004496e9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000004470a4 : mov dword ptr ss:[rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000042f7d0 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000444280 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000400bdd : mov eax, 0 ; leave ; ret
0x00000000004482db : mov eax, 0x10 ; pop rbx ; ret
0x0000000000475769 : mov eax, 0x101 ; syscall
0x00000000004756e2 : mov eax, 0x106 ; syscall
0x000000000044a497 : mov eax, 0x12e ; xor edi, edi ; syscall
0x000000000047e009 : mov eax, 0x14 ; syscall
0x000000000044c174 : mov eax, 0x15 ; syscall
0x00000000004235d0 : mov eax, 0x16 ; ret
0x0000000000449640 : mov eax, 0x18 ; syscall
0x000000000044bdd3 : mov eax, 0x19 ; syscall
0x000000000044a730 : mov eax, 0x1c ; syscall
0x00000000004482e9 : mov eax, 0x20 ; pop rbx ; ret
0x0000000000488680 : mov eax, 0x26 ; syscall
0x00000000004853f0 : mov eax, 0x27 ; syscall
0x00000000004adbf4 : mov eax, 0x28000023 ; mov bl, 0xf6 ; call qword ptr [rsi]
0x00000000004482e2 : mov eax, 0x30 ; pop rbx ; ret
0x0000000000475610 : mov eax, 0x3f ; syscall
0x00000000004482f7 : mov eax, 0x40 ; pop rbx ; ret
0x00000000004a6ddb : mov eax, 0x45155e93 ; ret 0x591c
0x0000000000449b37 : mov eax, 0x48 ; syscall
0x0000000000449e1b : mov eax, 0x4f ; syscall
0x0000000000457c08 : mov eax, 0x5b000000 ; pop r12 ; ret
0x00000000004482f0 : mov eax, 0x60 ; pop rbx ; ret
0x000000000044be00 : mov eax, 0x63 ; syscall
0x0000000000475640 : mov eax, 0x66 ; syscall
0x0000000000475660 : mov eax, 0x68 ; syscall
0x0000000000475650 : mov eax, 0x6b ; syscall
0x0000000000475670 : mov eax, 0x6c ; syscall
0x00000000004482cd : mov eax, 0x80 ; pop rbx ; ret
0x0000000000489acf : mov eax, 0x89000003 ; fmul dword ptr [rbx + rcx*4 + 0x34] ; ret 0xf41
0x0000000000486ce4 : mov eax, 0x89fd8945 ; ret 0xe283
0x00000000004017dd : mov eax, 0x9e ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000044a700 : mov eax, 0xa ; syscall
0x000000000044a6d0 : mov eax, 0xb ; syscall
0x0000000000494301 : mov eax, 0xb9d0fff9 ; stc ; call rax
0x000000000040dbb2 : mov eax, 0xba ; syscall
0x00000000004942e1 : mov eax, 0xba20fff9 ; stc ; jmp qword ptr [rax]
0x0000000000474ee0 : mov eax, 0xc9 ; syscall
0x000000000044be85 : mov eax, 0xca ; syscall
0x000000000040dbe0 : mov eax, 0xe ; syscall
0x00000000004493b5 : mov eax, 0xe5 ; syscall
0x000000000040dbbe : mov eax, 0xea ; syscall
0x000000000045ae01 : mov eax, 0xf ; syscall
0x00000000004583cc : mov eax, 0xff514ee8 ; dec dword ptr [rcx + rcx*4 - 9] ; call rbx
0x0000000000412041 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411dc7 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000412f43 : mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000411d8b : mov eax, 0xffffffff ; ret
0x0000000000475ea1 : mov eax, 1 ; leave ; ret
0x00000000004845f5 : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x00000000004172b2 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048691d : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000047fe00 : mov eax, 1 ; pop rbx ; ret
0x000000000046873f : mov eax, 1 ; ret
0x00000000004499fa : mov eax, 1 ; syscall
0x0000000000474733 : mov eax, 2 ; ret
0x0000000000474991 : mov eax, 3 ; ret
0x0000000000449cca : mov eax, 3 ; syscall
0x000000000048e17f : mov eax, 4 ; jne 0x48e1a8 ; ret
0x00000000004749a1 : mov eax, 4 ; ret
0x00000000004496ce : mov eax, 4 ; syscall
0x00000000004749b1 : mov eax, 5 ; ret
0x000000000044971c : mov eax, 5 ; syscall
0x00000000004749c1 : mov eax, 6 ; ret
0x000000000047568e : mov eax, 6 ; syscall
0x00000000004749d1 : mov eax, 7 ; ret
0x00000000004482d4 : mov eax, 8 ; pop rbx ; ret
0x000000000044e970 : mov eax, 8 ; ret
0x0000000000449ac0 : mov eax, 8 ; syscall
0x000000000044a62c : mov eax, 9 ; syscall
0x00000000004118e1 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000471fc4 : mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000417498 : mov eax, dword ptr [rax + 0x68] ; test rax, rax ; jne 0x417499 ; ret
0x0000000000481bb1 : mov eax, dword ptr [rax + 8] ; ret
0x0000000000459240 : mov eax, dword ptr [rax + rbp*8] ; test rax, rax ; je 0x459252 ; call rax
0x000000000046bdda : mov eax, dword ptr [rax + rcx*8] ; mov ecx, 1 ; jmp rax
0x000000000045ac4f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x00000000004609ad : mov eax, dword ptr [rax + rdi*8] ; jmp rax
0x000000000048af39 : mov eax, dword ptr [rax] ; lea rax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000048af21 : mov eax, dword ptr [rax] ; mov qword ptr [r10], r8 ; ret
0x000000000047fe19 : mov eax, dword ptr [rax] ; ret
0x000000000047c700 : mov eax, dword ptr [rbp - 0xb8] ; add rax, r11 ; call rax
0x000000000047c521 : mov eax, dword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000041671d : mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000484f49 : mov eax, dword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000416e09 : mov eax, dword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000451249 : mov eax, dword ptr [rbx] ; mov qword ptr [rsp + 0x50], rax ; call 0x44d529
0x0000000000442654 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000442666 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000442676 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000442686 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000442696 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000043d26a : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000043eb42 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000443de0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x0000000000442620 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000443d31 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x0000000000442581 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000443db1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x0000000000442601 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000047cd06 : mov eax, dword ptr [rdi + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000471e1e : mov eax, dword ptr [rdi + 0x10] ; sar rdx, 2 ; sub eax, edx ; ret
0x0000000000418450 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000418478 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000490e4d : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x490e64 ; call rax
0x0000000000471fc1 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000004187a1 : mov eax, dword ptr [rdi + 0x68] ; ret
0x000000000048d291 : mov eax, dword ptr [rdi + 0x90] ; ret
0x000000000048d2e1 : mov eax, dword ptr [rdi + 0x98] ; ret
0x000000000048d321 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x000000000048d381 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x000000000048d371 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x000000000048d331 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x0000000000460eef : mov eax, dword ptr [rdi + rax*8] ; jmp rax
0x0000000000487e01 : mov eax, dword ptr [rdi] ; cmp rax, rsi ; je 0x487e18 ; ret
0x0000000000418445 : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000419341 : mov eax, dword ptr [rdi] ; nop ; mov dword ptr [rip + 0x2a2a4a], eax ; ret
0x000000000048f5e5 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f5f7 ; ret
0x000000000048f600 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f617 ; ret
0x000000000048f830 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f847 ; ret
0x000000000047e7ec : mov eax, dword ptr [rdx + 4] ; ret
0x0000000000448807 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x4487f9 ; ret
0x000000000043ae76 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000418431 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x418430 ; ret
0x00000000004855f0 : mov eax, dword ptr [rip + 0x2372ca] ; ret
0x000000000047f4eb : mov eax, dword ptr [rip + 0x23ceb7] ; mov qword ptr [rsi], rax ; ret
0x000000000047f47a : mov eax, dword ptr [rip + 0x23cf30] ; ret
0x0000000000457ab1 : mov eax, dword ptr [rip + 0x2643c1] ; ret
0x000000000044f5b1 : mov eax, dword ptr [rip + 0x26d371] ; ret
0x0000000000418781 : mov eax, dword ptr [rip + 0x2a0999] ; ret
0x000000000048e1d2 : mov eax, dword ptr [rsi + 0x10] ; ret
0x000000000048b061 : mov eax, dword ptr [rsi + 0xa8] ; ret
0x000000000048b034 : mov eax, dword ptr [rsi + 0xb0] ; ret
0x000000000048b051 : mov eax, dword ptr [rsi + 0xb8] ; ret
0x000000000048e1f1 : mov eax, dword ptr [rsi + 8] ; ret
0x000000000046bd9f : mov eax, dword ptr [rsi + rax*8] ; jmp rax
0x0000000000460f39 : mov eax, dword ptr [rsi + rax*8] ; mov esi, 1 ; jmp rax
0x0000000000461599 : mov eax, dword ptr [rsi + rax*8] ; xor esi, esi ; jmp rax
0x000000000047102f : mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000048d356 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x000000000044a916 : mov eax, dword ptr [rsp + 0x10] ; call rax
0x0000000000401163 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000004531bc : mov eax, dword ptr [rsp + 0x20] ; call rax
0x0000000000449d0a : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000040df2d : mov eax, dword ptr [rsp + 8] ; call rax
0x0000000000486d8f : mov eax, dword ptr [rsp] ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000048aaca : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000047fe18 : mov eax, dword ptr fs:[rax] ; ret
0x000000000041a9f0 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000046f953 : mov eax, eax ; jmp 0x46f925
0x0000000000449959 : mov eax, eax ; mov rsi, rbp ; mov edi, ebx ; xor eax, eax ; syscall
0x00000000004227cf : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000448312 : mov eax, eax ; ret
0x0000000000474d54 : mov eax, eax ; shr rax, 2 ; vzeroupper ; ret
0x0000000000449122 : mov eax, eax ; syscall
0x0000000000473b91 : mov eax, eax ; vzeroupper ; ret
0x00000000004100eb : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044b2f4 : mov eax, ebp ; pop rbx ; pop rbp ; jmp rax
0x0000000000410203 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040fcbe : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411d32 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000041285d : mov eax, ebp ; syscall
0x0000000000484583 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000488577 : mov eax, ebx ; jne 0x488595 ; add rsp, 0x40 ; pop rbx ; ret
0x000000000048865e : mov eax, ebx ; jne 0x48867d ; add rsp, 0x50 ; pop rbx ; ret
0x0000000000410598 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410375 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044a530 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000412b4b : mov eax, ebx ; pop rbx ; ret
0x0000000000484447 : mov eax, ecx ; adc eax, eax ; ret
0x0000000000465f45 : mov eax, ecx ; ret
0x000000000040dbab : mov eax, ecx ; syscall
0x0000000000412a43 : mov eax, edi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041ac85 : mov eax, edi ; pop rbp ; pop r12 ; ret
0x0000000000412a74 : mov eax, edi ; ret
0x000000000041a885 : mov eax, edx ; add rsp, 8 ; ret
0x0000000000410700 : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046600e : mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000004107a9 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040ff91 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000448316 : mov eax, edx ; pop rbx ; ret
0x000000000041a891 : mov eax, edx ; ret
0x000000000040125a : mov eax, edx ; syscall
0x00000000004827f7 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x0000000000413d1a : mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000046fc84 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041dd4d : mov eax, esi ; pop rbx ; ret
0x000000000041dd81 : mov eax, esi ; ret
0x0000000000449112 : mov eax, esi ; syscall
0x000000000046edb8 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041285c : mov eax, r13d ; syscall
0x000000000046f952 : mov eax, r8d ; jmp 0x46f926
0x0000000000449121 : mov eax, r8d ; syscall
0x0000000000465f44 : mov eax, r9d ; ret
0x00000000004125fe : mov eax, r9d ; syscall
0x00000000004a8cd4 : mov ebp, 0x63b1101 ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x0000000000494249 : mov ebp, 0xbf50fff9 ; stc ; jmp rax
0x0000000000494229 : mov ebp, 0xbf80fff9 ; stc ; call qword ptr [rax]
0x000000000049f1c4 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00000000004a629d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x0000000000473358 : mov ebp, 0xf80148c0 ; ret
0x00000000004735dc : mov ebp, 0xf80148c6 ; ret
0x00000000004a7a06 : mov ebp, 0xfb67d10d ; ret
0x000000000046928e : mov ebp, 0xfffff730 ; call rax
0x000000000045dd5c : mov ebp, 0xfffff758 ; call rax
0x000000000046c289 : mov ebp, 0xfffffae8 ; add byte ptr [rcx - 0x77], al ; ret 0x1674
0x0000000000465165 : mov ebp, 0xffffff40 ; call rax
0x0000000000412857 : mov ebp, 0xffffff7c ; mov eax, r13d ; syscall
0x000000000048d7b3 : mov ebp, dword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004004cb : mov ebp, dword ptr [rbx] ; add byte ptr [rsi - 0x70], ah ; ret
0x00000000004827fd : mov ebp, ecx ; nop ; jmp rdx
0x00000000004a8a24 : mov ebx, 0x1b5c347e ; jmp 0x4a89fc
0x0000000000435097 : mov ebx, 0x46f00ff2 ; retf
0x000000000042fbf4 : mov ebx, 0x4e6f0ff3 ; retf
0x000000000042fc12 : mov ebx, 0x4f7f0ff3 ; retf
0x000000000044bee4 : mov ebx, 0xafb8341 ; je 0x44bef3 ; ret
0x0000000000494265 : mov ebx, 0xbd20fff9 ; stc ; jmp qword ptr [rax]
0x00000000004a629b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x000000000044a42d : mov ebx, 0xe8ff894c ; retf 0x2ae
0x000000000042491b : mov ebx, 0xf480001 ; ret 0x66c3
0x00000000004a9044 : mov ebx, dword ptr [rdx] ; retf 0x7272
0x000000000045a646 : mov ebx, edi ; test rax, rax ; je 0x45a656 ; call rax
0x00000000004754d0 : mov ebx, esi ; sub rsp, 8 ; syscall
0x000000000047fb6d : mov ebx, esp ; mov rsi, rbx ; syscall
0x000000000040dba6 : mov ecx, 0x27 ; mov eax, ecx ; syscall
0x000000000047578c : mov ecx, 0x48000000 ; add esp, 0x78 ; ret
0x00000000004a6ed9 : mov ecx, 0x5b92ac50 ; retf
0x00000000004a89ae : mov ecx, 0x7ce1a201 ; pop rdx ; leave ; retf
0x0000000000494281 : mov ecx, 0xbae0fff9 ; stc ; jmp rax
0x0000000000494261 : mov ecx, 0xbb20fff9 ; stc ; jmp qword ptr [rax]
0x0000000000494305 : mov ecx, 0xbbd0fff9 ; stc ; call rax
0x00000000004759f0 : mov ecx, 0xc ; mov eax, ecx ; syscall
0x000000000046bddd : mov ecx, 1 ; jmp rax
0x000000000043866c : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000042da1e : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x0000000000471f9b : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000043ae73 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004a8e64 : mov ecx, dword ptr [rsi + rdi*2 + 0xaaed8a9] ; jne 0x4a8e99 ; retf 0x32dd
0x000000000042fd93 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042ff93 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430193 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004442b0 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000004442f1 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000435803 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435793 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435723 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435645 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004355d5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435565 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004354f5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435485 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435415 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004353a5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004358e5 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000444291 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000481ca7 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000481c35 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x00000000004725d1 : mov ecx, eax ; jmp 0x47259b
0x000000000044e8ab : mov ecx, ebp ; call rbx
0x0000000000417230 : mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000447072 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000041726a : mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000474355 : mov ecx, esi ; call rbx
0x000000000040e5b2 : mov ecx, esi ; mov rdx, r15 ; call 0x45b067
0x000000000048c65c : mov edi, 0x148015b ; retf
0x000000000045f5aa : mov edi, 0x440f48c0 ; ret 0xae9
0x0000000000400a8c : mov edi, 0x6babd0 ; jmp rax
0x000000000044e275 : mov edi, 0xae740026 ; call 0x45ad17
0x000000000049422d : mov edi, 0xb210fff9 ; stc ; call rax
0x00000000004941ed : mov edi, 0xb250fff9 ; stc ; call qword ptr [rax]
0x00000000004944d1 : mov edi, 0xc3d0fff9 ; stc ; jmp qword ptr [rax]
0x0000000000403a63 : mov edi, 0xdf8948ff ; call 0x4004c7
0x00000000004497a4 : mov edi, 0xffffff9c ; syscall
0x000000000048cfe6 : mov edi, 1 ; call r14
0x000000000048cf3c : mov edi, 1 ; call rax
0x000000000048dcac : mov edi, 1 ; jmp rax
0x000000000040e9c4 : mov edi, dword ptr [rax + 0x20] ; call rdx
0x000000000044ad4c : mov edi, dword ptr [rbp - 0x58] ; mov r12d, r14d ; call r15
0x0000000000412856 : mov edi, dword ptr [rbp - 0x84] ; mov eax, r13d ; syscall
0x000000000045dd5b : mov edi, dword ptr [rbp - 0x8a8] ; call rax
0x000000000046928d : mov edi, dword ptr [rbp - 0x8d0] ; call rax
0x0000000000465164 : mov edi, dword ptr [rbp - 0xc0] ; call rax
0x000000000048d631 : mov edi, dword ptr [rbp - 8] ; leave ; ret
0x000000000044a834 : mov edi, dword ptr [rbp] ; call r12
0x000000000040df29 : mov edi, dword ptr [rbp] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044a80e : mov edi, dword ptr [rbx] ; call r12
0x000000000047c8ef : mov edi, dword ptr [rbx] ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000047f4c6 : mov edi, dword ptr [rdi + 8] ; test rdi, rdi ; jne 0x47f4a9 ; ret
0x00000000004a7cc6 : mov edi, dword ptr [rdx] ; ret
0x000000000048844f : mov edi, dword ptr [rsp + 0x10] ; call 0x484e86
0x000000000048ef0e : mov edi, dword ptr [rsp + 0x10] ; call r14
0x00000000004757ee : mov edi, dword ptr [rsp + 0x18] ; mov eax, 0x101 ; syscall
0x00000000004826d4 : mov edi, dword ptr [rsp + 0x18] ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000450f85 : mov edi, dword ptr [rsp + 0x20] ; call r15
0x0000000000450e50 : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000451861 : mov edi, dword ptr [rsp + 0x30] ; call r14
0x0000000000451a39 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x0000000000451d23 : mov edi, dword ptr [rsp + 0x38] ; call r12
0x000000000045235b : mov edi, dword ptr [rsp + 0x38] ; call r14
0x000000000045531f : mov edi, dword ptr [rsp + 0x38] ; call r15
0x0000000000451569 : mov edi, dword ptr [rsp + 0x38] ; call rbx
0x0000000000451275 : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000045379a : mov edi, dword ptr [rsp + 0x40] ; call r15
0x0000000000455f46 : mov edi, dword ptr [rsp + 0x40] ; call rbx
0x00000000004531b7 : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000449bb1 : mov edi, dword ptr [rsp + 0xc] ; mov eax, 0x48 ; syscall
0x000000000040115e : mov edi, dword ptr [rsp + 0xc] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000416e3b : mov edi, dword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000044a911 : mov edi, dword ptr [rsp + 8] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000416746 : mov edi, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000048ddfc : mov edi, dword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x0000000000403a1b : mov edi, eax ; call 0x40043c
0x00000000004039f3 : mov edi, eax ; call 0x4004c4
0x0000000000423634 : mov edi, eax ; call rcx
0x000000000042397c : mov edi, eax ; jmp 0x40043c
0x000000000040dbb0 : mov edi, eax ; mov eax, 0xba ; syscall
0x00000000004741c8 : mov edi, ebp ; add r15, r12 ; call 0x400497
0x0000000000421b53 : mov edi, ebp ; call 0x41dd94
0x0000000000489b6e : mov edi, ebp ; call qword ptr [r14]
0x0000000000489c42 : mov edi, ebp ; call qword ptr [rax]
0x0000000000489d1e : mov edi, ebp ; call qword ptr [rcx]
0x000000000045827c : mov edi, ebp ; call r12
0x000000000048ecec : mov edi, ebp ; call r14
0x00000000004229b6 : mov edi, ebp ; call rax
0x0000000000474201 : mov edi, ebp ; call rbx
0x000000000044a62a : mov edi, ebp ; mov eax, 9 ; syscall
0x00000000004125fc : mov edi, ebp ; mov eax, r9d ; syscall
0x0000000000474352 : mov edi, ebp ; mov r9, r14 ; call rbx
0x000000000040dfb9 : mov edi, ebp ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000403a66 : mov edi, ebx ; call 0x4004c4
0x000000000044ebae : mov edi, ebx ; call r14
0x0000000000413426 : mov edi, ebx ; call rax
0x0000000000449a2e : mov edi, ebx ; mov eax, 1 ; syscall
0x0000000000449cec : mov edi, ebx ; mov edx, eax ; mov eax, 3 ; syscall
0x00000000004167dd : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x0000000000470eaf : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000044995e : mov edi, ebx ; xor eax, eax ; syscall
0x0000000000472328 : mov edi, edi ; call r12
0x0000000000411353 : mov edi, edi ; call rax
0x000000000044f18b : mov edi, edi ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x00000000004848c1 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x4848a9 ; mov rax, rsi ; ret
0x0000000000449110 : mov edi, edx ; mov eax, esi ; syscall
0x000000000044911f : mov edi, edx ; mov eax, r8d ; syscall
0x0000000000413a57 : mov edi, esi ; call 0x4004ac
0x00000000004583d3 : mov edi, esi ; call rbx
0x00000000004586b1 : mov edi, esi ; call rdx
0x000000000041d0d1 : mov edi, esi ; mov dword ptr [rsp + 8], r10d ; call 0x419379
0x000000000048dd04 : mov edi, esp ; call r15
0x0000000000472050 : mov edi, esp ; call rbx
0x0000000000449e19 : mov edi, esp ; mov eax, 0x4f ; syscall
0x00000000004125fb : mov edi, r13d ; mov eax, r9d ; syscall
0x0000000000448216 : mov edx, 0 ; cmove rax, rdx ; pop rbx ; ret
0x0000000000412bc6 : mov edx, 0x130 ; pop rbx ; ret
0x00000000004558ad : mov edx, 0x180 ; call 0x401b17
0x000000000045586a : mov edx, 0x19f ; call 0x401b17
0x0000000000455889 : mov edx, 0x1be ; call 0x401b17
0x00000000004558d4 : mov edx, 0x22f ; call 0x401b17
0x0000000000455014 : mov edx, 0x305 ; call 0x401b17
0x000000000045584b : mov edx, 0x309 ; call 0x401b17
0x0000000000435017 : mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000042fdf4 : mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x000000000042fe12 : mov edx, 0x4f7f0ff3 ; retf 0x894c
0x00000000004049ac : mov edx, 0x8949ffff ; ret 0x149
0x0000000000454dae : mov edx, 0x89fffff3 ; retf 0xe283
0x00000000004942e5 : mov edx, 0xbc20fff9 ; stc ; jmp qword ptr [rax]
0x0000000000494285 : mov edx, 0xbce0fff9 ; stc ; jmp rax
0x00000000004ab764 : mov edx, 0xc5fffe10 ; adc dh, bh ; call rax
0x0000000000490212 : mov edx, 0xe1750022 ; pop rbx ; ret
0x000000000048683c : mov edx, 0xe8000000 ; retf
0x000000000048be71 : mov edx, 0xfc0c7 ; add byte ptr [rax], al ; syscall
0x0000000000450c27 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000047e76c : mov edx, 1 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000045aec4 : mov edx, 8 ; mov eax, ecx ; syscall
0x00000000004586aa : mov edx, dword ptr [rbp - 0x98] ; mov rdi, r14 ; call rdx
0x000000000048de00 : mov edx, dword ptr [rbp] ; call r12
0x0000000000484f29 : mov edx, dword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000043eb3f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043d26d : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000484f3d : mov edx, dword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000048ece9 : mov edx, dword ptr [rdi] ; mov rdi, r13 ; call r14
0x00000000004442d2 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000004442c3 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000444313 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000444323 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000042f7d1 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000042fb90 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f421 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004448c0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x0000000000435870 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000444911 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x00000000004356b1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000004448a1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x0000000000444281 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004826d9 : mov edx, dword ptr [rsp + 0x10] ; call rdx
0x000000000048cf39 : mov edx, dword ptr [rsp] ; mov edi, 1 ; call rax
0x0000000000423639 : mov edx, eax ; jmp 0x4235ec
0x000000000045649a : mov edx, eax ; jmp 0x456451
0x00000000004565d1 : mov edx, eax ; jmp 0x456590
0x000000000045689f : mov edx, eax ; jmp 0x456856
0x0000000000456916 : mov edx, eax ; jmp 0x4568cd
0x000000000046f4b2 : mov edx, eax ; jmp 0x46f480
0x0000000000475f3e : mov edx, eax ; jmp 0x475f32
0x000000000040dbbc : mov edx, eax ; mov eax, 0xea ; syscall
0x0000000000449cee : mov edx, eax ; mov eax, 3 ; syscall
0x0000000000413a8e : mov edx, ebp ; add rbp, r13 ; call 0x4004af
0x0000000000489b69 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x0000000000489c3d : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489d19 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489b23 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call rax
0x00000000004756e0 : mov edx, ecx ; mov eax, 0x106 ; syscall
0x000000000044bdd1 : mov edx, ecx ; mov eax, 0x19 ; syscall
0x000000000040e5b5 : mov edx, edi ; call 0x45b064
0x0000000000403a18 : mov edx, edi ; mov rdi, rax ; call 0x40043f
0x0000000000447d38 : mov edx, edi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000047594d : mov edx, esp ; mov esi, 0x5401 ; mov eax, ecx ; syscall
0x000000000040dbbb : mov edx, r8d ; mov eax, 0xea ; syscall
0x0000000000455d49 : mov es, edx ; add eax, 0x29480000 ; ret 0x349
0x0000000000453292 : mov es, word ptr [rax + rax] ; add bh, dh ; ret 0
0x0000000000475b19 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x0000000000460dd4 : mov esi, 0x3d8d48c7 ; ret
0x0000000000450b5c : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004a8c86 : mov esi, 0x497b96cc ; retf 0x99e0
0x000000000047594f : mov esi, 0x5401 ; mov eax, ecx ; syscall
0x00000000004a8d23 : mov esi, 0x6400fd4c ; retf 0xf64
0x00000000004a6e0a : mov esi, 0x6a25743d ; scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000044bf68 : mov esi, 0x80 ; syscall
0x000000000044fd12 : mov esi, 0x83480147 ; ret
0x000000000047e879 : mov esi, 0xaf0f4907 ; retf 0x14c
0x000000000046479e : mov esi, 0xc08349c8 ; add dword ptr [rcx], edi ; retf
0x00000000004a629e : mov esi, 0xc2c1c0bf ; ret
0x00000000004481a4 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x0000000000460f3c : mov esi, 1 ; jmp rax
0x000000000046f01c : mov esi, 1 ; mov rdi, rbx ; call rax
0x000000000044a7a8 : mov esi, 2 ; jmp rax
0x000000000044a7bb : mov esi, 3 ; pop rbp ; pop r12 ; jmp rax
0x0000000000459144 : mov esi, dword ptr [rax + rsi*8] ; test rsi, rsi ; je 0x459156 ; call rsi
0x000000000048d62d : mov esi, dword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000044f18e : mov esi, dword ptr [rbp - 0x70] ; call rsi
0x000000000048ef0b : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x000000000048ddb5 : mov esi, dword ptr [rsi] ; call r12
0x00000000004470a3 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000044e8a6 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x00000000004229b1 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000451a34 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000451564 : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000455f41 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000004203c9 : mov esi, dword ptr [rsp + 0x68] ; call rax
0x0000000000400589 : mov esi, eax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400598 ; ret
0x0000000000449a2c : mov esi, ebp ; mov edi, ebx ; mov eax, 1 ; syscall
0x000000000044995c : mov esi, ebp ; mov edi, ebx ; xor eax, eax ; syscall
0x0000000000413a54 : mov esi, ebp ; mov rdi, r14 ; call 0x4004af
0x0000000000423631 : mov esi, ebp ; mov rdi, rax ; call rcx
0x0000000000421fe2 : mov esi, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000423977 : mov esi, ebp ; pop rbx ; pop rbp ; mov rdi, rax ; jmp 0x400441
0x00000000004125f9 : mov esi, ebx ; mov edi, r13d ; mov eax, r9d ; syscall
0x0000000000421b50 : mov esi, ebx ; mov rdi, r13 ; call 0x41dd97
0x000000000047fb70 : mov esi, ebx ; syscall
0x000000000044a495 : mov esi, edi ; mov eax, 0x12e ; xor edi, edi ; syscall
0x00000000004497a2 : mov esi, edi ; mov edi, 0xffffff9c ; syscall
0x000000000048dcaa : mov esi, edi ; mov edi, 1 ; jmp rax
0x000000000045dd58 : mov esi, edi ; mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x000000000047e7d3 : mov esi, edx ; cmp rcx, rsi ; jne 0x47e7b8 ; ret
0x00000000004496cc : mov esi, edx ; mov eax, 4 ; syscall
0x000000000044971a : mov esi, edx ; mov eax, 5 ; syscall
0x000000000047568c : mov esi, edx ; mov eax, 6 ; syscall
0x0000000000465161 : mov esi, esi ; mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x000000000048dd01 : mov esi, esi ; mov rdi, r12 ; call r15
0x0000000000489b6c : mov esi, esp ; mov edi, ebp ; call qword ptr [r14]
0x0000000000489c40 : mov esi, esp ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489d1c : mov esi, esp ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489b26 : mov esi, esp ; mov edi, ebp ; call rax
0x0000000000470eac : mov esi, esp ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000040d2fb : mov esp, 0x24448b48 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000042b4b1 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042b4e1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042b4d1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000404031 : mov esp, 0x8024 ; add byte ptr [rcx], dh ; imul al ; ret 0xbfbf
0x00000000004abcf8 : mov esp, 0x84000004 ; xchg eax, ebx ; cmc ; call rsp
0x00000000004047cf : mov esp, 0x8949ffff ; ret 0x149
0x0000000000417ad2 : mov esp, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x000000000045177d : mov esp, 0x9824 ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000497474 : mov esp, 0xa4fffc30 ; xor ah, bh ; call rsp
0x0000000000451bff : mov esp, 0xa824 ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000440bf3 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000046fe24 : mov esp, 0xd824 ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x000000000042b59b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x000000000042b4c1 : mov esp, 0xf80148c0 ; ret
0x000000000042b9b2 : mov esp, 0xf80148c0 ; vzeroupper ; ret
0x00000000004827fa : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x000000000048d7b7 : mov esp, ecx ; ret
0x000000000044ad50 : mov esp, esi ; call r15
0x0000000000452a0d : mov fs, word ptr [rbx] ; add eax, 0x29480000 ; ret 0x349
0x0000000000456f8d : mov gs, esi ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000048af23 : mov qword ptr [r10], r8 ; ret
0x0000000000438660 : mov qword ptr [r9 - 8], rcx ; ret
0x000000000044c0a0 : mov qword ptr [rax + 0x10], rcx ; mov qword ptr [rax + 8], rdx ; ret
0x0000000000470af8 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000470b38 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000471b37 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000044c106 : mov qword ptr [rax + 0x20], rcx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000044c120 : mov qword ptr [rax + 0x20], rsi ; ret
0x0000000000470afc : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000471bb9 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000417554 : mov qword ptr [rax + 8], 0 ; ret
0x000000000044c0a4 : mov qword ptr [rax + 8], rdx ; ret
0x0000000000484f4c : mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000484e9c : mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x0000000000484f40 : mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000048d2d1 : mov qword ptr [rax], rdx ; ret
0x0000000000471eaa : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000047c7c0 : mov qword ptr [rbp - 0x100], r11 ; call r10
0x000000000048110e : mov qword ptr [rbp - 0x78], rax ; mov eax, 0x15 ; syscall
0x00000000004035bb : mov qword ptr [rbp - 0x98], rcx ; call 9
0x000000000047d160 : mov qword ptr [rbp - 0xe0], r11 ; call r10
0x0000000000458831 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000412b46 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000481dbd : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000412f2e : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x000000000047faad : mov qword ptr [rbx + 0x10], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485c52 : mov qword ptr [rbx + 0x18], 0 ; jmp 0x485c28
0x0000000000481cf2 : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004884e4 : mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x00000000004885b8 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x00000000004166d0 : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x000000000041836c : mov qword ptr [rbx + 0x60], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485712 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000048a518 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000410040 : mov qword ptr [rcx + 0x130], rdx ; ret
0x000000000048301e : mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000444adc : mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x17] ; ret
0x000000000044444c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000044442c : mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000044448f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000004444af : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000444470 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000004165b2 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000047b764 : mov qword ptr [rdi + 0x300], rax ; ret
0x000000000047b736 : mov qword ptr [rdi + 0x308], rax ; ret
0x00000000004165e2 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000048d310 : mov qword ptr [rdi + 0x98], rsi ; ret
0x0000000000444a9c : mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x15] ; ret
0x00000000004443ec : mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000444abc : mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x16] ; ret
0x000000000044440c : mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000435647 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004355d7 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435567 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004354f7 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000044499a : mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xc] ; ret
0x0000000000435487 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000044433a : mov qword ptr [rdi + 5], rdx ; ret
0x00000000004449ba : mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xd] ; ret
0x0000000000435417 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000044434a : mov qword ptr [rdi + 6], rdx ; ret
0x00000000004449da : mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xe] ; ret
0x00000000004353a7 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000044435a : mov qword ptr [rdi + 7], rdx ; ret
0x0000000000484443 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000482fa3 : mov qword ptr [rdi + 8], r9 ; ret
0x000000000048478d : mov qword ptr [rdi + 8], rax ; mov eax, 2 ; ret
0x00000000004165b6 : mov qword ptr [rdi + 8], rax ; ret
0x0000000000447e0a : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; ret
0x0000000000447096 : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000048d2bb : mov qword ptr [rdi + rsi*8], rdx ; ret
0x000000000042f2b4 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042f2f2 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000482f0e : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000042f63b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434e57 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f81b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434dd7 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fa0b : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434d57 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fbdc : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434cc8 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042fddc : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434c38 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042ffdc : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434ba8 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000482e99 : mov qword ptr [rdi - 8], r9 ; ret
0x000000000042f2b8 : mov qword ptr [rdi - 8], rcx ; ret
0x000000000042f2f6 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000042f46b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f567 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042f4b3 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434ed7 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004687d9 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000482e68 : mov qword ptr [rdi], r9 ; ret
0x0000000000444926 : mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x0000000000444316 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000444326 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000444337 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000444347 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000444357 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000444307 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00000000004353ab : mov qword ptr [rdi], rcx ; ret
0x0000000000447f8e : mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x0000000000444913 : mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x00000000004356b3 : mov qword ptr [rdi], rdx ; ret
0x000000000043865d : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000044709b : mov qword ptr [rdi], rsi ; ret
0x0000000000412bc4 : mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x0000000000443eba : mov qword ptr [rdx + 5], rax ; lea rax, [rdx + 0xc] ; ret
0x00000000004426aa : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x0000000000443eda : mov qword ptr [rdx + 6], rax ; lea rax, [rdx + 0xd] ; ret
0x00000000004426ca : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x0000000000443efa : mov qword ptr [rdx + 7], rax ; lea rax, [rdx + 0xe] ; ret
0x00000000004426ea : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000046b42f : mov qword ptr [rdx + 8], rax ; jmp 0x46b405
0x0000000000443d8a : mov qword ptr [rdx + 8], rax ; lea rax, [rdx + 0xf] ; ret
0x00000000004425da : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x00000000004184df : mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x0000000000443d33 : mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x0000000000442583 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000484f2c : mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000418447 : mov qword ptr [rdx], rax ; ret
0x0000000000484a77 : mov qword ptr [rip + 0x2375ea], rax ; ret
0x000000000047f384 : mov qword ptr [rip + 0x23d025], rax ; ret
0x000000000041f8f5 : mov qword ptr [rip + 0x299f64], rax ; ret
0x000000000041981b : mov qword ptr [rip + 0x2a003e], rax ; ret
0x0000000000419316 : mov qword ptr [rip + 0x2a04d3], rax ; ret
0x00000000004192ee : mov qword ptr [rip + 0x2a04f3], rax ; ret
0x00000000004192ce : mov qword ptr [rip + 0x2a050b], rax ; ret
0x00000000004191c4 : mov qword ptr [rip + 0x2a067d], rax ; ret
0x00000000004191b4 : mov qword ptr [rip + 0x2a0685], rax ; ret
0x00000000004191a2 : mov qword ptr [rip + 0x2a0687], rdx ; ret
0x0000000000419164 : mov qword ptr [rip + 0x2a068d], rax ; ret
0x0000000000419154 : mov qword ptr [rip + 0x2a06a5], rax ; ret
0x00000000004017e2 : mov qword ptr [rsi + 0x10], rsi ; syscall
0x0000000000478950 : mov qword ptr [rsi], -1 ; xor eax, eax ; ret
0x000000000047f4f1 : mov qword ptr [rsi], rax ; ret
0x000000000047e838 : mov qword ptr [rsi], rdi ; mov rax, rcx ; ret
0x000000000045124b : mov qword ptr [rsp + 0x50], rax ; call 0x44d527
0x000000000041cabe : mov qword ptr [rsp + 8], rax ; call rcx
0x000000000040955a : mov qword ptr [rsp + 8], rcx ; call 0x406067
0x000000000041134d : mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x0000000000489cc2 : mov qword ptr [rsp], r8 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000413421 : mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x0000000000416734 : mov qword ptr [rsp], rdi ; call 0x4129c6
0x000000000045ac35 : mov qword ptr fs:[rdx], rax ; ret
0x0000000000447095 : mov qword ptr ss:[rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000044bdd0 : mov r10, rcx ; mov eax, 0x19 ; syscall
0x0000000000435016 : mov r10d, 0x46f00ff2 ; retf 0xff3
0x000000000042fe11 : mov r10d, 0x4f7f0ff3 ; retf 0x894c
0x000000000045aec3 : mov r10d, 8 ; mov eax, ecx ; syscall
0x0000000000435096 : mov r11d, 0x46f00ff2 ; retf
0x000000000042fc11 : mov r11d, 0x4f7f0ff3 ; retf
0x000000000044ad4f : mov r12d, r14d ; call r15
0x000000000048d62c : mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048d630 : mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048af20 : mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x0000000000458441 : mov r8b, 0 ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x3d], cl ; jmp rdx
0x000000000048d8de : mov r8b, 0xe8 ; retf
0x000000000044e8aa : mov r9, r13 ; call rbx
0x0000000000474354 : mov r9, r14 ; call rbx
0x00000000004179e0 : mov rax, -1 ; ret
0x000000000045ae00 : mov rax, 0xf ; syscall
0x0000000000474970 : mov rax, 1 ; ret
0x0000000000474980 : mov rax, 2 ; ret
0x0000000000474990 : mov rax, 3 ; ret
0x00000000004749a0 : mov rax, 4 ; ret
0x00000000004749b0 : mov rax, 5 ; ret
0x00000000004749c0 : mov rax, 6 ; ret
0x00000000004749d0 : mov rax, 7 ; ret
0x0000000000486d8e : mov rax, qword ptr [r12] ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000047cd05 : mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x00000000004118e0 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000471fc3 : mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000481bb0 : mov rax, qword ptr [rax + 8] ; ret
0x000000000045923f : mov rax, qword ptr [rax + rbp*8] ; test rax, rax ; je 0x459253 ; call rax
0x000000000046bdd9 : mov rax, qword ptr [rax + rcx*8] ; mov ecx, 1 ; jmp rax
0x000000000045ac4e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x00000000004609ac : mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000048d262 : mov rax, qword ptr [rax] ; ret
0x000000000047c520 : mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000041671c : mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000484f48 : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000416e08 : mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000442580 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000490e4c : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x490e65 ; call rax
0x0000000000471fc0 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000004187a0 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000048d290 : mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000048d2e0 : mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000048d320 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000048d380 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000048d370 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000048d330 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x0000000000460eee : mov rax, qword ptr [rdi + rax*8] ; jmp rax
0x0000000000487e00 : mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x487e19 ; ret
0x0000000000418444 : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000418430 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x418431 ; ret
0x000000000047f479 : mov rax, qword ptr [rip + 0x23cf30] ; ret
0x0000000000457ab0 : mov rax, qword ptr [rip + 0x2643c1] ; ret
0x000000000044f5b0 : mov rax, qword ptr [rip + 0x26d371] ; ret
0x0000000000418780 : mov rax, qword ptr [rip + 0x2a0999] ; ret
0x000000000048e1d1 : mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048b060 : mov rax, qword ptr [rsi + 0xa8] ; ret
0x000000000048b033 : mov rax, qword ptr [rsi + 0xb0] ; ret
0x000000000048b050 : mov rax, qword ptr [rsi + 0xb8] ; ret
0x000000000048e1f0 : mov rax, qword ptr [rsi + 8] ; ret
0x000000000046bd9e : mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000460f38 : mov rax, qword ptr [rsi + rax*8] ; mov esi, 1 ; jmp rax
0x0000000000461598 : mov rax, qword ptr [rsi + rax*8] ; xor esi, esi ; jmp rax
0x000000000048d355 : mov rax, qword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x000000000044a915 : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000401162 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004531bb : mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000040df2c : mov rax, qword ptr [rsp + 8] ; call rax
0x000000000048aac9 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000046edb7 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044acdd : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041a9ef : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004227ce : mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000473b90 : mov rax, r8 ; vzeroupper ; ret
0x000000000044b2f3 : mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000410202 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000413e56 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048d48a : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000004148a1 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410374 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044a52f : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000412b4a : mov rax, rbx ; pop rbx ; ret
0x000000000047e83b : mov rax, rcx ; ret
0x0000000000412a42 : mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041ac84 : mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000412a73 : mov rax, rdi ; ret
0x000000000041a884 : mov rax, rdx ; add rsp, 8 ; ret
0x000000000047541a : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041a23c : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000448315 : mov rax, rdx ; pop rbx ; ret
0x000000000041a890 : mov rax, rdx ; ret
0x000000000041dd4c : mov rax, rsi ; pop rbx ; ret
0x000000000041dd80 : mov rax, rsi ; ret
0x000000000048d7b2 : mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004827fc : mov rbp, r9 ; nop ; jmp rdx
0x000000000045a645 : mov rbx, rdi ; test rax, rax ; je 0x45a657 ; call rax
0x00000000004754cf : mov rbx, rsi ; sub rsp, 8 ; syscall
0x000000000047fb6c : mov rbx, rsp ; mov rsi, rbx ; syscall
0x00000000004442f0 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000481ca6 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000481c34 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x000000000040e5b1 : mov rcx, r14 ; mov rdx, r15 ; call 0x45b068
0x00000000004725d0 : mov rcx, rax ; jmp 0x47259c
0x0000000000447071 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044b40b : mov rdi, qword ptr [r13] ; call r12
0x000000000040df28 : mov rdi, qword ptr [r13] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000040e9c3 : mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000044ad4b : mov rdi, qword ptr [rbp - 0x58] ; mov r12d, r14d ; call r15
0x000000000045dd5a : mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x000000000046928c : mov rdi, qword ptr [rbp - 0x8d0] ; call rax
0x0000000000465163 : mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x000000000044a833 : mov rdi, qword ptr [rbp] ; call r12
0x000000000044a80d : mov rdi, qword ptr [rbx] ; call r12
0x000000000048844e : mov rdi, qword ptr [rsp + 0x10] ; call 0x484e87
0x000000000048ef0d : mov rdi, qword ptr [rsp + 0x10] ; call r14
0x0000000000450f84 : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000451860 : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000451a38 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000451d22 : mov rdi, qword ptr [rsp + 0x38] ; call r12
0x000000000045235a : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000045531e : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000451568 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000453799 : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000455f45 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000416745 : mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000048ddfb : mov rdi, qword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x000000000048dd03 : mov rdi, r12 ; call r15
0x000000000047204f : mov rdi, r12 ; call rbx
0x0000000000449e18 : mov rdi, r12 ; mov eax, 0x4f ; syscall
0x00000000004741c7 : mov rdi, r13 ; add r15, r12 ; call 0x400498
0x0000000000421b52 : mov rdi, r13 ; call 0x41dd95
0x000000000045827b : mov rdi, r13 ; call r12
0x000000000048eceb : mov rdi, r13 ; call r14
0x0000000000492160 : mov rdi, r13 ; call rax
0x000000000040dfb8 : mov rdi, r13 ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000413a56 : mov rdi, r14 ; call 0x4004ad
0x00000000004583d2 : mov rdi, r14 ; call rbx
0x00000000004586b0 : mov rdi, r14 ; call rdx
0x0000000000472327 : mov rdi, r15 ; call r12
0x0000000000411352 : mov rdi, r15 ; call rax
0x000000000044f18a : mov rdi, r15 ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x0000000000403a1a : mov rdi, rax ; call 0x40043d
0x00000000004039f2 : mov rdi, rax ; call 0x4004c5
0x0000000000423633 : mov rdi, rax ; call rcx
0x000000000042397b : mov rdi, rax ; jmp 0x40043d
0x000000000040dbaf : mov rdi, rax ; mov eax, 0xba ; syscall
0x00000000004229b5 : mov rdi, rbp ; call rax
0x0000000000474200 : mov rdi, rbp ; call rbx
0x000000000044a629 : mov rdi, rbp ; mov eax, 9 ; syscall
0x0000000000474351 : mov rdi, rbp ; mov r9, r14 ; call rbx
0x0000000000403a65 : mov rdi, rbx ; call 0x4004c5
0x000000000044ebad : mov rdi, rbx ; call r14
0x0000000000413425 : mov rdi, rbx ; call rax
0x00000000004167dc : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000470eae : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000048cf38 : mov rdx, qword ptr [r12] ; mov edi, 1 ; call rax
0x000000000048ece8 : mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x000000000048ddff : mov rdx, qword ptr [rbp] ; call r12
0x0000000000484f28 : mov rdx, qword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000484f3c : mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000042f420 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004356b0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000004826d8 : mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000489b68 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x0000000000489c3c : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489d18 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489b22 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000040e5b4 : mov rdx, r15 ; call 0x45b065
0x0000000000403a17 : mov rdx, r15 ; mov rdi, rax ; call 0x400440
0x000000000046f4b1 : mov rdx, r8 ; jmp 0x46f481
0x0000000000423638 : mov rdx, rax ; jmp 0x4235ed
0x0000000000456499 : mov rdx, rax ; jmp 0x456452
0x00000000004565d0 : mov rdx, rax ; jmp 0x456591
0x000000000045689e : mov rdx, rax ; jmp 0x456857
0x0000000000456915 : mov rdx, rax ; jmp 0x4568ce
0x0000000000475f3d : mov rdx, rax ; jmp 0x475f33
0x0000000000413a8d : mov rdx, rbp ; add rbp, r13 ; call 0x4004b0
0x00000000004756df : mov rdx, rcx ; mov eax, 0x106 ; syscall
0x0000000000447d37 : mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000048ddb4 : mov rsi, qword ptr [r14] ; call r12
0x000000000048ef0a : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x0000000000459143 : mov rsi, qword ptr [rax + r14*8] ; test rsi, rsi ; je 0x459157 ; call rsi
0x000000000044f18d : mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x000000000044e8a5 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x00000000004229b0 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000004203c8 : mov rsi, qword ptr [rsp + 0x68] ; call rax
0x0000000000489b6b : mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x0000000000489c3f : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489d1b : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489b25 : mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000413a53 : mov rsi, r13 ; mov rdi, r14 ; call 0x4004b0
0x000000000048dd00 : mov rsi, r14 ; mov rdi, r12 ; call r15
0x0000000000400588 : mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400599 ; ret
0x000000000044995b : mov rsi, rbp ; mov edi, ebx ; xor eax, eax ; syscall
0x0000000000423630 : mov rsi, rbp ; mov rdi, rax ; call rcx
0x00000000004125f8 : mov rsi, rbx ; mov edi, r13d ; mov eax, r9d ; syscall
0x0000000000421b4f : mov rsi, rbx ; mov rdi, r13 ; call 0x41dd98
0x000000000047fb6f : mov rsi, rbx ; syscall
0x00000000004497a1 : mov rsi, rdi ; mov edi, 0xffffff9c ; syscall
0x000000000048dca9 : mov rsi, rdi ; mov edi, 1 ; jmp rax
0x000000000047e7d2 : mov rsi, rdx ; cmp rcx, rsi ; jne 0x47e7b9 ; ret
0x00000000004496cb : mov rsi, rdx ; mov eax, 4 ; syscall
0x0000000000449719 : mov rsi, rdx ; mov eax, 5 ; syscall
0x000000000047568b : mov rsi, rdx ; mov eax, 6 ; syscall
0x00000000004827f9 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000048d7b6 : mov rsp, rcx ; ret
0x000000000046c8c6 : mov ss, word ptr [rax + rax + 0x63490000] ; ret 0x8948
0x0000000000438685 : mov word ptr [r9 - 2], cx ; ret
0x0000000000444a1c : mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x11] ; ret
0x000000000044438c : mov word ptr [rdi + 0x10], cx ; ret
0x0000000000444b24 : mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x19] ; ret
0x0000000000444474 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000004358e7 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000004448e8 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 5] ; ret
0x00000000004442c8 : mov word ptr [rdi + 4], dx ; ret
0x000000000044493a : mov word ptr [rdi + 8], dx ; lea rax, [rdi + 9] ; ret
0x000000000044430a : mov word ptr [rdi + 8], dx ; ret
0x0000000000447e1a : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; ret
0x00000000004470b4 : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000042f9bc : mov word ptr [rdi - 2], cx ; ret
0x000000000042f7d4 : mov word ptr [rdi - 2], dx ; ret
0x000000000042f9b8 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000444293 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000446df2 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000004358eb : mov word ptr [rdi], cx ; ret
0x0000000000447fa4 : mov word ptr [rdi], cx ; vzeroupper ; ret
0x00000000004448a3 : mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x0000000000435953 : mov word ptr [rdi], dx ; ret
0x0000000000438682 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x00000000004470b9 : mov word ptr [rdi], si ; ret
0x0000000000443e08 : mov word ptr [rdx + 4], ax ; lea rax, [rdx + 5] ; ret
0x0000000000442648 : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x0000000000443db3 : mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x0000000000442603 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000446df5 : mov word ptr [rsi - 2], cx ; ret
0x00000000004047fb : mov word ptr [rsp + rcx*4], fs ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x00000000004470b3 : mov word ptr ss:[rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x0000000000447587 : movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x00000000004a8dc3 : movabs byte ptr [0xd900432ac06c5d01], al ; retf 0xea91
0x00000000004a8a21 : movabs byte ptr [0xeb1b5c347ebb9329], al ; retf
0x00000000004a6e67 : movabs eax, dword ptr [0x2130504dd97d9556] ; retf
0x00000000004a771a : movabs eax, dword ptr [0x95a55d87a0d1e161] ; retf 0x33e6
0x000000000042df42 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042df3e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042dfec : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000040db9c : movaps xmmword ptr [rsp + 0xf0], xmm0 ; syscall
0x0000000000444360 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000444bdd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x000000000044452d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004355bf : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043554f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004354df : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043546f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444b7d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1c] ; ret
0x00000000004444cd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000004353ff : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444b9d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000004444ed : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043538f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444bbd : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x000000000044450d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000004359af : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043593f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004358cf : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043585f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004357ef : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043577f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043570f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043569f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043562f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000447d8d : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x0000000000434b1b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x0000000000434b8b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004449f4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0xf] ; ret
0x0000000000444374 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000004443b7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000004443a7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000444428 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000004443e8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000444408 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000444388 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000444529 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004444c9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000004444e9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000444509 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043533a : movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000435394 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444361 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000444bde : movq qword ptr [rdi + 0x10], mm2 ; lea rax, [rdi + 0x1f] ; ret
0x000000000044452e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000004355c0 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435550 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004354e0 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435470 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444b7e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, [rdi + 0x1c] ; ret
0x00000000004444ce : movq qword ptr [rdi + 0xd], mm2 ; ret
0x0000000000435400 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444b9e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000004444ee : movq qword ptr [rdi + 0xe], mm2 ; ret
0x0000000000435390 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444bbe : movq qword ptr [rdi + 0xf], mm2 ; lea rax, [rdi + 0x1e] ; ret
0x000000000044450e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000004359b0 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435940 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004358d0 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435860 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004357f0 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435780 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435710 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004356a0 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435630 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000447d15 : movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000447d8e : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000434b1c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x0000000000434b8c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004352c7 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435247 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004351b7 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435137 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004350b7 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435037 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434fb7 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434f37 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434eb7 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434e37 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434db7 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434d37 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434ca7 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434c17 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434b87 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004449f5 : movq qword ptr [rdi], mm0 ; lea rax, [rdi + 0xf] ; ret
0x0000000000444375 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000004443c8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000004443b8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000004443a8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000444429 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000004443e9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000444409 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000444389 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000044452a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004444ca : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000004444ea : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000044450a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043533b : movq qword ptr [rdi], mm0 ; ret
0x0000000000435395 : movq qword ptr [rdi], mm1 ; ret
0x00000000004578fc : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000447015 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000004a7b42 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000447007 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044c810 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x26
0x000000000040e5b8 : movsb byte ptr [rdi], byte ptr [rsi] ; retf 4
0x00000000004a6a25 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x0000000000497478 : movsb byte ptr [rdi], byte ptr [rsi] ; xor ah, bh ; call rsp
0x000000000047fa5c : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, eax ; ret
0x0000000000495069 : movsd dword ptr [rdi], dword ptr [rsi] ; cli ; call qword ptr [rax - 0x1f00055a]
0x00000000004a903d : movsd dword ptr [rdi], dword ptr [rsi] ; fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004a93d5 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004a8c91 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000046be87 : movsd dword ptr [rdi], dword ptr [rsi] ; or al, 0 ; add byte ptr [rcx + 1], al ; ret 0x8b48
0x0000000000482ec2 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000448633 : movsd dword ptr [rdi], dword ptr [rsi] ; retf
0x000000000049293c : movsd dword ptr [rdi], dword ptr [rsi] ; scasd eax, dword ptr [rdi] ; idiv edi ; retf
0x00000000004b0169 : movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x00000000004a7721 : movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x000000000048aec4 : movss dword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000480f8b : movsx eax, cl ; neg eax ; ret
0x0000000000481030 : movsx eax, dl ; sub eax, ecx ; ret
0x00000000004249b1 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, [r10 + r9] ; jmp r10
0x0000000000432f9b : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000042da1b : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, [r11 + r9] ; jmp r9
0x000000000048c168 : movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x00000000004021ce : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x000000000048ca69 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000048b117 : movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x000000000048aef1 : movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000048c6a1 : movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x000000000048aef2 : movsxd rax, dword ptr [rax + rcx*4] ; add rax, r8 ; jmp rax
0x0000000000416bee : movsxd rax, dword ptr [rax - 0x77] ; add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044be01 : movsxd rax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004a7ac0 : movsxd rax, dword ptr [rbp + 0x275dcc4c] ; retf 0xd1cb
0x00000000004021cf : movsxd rax, dword ptr [rbp + rax*4] ; add rax, r13 ; jmp rax
0x000000000044d62f : movsxd rax, dword ptr [rbp + rax*4] ; add rax, rbp ; jmp rax
0x000000000044d5b8 : movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x000000000046136d : movsxd rax, dword ptr [rbx - 0x52743] ; call qword ptr [rax]
0x000000000047c1fd : movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x000000000046eba7 : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000048c6a2 : movsxd rax, dword ptr [rcx + rbx*4] ; add rax, r9 ; jmp rax
0x000000000044706d : movsxd rax, dword ptr [rcx] ; add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000409e5e : movsxd rax, dword ptr [rcx] ; add cl, ch ; retf
0x000000000047c1fe : movsxd rax, dword ptr [rcx] ; add rax, rcx ; jmp rax
0x000000000047cb25 : movsxd rax, dword ptr [rdi + r12*4] ; add rax, rdi ; jmp rax
0x000000000048b118 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, r15 ; jmp rax
0x000000000046f1d7 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000047cb26 : movsxd rax, dword ptr [rdi] ; add rax, rdi ; jmp rax
0x0000000000401f66 : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000449354 : movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x000000000048ca6a : movsxd rax, dword ptr [rsi + rax*4] ; add rax, r14 ; jmp rax
0x000000000046ea3b : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000004481d8 : movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x0000000000448292 : movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000048c169 : movsxd rax, dword ptr [rsp + rax*4] ; add rax, r12 ; jmp rax
0x000000000048537d : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x0000000000446ca7 : movsxd rax, ecx ; add rax, rdi ; sub rax, rsi ; ret
0x0000000000446c54 : movsxd rax, ecx ; ret
0x00000000004a88ea : movsxd rbx, dword ptr [rsi + rax*8 + 0x74] ; retf 0x93a2
0x0000000000446c99 : movsxd rbx, ecx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000042c34d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000444129 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000423ea6 : movsxd rcx, dword ptr [rax - 0x7d] ; ret 0xe901
0x0000000000432f9c : movsxd rcx, dword ptr [rbx + rcx*4] ; add r9, r11 ; jmp r9
0x000000000042da1c : movsxd rcx, dword ptr [rbx + rcx*4] ; lea r9, [r11 + r9] ; jmp r9
0x000000000042c34e : movsxd rcx, dword ptr [rbx + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000044412a : movsxd rcx, dword ptr [rbx + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000004249b2 : movsxd rcx, dword ptr [rdx + rcx*4] ; lea r10, [r10 + r9] ; jmp r10
0x0000000000448200 : movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x0000000000446ce7 : movsxd rcx, ecx ; lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x000000000040d567 : movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000045a43f : movsxd rdi, dword ptr [r11 + rsi*4] ; add rdi, r11 ; jmp rdi
0x000000000045a440 : movsxd rdi, dword ptr [rbx + rsi*4] ; add rdi, r11 ; jmp rdi
0x000000000040d568 : movsxd rdi, dword ptr [rdx + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000042daef : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000042daf0 : movsxd rdx, dword ptr [rbx + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000040d27f : movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x0000000000459f40 : movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x0000000000459f41 : movsxd rsi, dword ptr [rax + rcx*4] ; add rsi, r8 ; jmp rsi
0x000000000047d8b3 : movsxd rsi, dword ptr [rdi + 2] ; add byte ptr [rax + 0x15], bh ; syscall
0x000000000044610c : movsxd rsi, esi ; ret 0x7520
0x00000000004471cf : movups xmmword ptr [r11], xmm4 ; ret
0x0000000000447256 : movups xmmword ptr [r11], xmm8 ; ret
0x0000000000447257 : movups xmmword ptr [rbx], xmm0 ; ret
0x00000000004471d0 : movups xmmword ptr [rbx], xmm4 ; ret
0x00000000004471cb : movups xmmword ptr [rcx - 0x30], xmm0 ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000004471ca : movups xmmword ptr [rcx - 0x30], xmm8 ; movups xmmword ptr [r11], xmm4 ; ret
0x0000000000447252 : movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000446fb2 : movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000447139 : movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x0000000000447116 : movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x0000000000446faf : movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000048aec5 : movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000475921 : movzx eax, al ; add rsp, 0x58 ; ret
0x00000000004884bc : movzx eax, al ; neg eax ; ret
0x0000000000484d89 : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044e920 : movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x0000000000415630 : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048e11e : movzx eax, byte ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000416831 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412d1e : movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004188bf : movzx eax, byte ptr [rax] ; ret
0x000000000046bd9a : movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000425d48 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000042c0e0 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042bc20 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000425d63 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000416840 : movzx eax, byte ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412d30 : movzx eax, byte ptr [rdx] ; ret
0x0000000000415631 : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000448260 : movzx eax, cl ; pop rbx ; ret
0x000000000044676a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x446769 ; ret
0x000000000044681a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x446819 ; ret
0x000000000042d204 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x0000000000447088 : movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000425d60 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042c0e3 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000040db03 : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x40daeb ; ret
0x0000000000425f21 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000042a398 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000042c068 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; vzeroupper ; ret
0x0000000000425db3 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000446134 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x0000000000446194 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x0000000000446184 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000446174 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000446164 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000446154 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000446144 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000004352e0 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042cfb7 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000044611b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x00000000004359c0 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000042bc23 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000042bc49 : movzx edx, dl ; sub eax, edx ; ret
0x0000000000435260 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000435950 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000473427 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000449657 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000004188ff : neg eax ; ret
0x0000000000493f68 : nop ; adc bh, cl ; call rax
0x0000000000494774 : nop ; adc dl, bh ; jmp qword ptr [rax]
0x000000000049455c : nop ; adc edi, edx ; jmp qword ptr [rax]
0x0000000000434a17 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004ae138 : nop ; add byte ptr [rax], al ; add byte ptr [rax], al ; sub dword ptr [rax], eax ; add al, dl ; retf
0x000000000044b437 : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44b448 ; call r12
0x000000000042c66c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b4875 : nop ; add byte ptr [rax], al ; or byte ptr [rdx], al ; std ; jmp qword ptr [rdx]
0x0000000000475b5c : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044ea5f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000487e5f : nop ; add rsp, 8 ; ret
0x00000000004b3280 : nop ; and edi, esp ; jmp qword ptr [rcx]
0x000000000048576f : nop ; call rax
0x000000000044f190 : nop ; call rsi
0x0000000000494a54 : nop ; cmp bh, dl ; jmp qword ptr [rax]
0x000000000044c10f : nop ; cmp rcx, qword ptr [rax + 0x10] ; jae 0x44c108 ; ret
0x000000000049506c : nop ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; jmp rax
0x0000000000494338 : nop ; cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; jmp rax
0x00000000004943e8 : nop ; in eax, 0xf9 ; call qword ptr [rax + 0x20fff9e7]
0x00000000004827ff : nop ; jmp rdx
0x000000000042f5ef : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000419343 : nop ; mov dword ptr [rip + 0x2a2a4a], eax ; ret
0x000000000042f7cf : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000004853ef : nop ; mov eax, 0x27 ; syscall
0x000000000047560f : nop ; mov eax, 0x3f ; syscall
0x000000000044bdff : nop ; mov eax, 0x63 ; syscall
0x0000000000474edf : nop ; mov eax, 0xc9 ; syscall
0x000000000044be84 : nop ; mov eax, 0xca ; syscall
0x0000000000416c5f : nop ; mov eax, 0xffffffff ; ret
0x000000000047fdff : nop ; mov eax, 1 ; pop rbx ; ret
0x00000000004944d0 : nop ; mov edi, 0xc3d0fff9 ; stc ; jmp qword ptr [rax]
0x000000000042fb8f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004448bf : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x0000000000471ea9 : nop ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000004191c3 : nop ; mov qword ptr [rip + 0x2a067d], rax ; ret
0x00000000004191b3 : nop ; mov qword ptr [rip + 0x2a0685], rax ; ret
0x0000000000419163 : nop ; mov qword ptr [rip + 0x2a068d], rax ; ret
0x0000000000419153 : nop ; mov qword ptr [rip + 0x2a06a5], rax ; ret
0x000000000048d2df : nop ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000048b04f : nop ; mov rax, qword ptr [rsi + 0xb8] ; ret
0x000000000048e1ef : nop ; mov rax, qword ptr [rsi + 8] ; ret
0x000000000040e5b0 : nop ; mov rcx, r14 ; mov rdx, r15 ; call 0x45b069
0x000000000044435f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000493f58 : nop ; or eax, 0xed0fff9 ; stc ; call qword ptr [rax]
0x00000000004943ec : nop ; out 0xf9, eax ; jmp qword ptr [rax]
0x0000000000400bab : nop ; pop rbp ; ret
0x00000000004b09cc : nop ; push rcx ; add byte ptr [rax], al ; push rdi ; sti ; hlt ; jmp qword ptr [rbx]
0x00000000004004cf : nop ; ret
0x0000000000494504 : nop ; sar ecx, cl ; jmp rax
0x00000000004940c9 : nop ; stc ; call qword ptr [rax]
0x00000000004940dd : nop ; stc ; call rcx
0x000000000041847f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004941b8 : nop ; xchg eax, esp ; stc ; jmp qword ptr [rax]
0x00000000004148cf : nop ; xor eax, eax ; ret
0x000000000040ea88 : nop dword ptr [rax + rax] ; call qword ptr [rbx]
0x0000000000419e18 : nop dword ptr [rax + rax] ; call rax
0x0000000000485988 : nop dword ptr [rax + rax] ; call rbx
0x000000000044429b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000400a93 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x00000000004118e8 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000400a5b : nop dword ptr [rax + rax] ; ret
0x000000000044666b : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000047493c : nop dword ptr [rax] ; add rax, 1 ; ret
0x00000000004235cd : nop dword ptr [rax] ; mov eax, 0x16 ; ret
0x000000000044963c : nop dword ptr [rax] ; mov eax, 0x18 ; syscall
0x0000000000471fa5 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x0000000000449d3d : nop dword ptr [rax] ; mov eax, 3 ; syscall
0x0000000000449abc : nop dword ptr [rax] ; mov eax, 8 ; syscall
0x000000000041a88c : nop dword ptr [rax] ; mov rax, rdx ; ret
0x0000000000400ad5 : nop dword ptr [rax] ; pop rbp ; ret
0x000000000044888c : nop dword ptr [rax] ; pop rbx ; ret
0x0000000000419e0d : nop dword ptr [rax] ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000418591 : nop dword ptr [rax] ; ret
0x000000000041480d : nop dword ptr [rax] ; xor eax, eax ; jmp 0x4147dd
0x0000000000416d95 : nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000004499b9 : nop dword ptr [rax] ; xor eax, eax ; syscall
0x0000000000401254 : nop dword ptr [rax] ; xor edi, edi ; mov eax, edx ; syscall
0x0000000000485987 : nop dword ptr cs:[rax + rax] ; call rbx
0x000000000040ea87 : nop word ptr [rax + rax] ; call qword ptr [rbx]
0x0000000000419e17 : nop word ptr [rax + rax] ; call rax
0x0000000000484cfa : nop word ptr [rax + rax] ; pop rbx ; ret
0x0000000000474722 : nop word ptr [rax + rax] ; ret
0x000000000044846a : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000412319 : not edx ; and rdx, 0xfffffffffffffffc ; add rdx, rcx ; jmp 0x412339
0x0000000000412318 : not rdx ; and rdx, 0xfffffffffffffffc ; add rdx, rcx ; jmp 0x41233a
0x000000000042a517 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f54f : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a545 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000475a42 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000004759f1 : or al, 0 ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000041dd7c : or al, 0 ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x0000000000429538 : or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000473d68 : or al, 0 ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000046be88 : or al, 0 ; add byte ptr [rcx + 1], al ; ret 0x8b48
0x0000000000425d46 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000041dd4a : or al, 0x1e ; mov rax, rsi ; pop rbx ; ret
0x0000000000413423 : or al, 0x24 ; mov rdi, rbx ; call rax
0x000000000047fa59 : or al, 0x37 ; jae 0x47fa07 ; xor eax, eax ; ret
0x00000000004246c0 : or al, 0x39 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004af948 : or al, 0x41 ; add byte ptr [rax], al ; xor al, 0x7a ; stc ; call rsp
0x0000000000449d0d : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x0000000000416733 : or al, 0x48 ; mov dword ptr [rsp], edi ; call 0x4129c7
0x0000000000401161 : or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000485143 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000046ecd3 : or al, 0x7e ; ret 0x8944
0x0000000000400df0 : or al, 0x81 ; retf 0x440
0x00000000004587f3 : or al, 0x83 ; inc byte ptr [rbx] ; je 0x458807 ; ret
0x000000000045e1bb : or al, 0x83 ; ret
0x00000000004230b6 : or al, 0x83 ; retf 0x8902
0x00000000004af9c4 : or al, 0x83 ; stc ; call qword ptr [rdx]
0x0000000000448201 : or al, 0x86 ; add rcx, rsi ; jmp rcx
0x000000000046344a : or al, 0x89 ; ret 0xc689
0x000000000044828b : or al, 0x89 ; ret 0xe283
0x00000000004249b3 : or al, 0x8a ; lea r10, [r10 + r9] ; jmp r10
0x000000000043ae74 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000432f9d : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000042da1d : or al, 0x8b ; lea r9, [r11 + r9] ; jmp r9
0x0000000000475b18 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000042c34f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000044412b : or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000042da21 : or al, 0xb ; jmp r9
0x000000000044412f : or al, 0xb ; jmp rcx
0x0000000000424150 : or al, 0xc3 ; std ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x0000000000485a05 : or al, 0xca ; jmp 0x485a15
0x0000000000411508 : or al, 0xe8 ; ret 0xec
0x000000000045672f : or al, 0xe9 ; ret
0x0000000000471c4c : or al, 0xeb ; ret 0x5590
0x0000000000403f4f : or al, 0xf ; retf 0xd289
0x00000000004354e3 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000466bad : or al, 0xf6 ; ret 0xf01
0x0000000000493f55 : or al, 0xf9 ; call qword ptr [rax - 0x2f0006f3]
0x0000000000422e71 : or al, 9 ; ret 0xbae9
0x000000000047fc33 : or al, bh ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000473d1b : or al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000042a6f7 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e0e1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a725 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048d00a : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000044a701 : or al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004ac2c5 : or al, byte ptr [rax] ; add byte ptr [rax], ch ; sub esi, esi ; call qword ptr [rax]
0x00000000004ac2ed : or al, byte ptr [rax] ; add byte ptr [rax], dh ; sub esi, esi ; jmp qword ptr [rax]
0x0000000000428048 : or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040762d : or al, byte ptr [rbx - 0x7bf0fd07] ; ret
0x000000000040aabc : or al, byte ptr [rbx - 0x7bf0fd07] ; ret 0x18
0x000000000044c6c6 : or al, byte ptr [rcx + rcx*8 - 0x7cb7ed8c] ; ret 0x4801
0x00000000004b3f93 : or al, byte ptr [rcx] ; ret
0x000000000040955e : or al, ch ; cld ; retf 0xffff
0x00000000004094bd : or al, ch ; popfq ; retf
0x0000000000409604 : or al, ch ; push rsi ; retf 0xffff
0x000000000040bc97 : or al, ch ; ret
0x000000000040ad98 : or al, ch ; ret 0xffb2
0x000000000040718f : or al, ch ; retf
0x000000000041d0d7 : or al, ch ; xchg eax, ebx ; ret 0xffff
0x0000000000493f8d : or bh, cl ; inc eax ; and ecx, edi ; jmp rax
0x00000000004245a0 : or bh, dh ; ret 0
0x000000000049481d : or bh, dl ; call qword ptr [rdx + 0x12fffa09]
0x0000000000494819 : or bh, dl ; call qword ptr [rdx]
0x0000000000494999 : or bh, dl ; call rax
0x0000000000494959 : or bh, dl ; jmp rax
0x0000000000494955 : or bh, dl ; push qword ptr [rax + 0xa] ; cli ; jmp rax
0x000000000041a88a : or bl, al ; nop dword ptr [rax] ; mov rax, rdx ; ret
0x000000000046b431 : or bl, bpl ; retf
0x0000000000405ddd : or bl, byte ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000048e9fd : or bl, ch ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000046b432 : or bl, ch ; retf
0x00000000004356a3 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000044a4a7 : or bl, dh ; ret
0x000000000044fe06 : or byte ptr [r15], 0x8e ; ret 1
0x00000000004116e1 : or byte ptr [r8 + 0x29], r9b ; ret
0x000000000040e12d : or byte ptr [r8 + 0x39], cl ; ret
0x0000000000451153 : or byte ptr [r8 + 0xf], cl ; ret
0x000000000048478f : or byte ptr [r8 + 2], r15b ; ret
0x00000000004117af : or byte ptr [r8 - 0x3f], r9b ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000047f59a : or byte ptr [r8 - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004425d8 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047fa85 : or byte ptr [r8 - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x0000000000478e12 : or byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; ret
0x000000000040b8b2 : or byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x00000000004847d4 : or byte ptr [r9 + 0x2b802], r9b ; add byte ptr [rax], al ; ret
0x000000000048ca67 : or byte ptr [r9 + 0x63], r9b ; add al, 0x86 ; add rax, r14 ; jmp rax
0x0000000000442697 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x00000000004116e2 : or byte ptr [rax + 0x29], cl ; ret
0x0000000000412f15 : or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000040e12e : or byte ptr [rax + 0x39], cl ; ret
0x0000000000452a08 : or byte ptr [rax + 0x39], cl ; ret 0x8e0f
0x0000000000482cb8 : or byte ptr [rax + 0x39], cl ; retf
0x00000000004188b9 : or byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x00000000004ad15e : or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rbx + 0xa] ; ret
0x0000000000451154 : or byte ptr [rax + 0xf], cl ; ret
0x0000000000419966 : or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000048691c : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x000000000047d881 : or byte ptr [rax + 1], cl ; ret
0x0000000000484790 : or byte ptr [rax + 2], bh ; ret
0x00000000004039ef : or byte ptr [rax + rsi + 0x48], dh ; mov edi, eax ; call 0x4004c8
0x00000000004117b0 : or byte ptr [rax - 0x3f], cl ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000485a02 : or byte ptr [rax - 0x73], cl ; or al, 0xca ; jmp 0x485a18
0x0000000000419203 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x000000000044a914 : or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x000000000044b2f2 : or byte ptr [rax - 0x77], cl ; call 0xffffffffe144105b
0x00000000004425dd : or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047f59b : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044a52e : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000004167db : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x000000000046b42e : or byte ptr [rax - 0x77], cl ; or bl, bpl ; retf
0x00000000004425d9 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047f940 : or byte ptr [rax - 0x77], cl ; ret
0x0000000000410e2b : or byte ptr [rax - 0x77], cl ; retf 0x294c
0x0000000000485633 : or byte ptr [rax - 0x77], cl ; retf 0xc148
0x000000000046b42d : or byte ptr [rax - 0x77], r9b ; or bl, bpl ; retf
0x000000000048958a : or byte ptr [rax - 0x77], r9b ; ret
0x00000000004b5844 : or byte ptr [rax - 0x7af80000], ah ; std ; call qword ptr [rbx]
0x000000000047f4c8 : or byte ptr [rax - 0x7b], cl ; push qword ptr [rbp - 0x2e] ; ret
0x0000000000478e13 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000040b8b3 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x00000000004897de : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rax*8 + 0x49], 0x83 ; ret 0xf608
0x000000000047fa86 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x0000000000489837 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi*4 + 0x48], 0x83 ; ret 0xf608
0x000000000041ee90 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000045b6a0 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000044acc2 : or byte ptr [rax - 0x7d], cl ; ret
0x000000000047b6c7 : or byte ptr [rax - 0x7d], cl ; ret 0x101
0x000000000047dd32 : or byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044c580 : or byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000411dc6 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00000000004726be : or byte ptr [rax], al ; add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000041a73d : or byte ptr [rax], al ; add al, ch ; retf
0x000000000041a52b : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000042a9c7 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e281 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a905 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000417557 : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004510fa : or byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000045b022 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x000000000045aec5 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x00000000004482d5 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000044e971 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000449ac1 : or byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000004281c8 : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000041f766 : or byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x41f739 ; ret
0x000000000042073c : or byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3d83
0x000000000040d27c : or byte ptr [rax], al ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x000000000043f93e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048d25f : or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x0000000000485b3b : or byte ptr [rbp + 0x39481e04], cl ; ret 0x830f
0x0000000000482c11 : or byte ptr [rbp + 0x39], cl ; ret 0x8b48
0x0000000000485856 : or byte ptr [rbp + 0x440f4cf6], al ; ret
0x000000000048d2ce : or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x0000000000482893 : or byte ptr [rbp + rcx*4 + 0x24], cl ; ret 0x8d4a
0x000000000041cf02 : or byte ptr [rbp - 0x75], cl ; push rax ; or byte ptr [rcx - 0xa], al ; ret 0xf04
0x0000000000492273 : or byte ptr [rbp - 0x77], cl ; ret
0x000000000044a32c : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xc221
0x0000000000449e43 : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xca21
0x0000000000486bd7 : or byte ptr [rbx + 0x394401c2], al ; retf 0x830f
0x00000000004137e6 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000401bc5 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000044b17e : or byte ptr [rbx + 0x94801e2], al ; ret 0x8949
0x000000000041de47 : or byte ptr [rbx + 0x94807e0], al ; ret
0x000000000041de46 : or byte ptr [rbx + 0x94807e0], r8b ; ret
0x0000000000463127 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x000000000040fd29 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x000000000044bf64 : or byte ptr [rbx], al ; add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x000000000047b739 : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x000000000048457b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00000000004847d5 : or byte ptr [rcx + 0x2b802], cl ; add byte ptr [rax], al ; ret
0x000000000048166d : or byte ptr [rcx + 0x33], cl ; add byte ptr [r8 + 9], r9b ; ret 0x840f
0x0000000000479262 : or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0x1475
0x0000000000479234 : or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0xe75
0x00000000004107a8 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x0000000000410597 : or byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x000000000048a4b5 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000046fc83 : or byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; pop r13 ; ret
0x000000000048ca68 : or byte ptr [rcx + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000046ecb9 : or byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000048837b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000483570 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x0000000000489c3b : or byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000411351 : or byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000403a16 : or byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, rax ; call 0x400441
0x0000000000484582 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000044b1eb : or byte ptr [rcx - 0x75], cl ; add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x0000000000442698 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x00000000004209d8 : or byte ptr [rcx - 0x77], cl ; ret
0x000000000040d45a : or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000044a9ba : or byte ptr [rcx - 0x77], cl ; retf
0x000000000044a986 : or byte ptr [rcx - 0xa], al ; ret
0x000000000041cf06 : or byte ptr [rcx - 0xa], al ; ret 0xf04
0x00000000004148ba : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000004a965e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000047bcb0 : or byte ptr [rdi + 0x315], 4 ; ret
0x000000000047bc00 : or byte ptr [rdi + 0x315], 4 ; xor eax, eax ; ret
0x000000000045469b : or byte ptr [rdi], 0x85 ; retf 0xfffa
0x0000000000454a27 : or byte ptr [rdi], 0x85 ; rol dword ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000044fe07 : or byte ptr [rdi], 0x8e ; ret 1
0x00000000004b1744 : or byte ptr [rdi], bl ; add byte ptr [rax - 0x71], bl ; cli ; call qword ptr [rdx]
0x000000000040eec2 : or byte ptr [rdi], cl ; mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000475920 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x00000000004884bb : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000403f44 : or byte ptr [rdi], cl ; retf 0x8941
0x000000000042dfeb : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000041afd6 : or byte ptr [rdi], cl ; test ebx, ebp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004831d3 : or byte ptr [rdi], cl ; xchg eax, edx ; ret 0x8949
0x0000000000401221 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000471a23 : or byte ptr [rdx + rbx - 0x7d], dh ; retf 0x4808
0x00000000004b4878 : or byte ptr [rdx], al ; std ; jmp qword ptr [rdx]
0x0000000000466e74 : or byte ptr [rip + 0xf410004], ch ; xchg eax, esp ; ret
0x00000000004940c0 : or byte ptr [rsi - 0x70cf0007], 0xf9 ; jmp qword ptr [rax]
0x00000000004b2e80 : or byte ptr [rsi], 0xfc ; jmp qword ptr [rbx]
0x0000000000494524 : or cl, 0xf9 ; call rax
0x0000000000457bb1 : or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x0000000000410c44 : or cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000410537 : or cl, byte ptr [rax - 0x7d] ; ret
0x0000000000423b42 : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000045d5ae : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000486d8d : or cl, byte ptr [rcx - 0x75] ; add al, 0x24 ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000047b6d5 : or cl, ch ; ret
0x0000000000413ab6 : or cl, ch ; retf
0x000000000047f839 : or cl, ch ; retf 0xfffd
0x00000000004a9042 : or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004355c3 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000048f605 : or dh, bl ; ret
0x00000000004a8e6a : or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x000000000044cf7c : or dh, dh ; ret 0x8902
0x000000000041ab27 : or dh, dh ; ret 0xf02
0x000000000049482d : or dl, bh ; call qword ptr [rdx + 0x12fffa07]
0x0000000000494829 : or dl, bh ; call qword ptr [rdx]
0x00000000004949a9 : or dl, bh ; call rax
0x0000000000494969 : or dl, bh ; jmp rax
0x000000000042073a : or dword ptr [rax + 0xf000008], 0xffffff93 ; ret 0x3d83
0x000000000044d5ba : or dword ptr [rax + 1], 0xffffffd8 ; jmp rax
0x000000000040da2b : or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xfff0
0x0000000000428e07 : or dword ptr [rax + rax], edx ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045a7ae : or dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x0000000000440e5e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x00000000004ac205 : or dword ptr [rax], eax ; add al, cl ; sub dh, dh ; jmp qword ptr [rax]
0x000000000047290b : or dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000488bc0 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042a8d7 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f7ef : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a815 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000411d87 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000044a62d : or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000429818 : or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045eac5 : or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000401f63 : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000004a36f7 : or dword ptr [rax], ecx ; retf
0x0000000000482da1 : or dword ptr [rbp + 0x39], ecx ; retf
0x00000000004a87b3 : or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x000000000042d786 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000412f40 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000045584c : or dword ptr [rbx], eax ; add byte ptr [rax], al ; call 0x401b16
0x0000000000480f68 : or dword ptr [rdi], ecx ; xchg byte ptr [rcx + 0x38000000], dh ; retf 0x850f
0x000000000046f3c2 : or dword ptr [rdi], ecx ; xchg dword ptr [rdi], esi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000046cb70 : or dword ptr [rdi], ecx ; xchg ecx, esp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x0000000000484e73 : or dword ptr [rdx + 0x23], esi ; add cl, ch ; retf
0x00000000004a900e : or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x0000000000424547 : or dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000047fdf6 : or dword ptr [rip + 0x23a3eb], 1 ; pop rbx ; ret
0x00000000004b3f90 : or eax, 0x10a0303 ; ret
0x00000000004b3fe8 : or eax, 0x1370303 ; ret
0x0000000000494611 : or eax, 0x1442fffa ; cli ; call rdx
0x0000000000494591 : or eax, 0x1456fffa ; cli ; jmp rsi
0x0000000000444b81 : or eax, 0x1c478d48 ; ret
0x00000000004b3f80 : or eax, 0x34b0303 ; ret
0x00000000004b3fb4 : or eax, 0x35b0303 ; ret
0x000000000046f1e2 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000046ea4a : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045a8ba : or eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000440472 : or eax, 0x48c0bc0f ; lea eax, [rdi + rax] ; ret
0x000000000042a427 : or eax, 0x83480000 ; ret 0x4910
0x000000000043dda1 : or eax, 0x83480000 ; ret 0xe910
0x000000000042a455 : or eax, 0x83480000 ; ret 0xeb10
0x0000000000427d48 : or eax, 0x894d0000 ; retf
0x0000000000491062 : or eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x00000000004745a2 : or eax, 0xc2bc0f48 ; shr rax, 2 ; ret
0x00000000004a6e61 : or eax, 0xcad7947e ; jmp 0x4a6e0d
0x000000000049474d : or eax, 0xda0fffa ; cli ; call qword ptr [rax]
0x000000000049ef19 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x000000000049ef25 : or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x00000000004a8ff3 : or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000004542e5 : or eax, 0xea810000 ; ret 0
0x0000000000493f59 : or eax, 0xed0fff9 ; stc ; call qword ptr [rax]
0x00000000004a8c93 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x0000000000435473 : or eax, 0xf7f0ff3 ; ret
0x000000000044965d : or eax, 0xffffffff ; ret
0x000000000042c0a9 : or eax, 1 ; ret
0x000000000042a607 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043df41 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a635 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044a6d1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000427ec8 : or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004ad160 : or eax, dword ptr [rdx] ; jae 0x4ad172 ; ret
0x00000000004b52c2 : or eax, dword ptr [rdx] ; ret 0xe0a
0x0000000000418474 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004029e3 : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; retf
0x0000000000412a5d : or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046aec1 : or ebx, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000435633 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004148e6 : or ebx, esi ; ret
0x00000000004233bf : or ecx, dword ptr [rax + 0x63] ; ret
0x00000000004137d7 : or ecx, dword ptr [rax + 1] ; ret 0x8949
0x0000000000410758 : or ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x00000000004242fc : or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004910df : or ecx, dword ptr [rax - 0x7d] ; ret 0x4810
0x0000000000482a73 : or ecx, dword ptr [rbp + 0x39] ; ret 0x860f
0x0000000000494795 : or edi, edx ; call rax
0x0000000000494815 : or edi, edx ; jmp qword ptr [rdx + 0x12fffa0a]
0x00000000004b2e69 : or edi, esp ; jmp qword ptr [rax]
0x000000000044a689 : or edx, 0x40 ; mov eax, ecx ; syscall
0x0000000000494825 : or edx, edi ; call qword ptr [rdx + 0x12fffa08]
0x0000000000494821 : or edx, edi ; call qword ptr [rdx]
0x00000000004949a1 : or edx, edi ; call rax
0x0000000000494961 : or edx, edi ; jmp rax
0x0000000000435553 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000045b034 : or esi, ebx ; ret
0x0000000000412f41 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004ac96a : or esp, dword ptr [rsi + rcx + 0x18] ; ret
0x000000000044a688 : or r10d, 0x40 ; mov eax, ecx ; syscall
0x00000000004356a2 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435632 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004355c2 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435552 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004b52c1 : or r8d, dword ptr [r10] ; ret 0xe0a
0x000000000047f838 : or r9b, bpl ; retf 0xfffd
0x0000000000457bb0 : or r9b, byte ptr [r8 + 0x39] ; ret 0x1176
0x00000000004b3fe7 : or rax, 0x1370303 ; ret
0x00000000004b3f7f : or rax, 0x34b0303 ; ret
0x00000000004b3fb3 : or rax, 0x35b0303 ; ret
0x000000000046f1e1 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000046ea49 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000044965c : or rax, 0xffffffffffffffff ; ret
0x000000000042a6a7 : or rax, qword ptr [r8] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004ad15f : or rax, qword ptr [rdx] ; jae 0x4ad173 ; ret
0x00000000004ac969 : or rsp, qword ptr [rsi + r9 + 0x18] ; ret
0x0000000000424876 : out 0, al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000424736 : out 0, eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000417e35 : out 0x31, eax ; shr al, cl ; ret
0x000000000048dd05 : out 0x41, eax ; call rdi
0x00000000004868c9 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000470ead : out 0x48, al ; mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000422f28 : out 0x48, eax ; sub eax, 0x10 ; ret
0x00000000004a8880 : out 0x78, al ; jnp 0x4a88e2 ; retf
0x0000000000489b6d : out 0x89, al ; out dx, eax ; call qword ptr [r14]
0x0000000000489c41 : out 0x89, al ; out dx, eax ; call qword ptr [rax]
0x0000000000489d1d : out 0x89, al ; out dx, eax ; call qword ptr [rcx]
0x0000000000489b27 : out 0x89, al ; out dx, eax ; call rax
0x0000000000494140 : out 0x95, al ; stc ; push qword ptr [rsi - 0x6a] ; stc ; call qword ptr [rsi]
0x00000000004a6e11 : out 0xb3, al ; retf 0xe80
0x00000000004a7b40 : out 0xcf, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000047293c : out 0xe8, al ; jbe 0x472923 ; clc ; dec dword ptr [rax + 1] ; ret
0x000000000045c770 : out 0xe8, al ; ret 0xfa3c
0x0000000000419039 : out 0xe8, eax ; int1 ; jae 0x419044 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004190d0 : out 0xe8, eax ; pop rdx ; jae 0x4190db ; dec dword ptr [rax - 0x77] ; ret
0x0000000000406308 : out 0xe8, eax ; ret 0x19e
0x000000000044edc7 : out 0xe8, eax ; retf
0x00000000004056fa : out 0xeb, eax ; retf 0x8b49
0x0000000000434e3a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434eba : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004a9868 : out 0xf5, eax ; mov ch, 0xab ; ret
0x0000000000494a11 : out 0xf9, al ; jmp rax
0x00000000004943ed : out 0xf9, eax ; jmp qword ptr [rax]
0x00000000004949d5 : out 0xf9, eax ; jmp rax
0x0000000000461cc2 : out 0xff, eax ; dec dword ptr [rbp + 0x63] ; ret 0x20be
0x000000000047625e : out 2, al ; add byte ptr [rax + 9], cl ; ret 0x850f
0x0000000000456f8e : out dx, al ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x00000000004a8c97 : out dx, al ; fcmovb st(0), st(3) ; ret
0x000000000042455e : out dx, al ; jns 0x424568 ; add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x0000000000449a2d : out dx, al ; mov edi, ebx ; mov eax, 1 ; syscall
0x000000000044995d : out dx, al ; mov edi, ebx ; xor eax, eax ; syscall
0x000000000042f63a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000413a55 : out dx, al ; mov rdi, r14 ; call 0x4004ae
0x0000000000423632 : out dx, al ; mov rdi, rax ; call rcx
0x000000000044a628 : out dx, al ; mov rdi, rbp ; mov eax, 9 ; syscall
0x000000000043524a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043f69e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004a8ff2 : out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000004a887f : out dx, al ; out 0x78, al ; jnp 0x4a88e3 ; retf
0x0000000000421fe3 : out dx, al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000423978 : out dx, al ; pop rbx ; pop rbp ; mov rdi, rax ; jmp 0x400440
0x000000000041fff6 : out dx, al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000047c6b6 : out dx, al ; ret
0x000000000046761a : out dx, al ; ret 3
0x00000000004741c9 : out dx, eax ; add r15, r12 ; call 0x400496
0x0000000000417a39 : out dx, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000417a91 : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000421b54 : out dx, eax ; call 0x41dd93
0x0000000000489b6f : out dx, eax ; call qword ptr [r14]
0x0000000000489c43 : out dx, eax ; call qword ptr [rax]
0x0000000000489d1f : out dx, eax ; call qword ptr [rcx]
0x000000000045827d : out dx, eax ; call r12
0x000000000048eced : out dx, eax ; call r14
0x00000000004229b7 : out dx, eax ; call rax
0x0000000000474202 : out dx, eax ; call rbx
0x00000000004a98e5 : out dx, eax ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x000000000044a62b : out dx, eax ; mov eax, 9 ; syscall
0x00000000004125fd : out dx, eax ; mov eax, r9d ; syscall
0x000000000042f46a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f566 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042f4b2 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000474353 : out dx, eax ; mov r9, r14 ; call rbx
0x000000000040dfba : out dx, eax ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000413a8c : out dx, eax ; mov rdx, rbp ; add rbp, r13 ; call 0x4004b1
0x00000000004352ca : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043f79d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042c7d3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42c7ab
0x000000000042c851 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42c829
0x000000000042cce3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42ccbb
0x000000000042cd61 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42cd39
0x000000000042c3d3 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042c3e8 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042c3fd : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004468b3 : out dx, eax ; ret 0xf66
0x0000000000446896 : out dx, eax ; retf 0x4466
0x00000000004a8fbb : out dx, eax ; retf 0xab0d
0x000000000042495a : out dx, eax ; shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000042d8ec : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042d8d5 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042d8be : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042c37a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000494a29 : out dx, eax ; stc ; jmp rax
0x000000000048ac67 : out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000043d6ae : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000444cde : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000004a9443 : outsb dx, byte ptr [rsi] ; ja 0x4a93cc ; ret 0x48f
0x000000000047d880 : outsb dx, byte ptr [rsi] ; or byte ptr [rax + 1], cl ; ret
0x0000000000466e3e : outsb dx, byte ptr [rsi] ; retf
0x00000000004a7184 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x00000000004a87b8 : outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004192b2 : outsd dx, dword ptr [rsi] ; and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x0000000000424b08 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000043902e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000042fbf2 : outsd dx, dword ptr [rsi] ; mov ebx, 0x4e6f0ff3 ; retf
0x000000000042fdf2 : outsd dx, dword ptr [rsi] ; mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x0000000000409e5d : outsd dx, dword ptr [rsi] ; movsxd rax, dword ptr [rcx] ; add cl, ch ; retf
0x000000000042d6ed : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042d78d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000042d2b2 : outsd dx, dword ptr [rsi] ; push rdi ; retf
0x000000000042d332 : outsd dx, dword ptr [rsi] ; push rdi ; retf 0xcab2
0x000000000047342a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042d6f2 : outsd dx, dword ptr [rsi] ; ret
0x00000000004634ed : outsd dx, dword ptr [rsi] ; ret 0x290f
0x0000000000463516 : outsd dx, dword ptr [rsi] ; ret 0x3e8
0x000000000041a47a : outsd dx, dword ptr [rsi] ; ret 0x4466
0x00000000004a7b46 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000419eb2 : outsd dx, dword ptr [rsi] ; ret 0x8348
0x000000000042fda7 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x000000000046626d : outsd dx, dword ptr [rsi] ; ret 0xace8
0x000000000042d792 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x0000000000466249 : outsd dx, dword ptr [rsi] ; ret 0xe583
0x000000000047347a : outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000042fc72 : outsd dx, dword ptr [rsi] ; retf
0x000000000043d059 : outsd dx, dword ptr [rsi] ; retf 0x4466
0x000000000042fe72 : outsd dx, dword ptr [rsi] ; retf 0x8b4c
0x000000000042ccda : outsd dx, dword ptr [rsi] ; retf 0xf66
0x000000000042c7ca : outsd dx, dword ptr [rsi] ; retf 0xff3
0x00000000004634b4 : outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x000000000046620f : outsd dx, dword ptr [rsi] ; sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x00000000004a7b45 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000042a2e2 : pcmpeqb mm0, mm1 ; lea r10, [r10 + r9] ; jmp r10
0x0000000000474934 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x000000000047491f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000042a2e1 : pcmpeqb xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x00000000004a8f45 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004a8f46 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000447f76 : pextrw edi, mm0, 0x77 ; ret
0x000000000042b4a2 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x42b509 ; xor eax, eax ; ret
0x000000000044be95 : pop r10 ; ret
0x00000000004a93cf : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000044e250 : pop r12 ; jmp 0x45acc4
0x000000000044a7c1 : pop r12 ; jmp rax
0x000000000044a7a6 : pop r12 ; mov esi, 2 ; jmp rax
0x000000000041fff9 : pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000042251c : pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x00000000004211c6 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004025ce : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040067f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f859 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004100ee : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040dab9 : pop r12 ; pop r13 ; ret
0x0000000000405dc4 : pop r12 ; ret
0x000000000041fffb : pop r13 ; pop r14 ; jmp rax
0x000000000042251e : pop r13 ; pop r14 ; jmp rcx
0x00000000004211c8 : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004025d0 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400681 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f85b : pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004100f0 : pop r13 ; pop r14 ; ret
0x000000000040dabb : pop r13 ; ret
0x000000000041fffd : pop r14 ; jmp rax
0x0000000000422520 : pop r14 ; jmp rcx
0x00000000004211ca : pop r14 ; pop r15 ; jmp rax
0x00000000004025d2 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400683 : pop r14 ; pop r15 ; ret
0x000000000040f85d : pop r14 ; pop rbp ; ret
0x00000000004100f2 : pop r14 ; ret
0x00000000004211cc : pop r15 ; jmp rax
0x00000000004025d4 : pop r15 ; pop rbp ; ret
0x0000000000400685 : pop r15 ; ret
0x00000000004b3008 : pop rax ; adc al, 0xfc ; jmp qword ptr [rax]
0x00000000004b0194 : pop rax ; add byte ptr [r8], al ; cwde ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x000000000041e7b4 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x0000000000461249 : pop rax ; and eax, 0x48b4800 ; clc ; jmp rax
0x000000000045ee89 : pop rax ; idiv edi ; dec dword ptr [rax + 0x63] ; retf
0x000000000045ddbd : pop rax ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xac20
0x00000000004a4e24 : pop rax ; je 0x4a4e27 ; call qword ptr [rax]
0x00000000004a4e3c : pop rax ; je 0x4a4e3f ; jmp qword ptr [rbx]
0x00000000004a4e38 : pop rax ; je 0x4a4e3f ; lcall [rax + 0x74] ; std ; jmp qword ptr [rbx]
0x0000000000481c3c : pop rax ; jmp qword ptr [rax]
0x00000000004941d0 : pop rax ; mov dl, 0xf9 ; jmp qword ptr [rax]
0x0000000000492272 : pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x0000000000481cf6 : pop rax ; pop rdx ; pop rbx ; ret
0x0000000000415714 : pop rax ; ret
0x00000000004a9323 : pop rax ; retf
0x0000000000495834 : pop rax ; sti ; dec dword ptr [rsi + rdi - 5] ; call rsp
0x000000000048f111 : pop rax ; sub byte ptr [rbp + 1], cl ; retf
0x00000000004af608 : pop rax ; xchg eax, esi ; clc ; call qword ptr [rax]
0x00000000004565c9 : pop rbp ; add al, 0x4d ; cmp ebp, ebx ; jb 0x456641 ; mov rdx, rax ; jmp 0x456598
0x0000000000460e02 : pop rbp ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004a8dc5 : pop rbp ; insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x00000000004167e0 : pop rbp ; jmp rax
0x0000000000475768 : pop rbp ; mov eax, 0x101 ; syscall
0x0000000000486ce3 : pop rbp ; mov eax, 0x89fd8945 ; ret 0xe283
0x0000000000400a8b : pop rbp ; mov edi, 0x6babd0 ; jmp rax
0x000000000042397a : pop rbp ; mov rdi, rax ; jmp 0x40043e
0x00000000004a7720 : pop rbp ; movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x0000000000488bbf : pop rbp ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044e24f : pop rbp ; pop r12 ; jmp 0x45acc5
0x000000000044a7c0 : pop rbp ; pop r12 ; jmp rax
0x000000000044a7a5 : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x000000000041fff8 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000042251b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x00000000004211c5 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040067e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004100ed : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040dab8 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000405dc3 : pop rbp ; pop r12 ; ret
0x000000000041fffc : pop rbp ; pop r14 ; jmp rax
0x000000000042251f : pop rbp ; pop r14 ; jmp rcx
0x00000000004211c9 : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x00000000004025d1 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400682 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000040f85c : pop rbp ; pop r14 ; pop rbp ; ret
0x00000000004100f1 : pop rbp ; pop r14 ; ret
0x0000000000484588 : pop rbp ; pop rbx ; ret
0x0000000000400a98 : pop rbp ; ret
0x000000000040fdcf : pop rbp ; retf
0x000000000044ff8c : pop rbp ; test al, 0xe8 ; pop rbp ; retf
0x00000000004851d1 : pop rbx ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000048c65d : pop rbx ; add dword ptr [rax + 1], ecx ; retf
0x00000000004a6718 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004482c6 : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004a6716 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000416724 : pop rbx ; jmp rax
0x000000000046d888 : pop rbx ; loopne 0x46d892 ; dec dword ptr [rcx + 0x63] ; ret
0x000000000047fe17 : pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x0000000000448311 : pop rbx ; mov eax, eax ; ret
0x00000000004106ff : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046600d : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000417269 : pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x000000000041ac83 : pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x000000000040f858 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000457c0c : pop rbx ; pop r12 ; ret
0x000000000048ace9 : pop rbx ; pop r14 ; ret
0x00000000004167df : pop rbx ; pop rbp ; jmp rax
0x0000000000423979 : pop rbx ; pop rbp ; mov rdi, rax ; jmp 0x40043f
0x000000000044e24e : pop rbx ; pop rbp ; pop r12 ; jmp 0x45acc6
0x0000000000470eb1 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000044a7a4 : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x000000000041fff7 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000042251a : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x0000000000410124 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040dab7 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000405dc2 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000401bc6 : pop rbx ; pop rbp ; ret
0x0000000000400db8 : pop rbx ; ret
0x00000000004a9a00 : pop rbx ; ret 0x6f9
0x00000000004a6edd : pop rbx ; retf
0x000000000044e190 : pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x0000000000405dde : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000417232 : pop rbx ; xor edx, edx ; jmp rax
0x000000000042a0b7 : pop rcx ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000046114c : pop rcx ; and eax, 0x48b4800 ; clc ; jmp rax
0x000000000042a797 : pop rcx ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004558b3 : pop rcx ; ret 0xfffa
0x0000000000449424 : pop rcx ; ret 4
0x0000000000492950 : pop rcx ; scasd eax, dword ptr [rdi] ; idiv edi ; retf
0x0000000000494035 : pop rcx ; stc ; jmp qword ptr [rax + 0x10fff95a]
0x00000000004b52d9 : pop rcx ; std ; call qword ptr [rdx]
0x000000000042dfe8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004b17e9 : pop rdi ; add byte ptr [rax], al ; xchg eax, esp ; xchg eax, esp ; cli ; call qword ptr [rcx]
0x000000000043fe2d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042fa09 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f819 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004a8cbe : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000496540 : pop rdi ; jb 0x496545 ; ljmp [rdx] ; jb 0x496549 ; jmp rdx
0x00000000004211cd : pop rdi ; jmp rax
0x00000000004a7c81 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x000000000044b492 : pop rdi ; mov rdi, qword ptr [r13] ; call r12
0x000000000044a9b9 : pop rdi ; or byte ptr [rcx - 0x77], cl ; retf
0x000000000044a985 : pop rdi ; or byte ptr [rcx - 0xa], al ; ret
0x000000000042f639 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f469 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f565 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042f4b1 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004025d5 : pop rdi ; pop rbp ; ret
0x0000000000400686 : pop rdi ; ret
0x000000000046c7bd : pop rdi ; stosb byte ptr [rdi], al ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000042ac96 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x00000000004610f0 : pop rdx ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004190d2 : pop rdx ; jae 0x4190d9 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a88a1 : pop rdx ; je 0x4a886b ; ret 0xacfc
0x00000000004a89b3 : pop rdx ; leave ; retf
0x00000000004a9867 : pop rdx ; out 0xf5, eax ; mov ch, 0xab ; ret
0x000000000044be94 : pop rdx ; pop r10 ; ret
0x0000000000481cf7 : pop rdx ; pop rbx ; ret
0x000000000044beb9 : pop rdx ; pop rsi ; ret
0x0000000000449935 : pop rdx ; ret
0x00000000004a8883 : pop rdx ; retf
0x0000000000494039 : pop rdx ; stc ; call qword ptr [rax]
0x00000000004a93d0 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000042c7d4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42c7aa
0x000000000042c852 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42c828
0x000000000042cce4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42ccba
0x000000000042cd62 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42cd38
0x000000000043fd2e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004204c6 : pop rsi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004609a9 : pop rsi ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004583a6 : pop rsi ; cmp byte ptr [rcx - 0x77], cl ; push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x000000000041fffe : pop rsi ; jmp rax
0x0000000000422521 : pop rsi ; jmp rcx
0x000000000044b462 : pop rsi ; mov rdi, qword ptr [r13] ; call r12
0x00000000004211cb : pop rsi ; pop r15 ; jmp rax
0x00000000004025d3 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000400684 : pop rsi ; pop r15 ; ret
0x000000000040f85e : pop rsi ; pop rbp ; ret
0x00000000004100f3 : pop rsi ; ret
0x000000000043d8c0 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042af94 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004b1471 : pop rsp ; add byte ptr [rax], al ; jae 0x4b1477 ; call qword ptr [rdx]
0x00000000004b14f1 : pop rsp ; add byte ptr [rax], al ; jl 0x4b156f ; cli ; jmp rax
0x000000000043e5c0 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x000000000041cabb : pop rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000460e50 : pop rsp ; and eax, 0x48b4800 ; clc ; jmp rax
0x000000000044e251 : pop rsp ; jmp 0x45acc3
0x000000000044a7c2 : pop rsp ; jmp rax
0x00000000004add84 : pop rsp ; mov ch, 0xf6 ; call qword ptr [rsi]
0x000000000044a7a7 : pop rsp ; mov esi, 2 ; jmp rax
0x000000000041fffa : pop rsp ; pop r13 ; pop r14 ; jmp rax
0x000000000042251d : pop rsp ; pop r13 ; pop r14 ; jmp rcx
0x00000000004211c7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004025cf : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400680 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f85a : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004100ef : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040daba : pop rsp ; pop r13 ; ret
0x0000000000401d73 : pop rsp ; ret
0x0000000000477fe2 : pop rsp ; ret 2
0x0000000000401e36 : pop rsp ; retf
0x0000000000482a5a : pop rsp ; retf 0x4df0
0x00000000004a8a27 : pop rsp ; sbb ebp, ebx ; retf
0x000000000046ff9c : popfq ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x000000000040f804 : popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000046ab7d : popfq ; call 0xffffffffc3caab87
0x000000000046a8bf : popfq ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a89ac : popfq ; jrcxz 0x4a8971 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x000000000048c82e : popfq ; ret 0xf45
0x00000000004094bf : popfq ; retf
0x000000000040fd6a : popfq ; retf 0x2a
0x00000000004a9762 : popfq ; retf 0xde4f
0x00000000004b0039 : popfq ; stc ; call qword ptr [rbx]
0x0000000000494359 : popfq ; stc ; call rax
0x0000000000435392 : psllq mm1, qword ptr [r15] ; jg 0x4353ad ; ret
0x0000000000437eb2 : psllq mm1, qword ptr [r15] ; jg 0x437ecd ; ret
0x0000000000435393 : psllq mm1, qword ptr [rdi] ; jg 0x4353ac ; ret
0x0000000000437eb3 : psllq mm1, qword ptr [rdi] ; jg 0x437ecc ; ret
0x00000000004443a6 : psllq mm1, qword ptr [rdi] ; jg 0x4443ba ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000004443a5 : psllq mm1, qword ptr [rdi] ; jg 0x4443bb ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000444407 : psllq mm1, qword ptr [rdi] ; jg 0x44441c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004945bd : psubd mm7, mm7 ; xchg byte ptr [rdi], cl ; cli ; call qword ptr [rsi]
0x00000000004a7784 : push -0x30 ; retf 0xe72e
0x00000000004a6e0e : push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004a8fb5 : push -0x57d3205 ; call 0xffffffffab585ab5
0x00000000004a6fc1 : push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x000000000045e2b2 : push -0x7c000003 ; ret
0x0000000000444cc4 : push -0x9ffffff ; ret 0x7501
0x00000000004acd45 : push -0xa ; call qword ptr [rax]
0x0000000000403fb8 : push -0xcec28c ; call 0x4201d7
0x00000000004a87b5 : push 0x1b6e41b5 ; std ; retf
0x0000000000494e50 : push 0x29 ; cli ; call qword ptr [rax]
0x0000000000414524 : push 0x2a ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000494390 : push 0x30fff9da ; fdiv st(1), st(0) ; call qword ptr [rax]
0x0000000000411d2d : push 0x48 ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000004885b4 : push 0x4800001f ; mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x0000000000479be5 : push 0x48b4901 ; and al, 0x83 ; ret
0x00000000004725cc : push 0x48fff8de ; mov ecx, eax ; jmp 0x4725a0
0x00000000004586ac : push 0x4cffffff ; mov edi, esi ; call rdx
0x0000000000494065 : push 0x68f0fff9 ; stc ; jmp rax
0x0000000000494069 : push 0x69e0fff9 ; stc ; call rax
0x00000000004a9442 : push 0x6e ; ja 0x4a93cd ; ret 0x48f
0x0000000000417875 : push 0x74c98548 ; and cl, byte ptr [rax + 0x39] ; retf
0x0000000000416157 : push 0x74c98548 ; sub byte ptr [rax + 0x39], cl ; retf
0x000000000041749a : push 0x75c08548 ; ret
0x00000000004a8d22 : push 0xfd4cbe ; retf 0xf64
0x0000000000494ebf : push qword ptr [rax + 0x2b] ; cli ; jmp rax
0x00000000004941bf : push qword ptr [rax + 0x40fff995] ; xchg eax, esi ; stc ; jmp rax
0x000000000049498b : push qword ptr [rax + 0x40fffa03] ; add edi, edx ; jmp rax
0x0000000000494563 : push qword ptr [rax + 0x40fffa12] ; adc bh, dl ; call rax
0x0000000000494c73 : push qword ptr [rax + 0x40fffa36] ; cli ; call rax
0x0000000000494a5b : push qword ptr [rax + 0x40fffa39] ; cmp edx, edi ; call rax
0x0000000000494023 : push qword ptr [rax + 0x53] ; stc ; jmp rax
0x0000000000495fab : push qword ptr [rax + 0x6b] ; sti ; dec dword ptr [rax + 0x6b] ; sti ; jmp qword ptr [rax]
0x0000000000494957 : push qword ptr [rax + 0xa] ; cli ; jmp rax
0x0000000000493f8b : push qword ptr [rax + 0xa] ; stc ; inc eax ; and ecx, edi ; jmp rax
0x00000000004944b3 : push qword ptr [rax - 0x26] ; stc ; inc dword ptr [rax - 0x24] ; stc ; jmp qword ptr [rax]
0x000000000049511b : push qword ptr [rax - 0x3f000509] ; idiv edx ; call rax
0x00000000004950c3 : push qword ptr [rax - 0x3f00050e] ; cli ; call rax
0x0000000000494f8b : push qword ptr [rax - 0x3f0005bb] ; cli ; call rax
0x000000000049428f : push qword ptr [rax - 0x4f] ; stc ; push qword ptr [rax] ; mov bl, 0xf9 ; call qword ptr [rax]
0x00000000004947c3 : push qword ptr [rax] ; add eax, 0x4a0fffa ; cli ; call qword ptr [rax]
0x000000000049451f : push qword ptr [rax] ; enter -7, -0x80 ; leave ; stc ; call rax
0x0000000000494393 : push qword ptr [rax] ; fdiv st(1), st(0) ; call qword ptr [rax]
0x000000000048e1cd : push qword ptr [rax] ; jne 0x48e200 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048f02d : push qword ptr [rax] ; jne 0x48f060 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x00000000004942f7 : push qword ptr [rax] ; mov ah, 0xf9 ; call qword ptr [rax]
0x000000000049427b : push qword ptr [rax] ; mov bh, 0xf9 ; call qword ptr [rax]
0x0000000000494293 : push qword ptr [rax] ; mov bl, 0xf9 ; call qword ptr [rax]
0x00000000004942af : push qword ptr [rax] ; mov cl, 0xf9 ; push rax ; mov dl, 0xf9 ; call rax
0x000000000049420f : push qword ptr [rax] ; mov dl, 0xf9 ; push rax ; mov bl, 0xf9 ; call rax
0x0000000000494033 : push qword ptr [rax] ; pop rcx ; stc ; jmp qword ptr [rax + 0x10fff95a]
0x0000000000494057 : push qword ptr [rax] ; stc ; jmp qword ptr [rax]
0x0000000000497427 : push qword ptr [rax] ; sub edi, esp ; jmp rax
0x0000000000495073 : push qword ptr [rax] ; test eax, 0xaa80fffa ; cli ; call rax
0x0000000000446648 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x000000000044a858 : push qword ptr [rbp + 0x35] ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044a830 : push qword ptr [rbp + 0x3d] ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b460 : push qword ptr [rbp + 0x5e] ; mov rdi, qword ptr [r13] ; call r12
0x000000000044b490 : push qword ptr [rbp + 0x5f] ; mov rdi, qword ptr [r13] ; call r12
0x000000000042c059 : push qword ptr [rbp + 4] ; vzeroupper ; ret
0x00000000004719f8 : push qword ptr [rbp + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x000000000041729d : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000471a1e : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00000000004948ff : push qword ptr [rbp + rax - 6] ; jmp rsp
0x0000000000417706 : push qword ptr [rbp + rcx - 0x18] ; ret 0x8a
0x000000000047f4cb : push qword ptr [rbp - 0x2e] ; ret
0x0000000000417ad0 : push qword ptr [rbp - 0x44] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004614cb : push qword ptr [rbp - 0x4b8] ; push rax ; call 0x45d779
0x000000000044964c : push qword ptr [rbx + 1] ; ret
0x00000000004946d7 : push qword ptr [rbx + rdx + 0x1344fffa] ; cli ; call rsp
0x000000000049294b : push qword ptr [rbx - 0x51] ; idiv edi ; pop rcx ; scasd eax, dword ptr [rdi] ; idiv edi ; retf
0x0000000000495f9b : push qword ptr [rcx + rbp*2] ; sti ; call rax
0x0000000000495f97 : push qword ptr [rcx + rbp*2] ; sti ; push qword ptr [rcx + rbp*2] ; sti ; call rax
0x000000000045ec34 : push qword ptr [rcx] ; fcmovnb st(0), st(6) ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000047a2cf : push qword ptr [rcx] ; fucomi st(3) ; ret 0x1f0f
0x000000000041587f : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000455063 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000422d36 : push qword ptr [rcx] ; shr al, 0xc2 ; retf
0x00000000004594bd : push qword ptr [rcx] ; shr cl, cl ; retf
0x0000000000494107 : push qword ptr [rcx] ; xchg eax, edi ; stc ; call rcx
0x000000000044911b : push qword ptr [rdi + 0x22] ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x0000000000449cd6 : push qword ptr [rdi + 0x3f] ; ret
0x0000000000449a06 : push qword ptr [rdi + 0x57] ; ret
0x0000000000449933 : push qword ptr [rdi + 0x5a] ; ret
0x000000000045b032 : push qword ptr [rdi + 0xb] ; ret
0x00000000004496da : push qword ptr [rdi + 3] ; ret
0x00000000004499c9 : push qword ptr [rdi + 4] ; ret
0x0000000000449728 : push qword ptr [rdi + 5] ; ret
0x00000000004756ee : push qword ptr [rdi + 7] ; ret
0x000000000044a4a5 : push qword ptr [rdi + 8] ; ret
0x0000000000449a9c : push qword ptr [rdi + 9] ; ret
0x00000000004755a4 : push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x0000000000494847 : push qword ptr [rdx + 4] ; cli ; jmp rdx
0x0000000000494e07 : push qword ptr [rdx + rbp - 6] ; jmp rsp
0x00000000004945ab : push qword ptr [rsi + 0x46fffa11] ; adc edx, edi ; call rsi
0x0000000000494aa3 : push qword ptr [rsi + 0x46fffa38] ; cmp dl, bh ; call rsi
0x00000000004784fa : push qword ptr [rsi + rbx - 0x17] ; retf
0x00000000004aa8e3 : push qword ptr [rsi - 0x591c0003] ; std ; jmp rbx
0x0000000000494143 : push qword ptr [rsi - 0x6a] ; stc ; call qword ptr [rsi]
0x0000000000411506 : push qword ptr [rsp + rcx - 0x18] ; ret 0xec
0x00000000004166d2 : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004a6e6c : push r8 ; xor byte ptr [rcx], ah ; retf
0x0000000000494764 : push rax ; adc bh, dl ; jmp rax
0x0000000000470afa : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000418481 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000041c50d : push rax ; adc dh, dh ; ret 0xf0f
0x0000000000493f64 : push rax ; adc ecx, edi ; call qword ptr [rax - 0x2f0006ee]
0x0000000000454f1f : push rax ; add al, 0xe9 ; cmp eax, 0x89fffff3 ; retf 0xe283
0x00000000004b3fa0 : push rax ; add byte ptr [rax], al ; add ah, bh ; ret 0xfffc
0x00000000004166d3 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004239fc : push rax ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000400f00 : push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x0000000000487822 : push rax ; and eax, dword ptr [rax] ; jne 0x487854 ; ret
0x000000000045124f : push rax ; call 0x44d523
0x00000000004614d1 : push rax ; call 0x45d773
0x000000000044e928 : push rax ; call rbx
0x000000000049514f : push rax ; clc ; cli ; inc dword ptr [rax] ; stc ; cli ; jmp qword ptr [rax]
0x00000000004b2c70 : push rax ; cld ; sti ; jmp qword ptr [rbx]
0x0000000000494fa1 : push rax ; cli ; call qword ptr [rax]
0x0000000000494f9b : push rax ; cli ; inc dword ptr [rax] ; push rax ; cli ; call qword ptr [rax]
0x0000000000470624 : push rax ; cmp byte ptr [rax + 1], cl ; ret
0x0000000000494c5c : push rax ; cmp edx, edi ; jmp rax
0x0000000000495127 : push rax ; idiv edx ; inc dword ptr [rax] ; clc ; cli ; call qword ptr [rax]
0x0000000000495093 : push rax ; int1 ; cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x00000000004a4e48 : push rax ; jbe 0x4a4e4b ; jmp qword ptr [rbx]
0x00000000004a4ea4 : push rax ; je 0x4a4ea7 ; jmp qword ptr [rbx]
0x000000000044a37c : push rax ; jo 0x44a382 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000472049 : push rax ; lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00000000004a6eda : push rax ; lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x0000000000494213 : push rax ; mov bl, 0xf9 ; call rax
0x00000000004add70 : push rax ; mov ch, 0xf6 ; call qword ptr [rsi]
0x00000000004941f7 : push rax ; mov ch, 0xf9 ; call rax
0x0000000000494278 : push rax ; mov ch, 0xf9 ; push qword ptr [rax] ; mov bh, 0xf9 ; call qword ptr [rax]
0x000000000049429b : push rax ; mov dh, 0xf9 ; call rax
0x00000000004941f0 : push rax ; mov dl, 0xf9 ; call qword ptr [rax]
0x00000000004942b3 : push rax ; mov dl, 0xf9 ; call rax
0x0000000000450b61 : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004942e0 : push rax ; mov eax, 0xba20fff9 ; stc ; jmp qword ptr [rax]
0x0000000000494248 : push rax ; mov ebp, 0xbf50fff9 ; stc ; jmp rax
0x0000000000493f54 : push rax ; or al, 0xf9 ; call qword ptr [rax - 0x2f0006f3]
0x0000000000494953 : push rax ; or bh, dl ; push qword ptr [rax + 0xa] ; cli ; jmp rax
0x0000000000485a01 : push rax ; or byte ptr [rax - 0x73], cl ; or al, 0xca ; jmp 0x485a19
0x0000000000419202 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x000000000041a52a : push rax ; or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000044b17d : push rax ; or byte ptr [rbx + 0x94801e2], al ; ret 0x8949
0x000000000041cf05 : push rax ; or byte ptr [rcx - 0xa], al ; ret 0xf04
0x000000000044cf7b : push rax ; or dh, dh ; ret 0x8902
0x000000000041dc42 : push rax ; or dh, dh ; ret 0xf02
0x00000000004949a8 : push rax ; or dl, bh ; call rax
0x0000000000494794 : push rax ; or edi, edx ; call rax
0x00000000004949a0 : push rax ; or edx, edi ; call rax
0x00000000004824ae : push rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000488665 : push rax ; pop rbx ; ret
0x0000000000494067 : push rax ; push 0x69e0fff9 ; stc ; call rax
0x00000000004784f9 : push rax ; push qword ptr [rsi + rbx - 0x17] ; retf
0x0000000000450b63 : push rax ; push rsp ; ret
0x000000000049508c : push rax ; pushfq ; cli ; jmp rax
0x000000000044f304 : push rax ; retf
0x000000000041b864 : push rax ; sbb byte ptr [rax + 0x39], cl ; retf 0x850f
0x0000000000418476 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000471b39 : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x0000000000494ec8 : push rax ; sub bh, dl ; inc eax ; sub edx, edi ; jmp qword ptr [rax]
0x0000000000494ebb : push rax ; sub edi, edx ; push qword ptr [rax + 0x2b] ; cli ; jmp rax
0x0000000000497423 : push rax ; sub edi, esp ; push qword ptr [rax] ; sub edi, esp ; jmp rax
0x00000000004a6e6d : push rax ; xor byte ptr [rcx], ah ; retf
0x000000000048a0ea : push rbp ; add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x000000000048cb92 : push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x00000000004b0d91 : push rbp ; add byte ptr [rax], al ; sub al, 3 ; cli ; jmp qword ptr [rdx]
0x000000000047fc38 : push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000041050d : push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000048166c : push rbp ; or byte ptr [rcx + 0x33], cl ; add byte ptr [r8 + 9], r9b ; ret 0x840f
0x00000000004754cd : push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x00000000004b5c06 : push rbp ; ret
0x0000000000410ab6 : push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000040104f : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047faaf : push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000484d87 : push rbx ; add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412f18 : push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x0000000000447835 : push rbx ; jb 0x447845 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000471a32 : push rbx ; je 0x471a96 ; pop rbp ; pop r12 ; ret
0x0000000000471abe : push rbx ; je 0x471b22 ; pop rbp ; pop r12 ; ret
0x00000000004754ce : push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x0000000000412f14 : push rbx ; or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000044b38f : push rbx ; ret
0x0000000000403a69 : push rbx ; retf 0xffff
0x0000000000494025 : push rbx ; stc ; jmp rax
0x00000000004a889c : push rbx ; xchg eax, edx ; jae 0x4a887b ; push rsi ; pop rdx ; je 0x4a8870 ; ret 0xacfc
0x000000000041eb22 : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041ae5b : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000041b1d7 : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0xb277
0x00000000004b09cd : push rcx ; add byte ptr [rax], al ; push rdi ; sti ; hlt ; jmp qword ptr [rbx]
0x000000000044b82b : push rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004a7b25 : push rcx ; call qword ptr [rsi]
0x000000000045e726 : push rcx ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004387ed : push rcx ; jl 0x43883e ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000438954 : push rcx ; jl 0x4389a5 ; adc dword ptr [rcx + 7], edi ; ret
0x0000000000479261 : push rcx ; or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0x1475
0x0000000000479233 : push rcx ; or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0xe75
0x000000000041581b : push rcx ; ret 0xffff
0x000000000041996d : push rcx ; sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x00000000004940ec : push rcx ; xchg eax, ebx ; stc ; call rcx
0x00000000004940e4 : push rcx ; xchg eax, edx ; stc ; call rcx
0x00000000004940f4 : push rcx ; xchg eax, esp ; stc ; jmp rcx
0x0000000000403f6e : push rdi ; adc al, 0xf ; retf 0xfa83
0x000000000044ac18 : push rdi ; adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x0000000000403f5e : push rdi ; adc byte ptr [rdi], cl ; retf 0xd289
0x00000000004448ea : push rdi ; add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x00000000004354f9 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000004b0fed : push rdi ; add byte ptr [rax], al ; rcr byte ptr [rdi], 1 ; cli ; call qword ptr [rdi]
0x00000000004b0f59 : push rdi ; add byte ptr [rax], al ; test byte ptr [rsi], dl ; cli ; call rcx
0x00000000004781a4 : push rdi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044499c : push rdi ; add eax, 0xc478d48 ; ret
0x000000000045ddff : push rdi ; and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000460e9a : push rdi ; and eax, 0x48b4800 ; clc ; jmp rax
0x000000000042f2f8 : push rdi ; clc ; ret
0x000000000042f470 : push rdi ; cld ; ret
0x000000000042ff97 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000434dd9 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000046fe55 : push rdi ; cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000434d59 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000434baa : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004165e4 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000434c3a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000403f4e : push rdi ; or al, 0xf ; retf 0xd289
0x000000000048457a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000048837a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000484581 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000403f43 : push rdi ; or byte ptr [rdi], cl ; retf 0x8941
0x000000000041ab26 : push rdi ; or dh, dh ; ret 0xf02
0x0000000000444b80 : push rdi ; or eax, 0x1c478d48 ; ret
0x000000000042d6ee : push rdi ; ret
0x000000000042d78e : push rdi ; ret 0xff3
0x000000000042d2b3 : push rdi ; retf
0x000000000040fdb0 : push rdi ; retf 0x2a
0x000000000042d333 : push rdi ; retf 0xcab2
0x0000000000419290 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret
0x000000000045de03 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000403f82 : push rdi ; sbb byte ptr [rdi], cl ; retf 0xd289
0x0000000000430197 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f9ba : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x00000000004b09d0 : push rdi ; sti ; hlt ; jmp qword ptr [rbx]
0x000000000042fd97 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000040385c : push rdi ; sub eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047342b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042b4a8 : push rdi ; xor eax, eax ; ret
0x0000000000494638 : push rdx ; adc dl, bh ; jmp rdx
0x0000000000494fa5 : push rdx ; cli ; jmp qword ptr [rax]
0x00000000004248ea : push rdx ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000450b5d : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x0000000000494021 : push rdx ; stc ; push qword ptr [rax + 0x53] ; stc ; jmp rax
0x0000000000494594 : push rsi ; adc al, 0xfa ; jmp rsi
0x000000000042c3d4 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000446ed9 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x446f30 ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000435791 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000435801 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000444335 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000435721 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004442d3 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000042c3e9 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042f422 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042fb91 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f7c5 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f9a5 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042fb85 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f5e5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004a9440 : push rsi ; cli ; push 0x6e ; ja 0x4a93cf ; ret 0x48f
0x0000000000446186 : push rsi ; cmc ; sub eax, edx ; ret
0x000000000045867e : push rsi ; cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000446176 : push rsi ; hlt ; sub eax, edx ; ret
0x0000000000446146 : push rsi ; int1 ; sub eax, edx ; ret
0x00000000004ae551 : push rsi ; jmp rsi
0x00000000004a88a0 : push rsi ; pop rdx ; je 0x4a886c ; ret 0xacfc
0x00000000004945bb : push rsi ; psubd mm7, mm7 ; xchg byte ptr [rdi], cl ; cli ; call qword ptr [rsi]
0x000000000044fb46 : push rsi ; ret
0x0000000000466e36 : push rsi ; retf
0x0000000000409606 : push rsi ; retf 0xffff
0x0000000000469341 : push rsi ; sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x00000000004583aa : push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x000000000045e213 : push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000446156 : push rsi ; sub eax, edx ; ret
0x00000000004a6e68 : push rsi ; xchg eax, ebp ; jge 0x4a6e4d ; push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000049413c : push rsi ; xchg eax, ebp ; stc ; jmp rsi
0x000000000042c3fe : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004ab304 : push rsp ; add al, 0xfe ; jmp rsp
0x00000000004b0d0d : push rsp ; add byte ptr [rax], al ; adc bh, bh ; stc ; call qword ptr [rax]
0x0000000000475951 : push rsp ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x00000000004948fb : push rsp ; add eax, 0x574fffa ; cli ; jmp rsp
0x00000000004826da : push rsp ; and al, 0x10 ; call rdx
0x000000000041cb78 : push rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000041d0d5 : push rsp ; and al, 8 ; call 0x419375
0x0000000000494bf8 : push rsp ; cli ; jmp rsp
0x00000000004b0d90 : push rsp ; push rbp ; add byte ptr [rax], al ; sub al, 3 ; cli ; jmp qword ptr [rdx]
0x0000000000450b64 : push rsp ; ret
0x000000000048915c : push rsp ; ret 0x4808
0x0000000000482b55 : push rsp ; retf 0x48f8
0x0000000000403e97 : push rsp ; sbb eax, 0xfc80f00 ; retf 0xc089
0x00000000004a906a : push rsp ; syscall
0x00000000004af61c : push rsp ; xchg eax, esi ; clc ; jmp qword ptr [rsi]
0x000000000043d580 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004625ae : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000044b407 : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44b418 ; call r12
0x000000000045220a : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x0000000000479ddf : pushfq ; and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x0000000000416d0b : pushfq ; and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x000000000049508d : pushfq ; cli ; jmp rax
0x00000000004b0214 : pushfq ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call rsi
0x000000000043e280 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a454 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x000000000048c867 : pushfq ; ret 0xf45
0x0000000000455870 : pushfq ; ret 0xfffa
0x00000000004b5054 : pushfq ; std ; jmp rsp
0x00000000004b0d0c : rcl byte ptr [rax + rax], 1 ; adc bh, bh ; stc ; call qword ptr [rax]
0x0000000000493f6c : rcl byte ptr [rbx], 1 ; stc ; call qword ptr [rax]
0x0000000000434962 : rcl byte ptr [rdi + 0x28], cl ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000004a91b1 : rcl byte ptr [rdi], cl ; retf
0x00000000004239fb : rcl dword ptr [rax], 1 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004940f0 : rcl dword ptr [rbx - 0x6bae0007], 1 ; stc ; jmp rcx
0x00000000004940e0 : rcl dword ptr [rcx - 0x6dae0007], 1 ; stc ; call rcx
0x000000000049410c : rcl dword ptr [rdi - 0x67b10007], 1 ; stc ; jmp rsi
0x00000000004940e8 : rcl dword ptr [rdx - 0x6cae0007], 1 ; stc ; call rcx
0x00000000004a8cda : rcl dword ptr [rsi + 0x27], cl ; retf 0xc0fe
0x00000000004a889f : rcl dword ptr [rsi + 0x5a], cl ; je 0x4a886d ; ret 0xacfc
0x00000000004a8cd9 : rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x00000000004a889b : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x4a8871 ; ret 0xacfc
0x0000000000493f7c : rcr byte ptr [rax], 1 ; stc ; call qword ptr [rax]
0x0000000000473213 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000405de0 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000410701 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x000000000046600f : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000484587 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000044fb52 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000004148bc : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000040eca6 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000048d498 : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop dword ptr [rax] ; ret
0x00000000004107aa : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x000000000040ff92 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004a8cbd : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004b0ff0 : rcr byte ptr [rdi], 1 ; cli ; call qword ptr [rdi]
0x000000000046114b : rcr dword ptr [rcx + 0x25], 1 ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x0000000000482839 : rcr dword ptr [rcx], 0xc0 ; and eax, 2 ; sub eax, 1 ; ret
0x00000000004a9011 : rcr dword ptr [rcx], cl ; retf 0xbb9a
0x0000000000447014 : rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000447006 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000447d3a : rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000041ee01 : rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000040058b : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400596 ; ret
0x0000000000400416 : ret
0x00000000004006b7 : ret 0
0x000000000049f320 : ret 0x10
0x000000000047b6ca : ret 0x101
0x000000000048455c : ret 0x114d
0x0000000000457bb4 : ret 0x1176
0x000000000047fc3c : ret 0x1272
0x000000000047c7d3 : ret 0x13e9
0x000000000048ad01 : ret 0x145
0x0000000000483a06 : ret 0x1474
0x0000000000479268 : ret 0x1475
0x0000000000475a01 : ret 0x1477
0x00000000004460e8 : ret 0x148
0x00000000004047d4 : ret 0x149
0x0000000000438bac : ret 0x14d
0x000000000040a70a : ret 0x15a
0x000000000046c291 : ret 0x1674
0x000000000044954e : ret 0x16e9
0x00000000004272da : ret 0x17
0x000000000042b986 : ret 0x1776
0x000000000040aac2 : ret 0x18
0x0000000000438ae9 : ret 0x180f
0x000000000042b515 : ret 0x1876
0x000000000040630a : ret 0x19e
0x0000000000457bab : ret 0x1a72
0x00000000004a921a : ret 0x1ad4
0x0000000000407c82 : ret 0x1b
0x00000000004a79ad : ret 0x1b49
0x000000000048edcf : ret 0x1be8
0x00000000004247aa : ret 0x1c6
0x000000000045cd29 : ret 0x1ce9
0x00000000004a0ff0 : ret 0x1d4
0x00000000004a1788 : ret 0x1d5
0x0000000000400c11 : ret 0x1d89
0x000000000040eb62 : ret 0x1f0f
0x000000000041eb26 : ret 0x1f77
0x0000000000459f9d : ret 0x1fe9
0x000000000045abf7 : ret 0x200
0x0000000000477deb : ret 0x2041
0x000000000044a00c : ret 0x2044
0x0000000000461cc7 : ret 0x20be
0x000000000048ac6b : ret 0x2148
0x000000000041398d : ret 0x214c
0x0000000000412f1c : ret 0x2175
0x0000000000490694 : ret 0x22
0x000000000047e9d8 : ret 0x2275
0x0000000000440e58 : ret 0x2288
0x0000000000490ad2 : ret 0x229f
0x00000000004248ba : ret 0x22a
0x000000000042d8f2 : ret 0x2373
0x0000000000481686 : ret 0x23a9
0x000000000047f15a : ret 0x23ce
0x00000000004792ea : ret 0x23fb
0x000000000049fff8 : ret 0x24
0x00000000004780c2 : ret 0x2447
0x0000000000485ee7 : ret 0x24a
0x0000000000459f28 : ret 0x25
0x00000000004160cd : ret 0x2501
0x0000000000467394 : ret 0x2504
0x00000000004237d3 : ret 0x2575
0x000000000048c701 : ret 0x25e9
0x000000000044c2fc : ret 0x26
0x000000000044db65 : ret 0x26e2
0x0000000000473906 : ret 0x2774
0x000000000042f0c6 : ret 0x280f
0x000000000042b505 : ret 0x2876
0x000000000047ea57 : ret 0x28f5
0x000000000042057a : ret 0x29
0x00000000004634ee : ret 0x290f
0x00000000004116d7 : ret 0x2948
0x000000000046642a : ret 0x2949
0x000000000040f070 : ret 0x294c
0x00000000004131fd : ret 0x294d
0x000000000041f9ba : ret 0x299e
0x0000000000422246 : ret 0x29a5
0x0000000000420045 : ret 0x29c7
0x000000000041fb45 : ret 0x29cc
0x0000000000419cba : ret 0x29fb
0x000000000041056d : ret 0x2a
0x000000000041884a : ret 0x2a34
0x00000000004216aa : ret 0x2a7
0x000000000041005a : ret 0x2aab
0x000000000040fb45 : ret 0x2acc
0x0000000000410aba : ret 0x2b48
0x0000000000422efb : ret 0x2b74
0x000000000041ee42 : ret 0x2b75
0x00000000004481b2 : ret 0x2b77
0x00000000004009a5 : ret 0x2b8
0x00000000004029f2 : ret 0x2b8d
0x0000000000478a3a : ret 0x2bc
0x000000000048c6ef : ret 0x2be9
0x000000000041f68e : ret 0x2c75
0x000000000046f225 : ret 0x2e66
0x000000000044c27e : ret 0x2f75
0x0000000000467f55 : ret 0x30be
0x00000000004a04e8 : ret 0x33
0x0000000000452a14 : ret 0x349
0x000000000048aaa0 : ret 0x3575
0x000000000047b39a : ret 0x3774
0x000000000042b966 : ret 0x3776
0x00000000004a8afa : ret 0x3827
0x00000000004700ae : ret 0x3873
0x000000000042b4f5 : ret 0x3876
0x0000000000416b7b : ret 0x389
0x00000000004a7186 : ret 0x38ae
0x000000000048e3b2 : ret 0x38e8
0x0000000000489678 : ret 0x3901
0x000000000048115d : ret 0x3934
0x000000000046d868 : ret 0x3941
0x0000000000411361 : ret 0x3948
0x000000000041211d : ret 0x3949
0x000000000041ef6c : ret 0x394c
0x0000000000468efd : ret 0x394d
0x0000000000446762 : ret 0x3a01
0x000000000042d8db : ret 0x3a73
0x00000000004881c3 : ret 0x3a83
0x000000000040e69a : ret 0x3ab
0x00000000004811ea : ret 0x3b34
0x0000000000447181 : ret 0x3b48
0x0000000000449cef : ret 0x3b8
0x0000000000414179 : ret 0x3c75
0x000000000048111d : ret 0x3d
0x000000000047f3c8 : ret 0x3d73
0x0000000000420741 : ret 0x3d83
0x0000000000464bed : ret 0x3de8
0x000000000041ca9f : ret 0x3de9
0x0000000000463517 : ret 0x3e8
0x000000000047b1fa : ret 0x3e80
0x000000000045a3ab : ret 0x4002
0x000000000040d24d : ret 0x4074
0x0000000000473ef1 : ret 0x408d
0x000000000044c4ca : ret 0x4101
0x0000000000460598 : ret 0x4108
0x0000000000460d45 : ret 0x4110
0x0000000000481197 : ret 0x4134
0x00000000004531c7 : ret 0x415f
0x0000000000450c2e : ret 0x41c3
0x0000000000425f5a : ret 0x4266
0x0000000000470b83 : ret 0x4389
0x0000000000405db1 : ret 0x4401
0x00000000004687ab : ret 0x4404
0x000000000041a47b : ret 0x4466
0x000000000041de13 : ret 0x4473
0x000000000045034a : ret 0x468
0x00000000004a7c84 : ret 0x474c
0x000000000040e094 : ret 0x4801
0x0000000000412316 : ret 0x4803
0x00000000004227e1 : ret 0x4804
0x0000000000440de3 : ret 0x4808
0x0000000000402f86 : ret 0x480a
0x000000000041c4b8 : ret 0x4810
0x000000000045895c : ret 0x4811
0x000000000045dc97 : ret 0x481e
0x000000000045dcb7 : ret 0x4820
0x000000000044e44e : ret 0x4830
0x0000000000425e66 : ret 0x4840
0x0000000000440a98 : ret 0x48c3
0x000000000047cdea : ret 0x48e8
0x0000000000418e93 : ret 0x48e9
0x00000000004a9446 : ret 0x48f
0x0000000000405d4c : ret 0x4901
0x000000000045566b : ret 0x4902
0x00000000004194d2 : ret 0x4908
0x000000000042a42c : ret 0x4910
0x000000000045a7f9 : ret 0x4c01
0x000000000041e7ba : ret 0x4c07
0x000000000045d556 : ret 0x4c40
0x000000000041d476 : ret 0x4d01
0x000000000045c018 : ret 0x4d10
0x000000000040268f : ret 0x4de8
0x00000000004a8ea7 : ret 0x4e27
0x00000000004016be : ret 0x4f76
0x000000000044efcf : ret 0x5089
0x000000000044c0e7 : ret 0x508b
0x000000000042d8c4 : ret 0x5173
0x0000000000449f47 : ret 0x5488
0x00000000004a710c : ret 0x5508
0x0000000000471c4e : ret 0x5590
0x000000000042b946 : ret 0x5776
0x00000000004a93d8 : ret 0x5803
0x00000000004556d1 : ret 0x5841
0x0000000000487b35 : ret 0x5876
0x000000000040e6a3 : ret 0x589
0x00000000004a6de0 : ret 0x591c
0x00000000004a7b47 : ret 0x5ae4
0x000000000042449e : ret 0x5ae9
0x00000000004558b9 : ret 0x5be9
0x000000000040f3aa : ret 0x5d5b
0x00000000004a9872 : ret 0x62c1
0x000000000047c640 : ret 0x6349
0x0000000000485354 : ret 0x637f
0x0000000000458933 : ret 0x6411
0x000000000045b511 : ret 0x6601
0x000000000042b481 : ret 0x6620
0x0000000000423948 : ret 0x66c3
0x000000000047fc4e : ret 0x674
0x000000000042b936 : ret 0x6776
0x00000000004a6dff : ret 0x67b2
0x0000000000417125 : ret 0x6874
0x00000000004495fa : ret 0x6ae9
0x00000000004a9a01 : ret 0x6f9
0x0000000000421e17 : ret 0x708
0x00000000004172a1 : ret 0x7401
0x00000000004227aa : ret 0x7402
0x000000000047c6aa : ret 0x7403
0x000000000044a671 : ret 0x7404
0x0000000000471a22 : ret 0x7408
0x0000000000412a2d : ret 0x7420
0x0000000000464444 : ret 0x7450
0x0000000000480e5a : ret 0x7472
0x0000000000444cc9 : ret 0x7501
0x0000000000444cd6 : ret 0x7502
0x0000000000444ce3 : ret 0x7504
0x000000000041eacd : ret 0x7508
0x0000000000444c9b : ret 0x7510
0x00000000004103c2 : ret 0x7520
0x00000000004247ce : ret 0x7540
0x0000000000475960 : ret 0x7577
0x000000000042c7b2 : ret 0x7677
0x0000000000482af2 : ret 0x777
0x00000000004843b6 : ret 0x77f
0x0000000000402de1 : ret 0x7ce9
0x000000000042b421 : ret 0x7e20
0x000000000042b89c : ret 0x7e40
0x0000000000424b0c : ret 0x7f10
0x000000000046da80 : ret 0x7f3c
0x000000000043308e : ret 0x80
0x0000000000425ce9 : ret 0x8000
0x000000000048e072 : ret 0x8001
0x0000000000476da7 : ret 0x8116
0x000000000045fd6b : ret 0x8148
0x000000000048e5c8 : ret 0x8166
0x000000000041d1a0 : ret 0x820f
0x0000000000454ef3 : ret 0x8301
0x000000000047d3c7 : ret 0x8303
0x000000000042c380 : ret 0x830f
0x000000000045db64 : ret 0x8341
0x0000000000402c0b : ret 0x8348
0x0000000000446be0 : ret 0x8349
0x000000000047f23f : ret 0x8364
0x0000000000471366 : ret 0x840
0x0000000000475d59 : ret 0x8401
0x0000000000412125 : ret 0x840f
0x0000000000453c40 : ret 0x841
0x000000000048b31e : ret 0x8440
0x0000000000479de7 : ret 0x848b
0x000000000046eec9 : ret 0x8502
0x00000000004132b2 : ret 0x850f
0x0000000000458293 : ret 0x8511
0x000000000044a9a2 : ret 0x8545
0x0000000000402b62 : ret 0x8548
0x00000000004237fa : ret 0x854d
0x0000000000405c21 : ret 0x8575
0x00000000004013f2 : ret 0x860f
0x000000000041ae5f : ret 0x870f
0x00000000004a671e : ret 0x871e
0x000000000046da87 : ret 0x875
0x000000000042b525 : ret 0x876
0x0000000000402c8c : ret 0x8801
0x0000000000451f3d : ret 0x8804
0x000000000045b562 : ret 0x8841
0x000000000047e32e : ret 0x8844
0x000000000040247a : ret 0x8901
0x000000000044cf7e : ret 0x8902
0x00000000004125aa : ret 0x8908
0x000000000045db56 : ret 0x8941
0x000000000041f72f : ret 0x8944
0x0000000000403e3f : ret 0x8948
0x00000000004137da : ret 0x8949
0x0000000000410dd1 : ret 0x894c
0x000000000048356b : ret 0x894e
0x000000000041770a : ret 0x8a
0x0000000000487d60 : ret 0x8b
0x0000000000450869 : ret 0x8b01
0x000000000046f51a : ret 0x8b04
0x0000000000475af3 : ret 0x8b05
0x000000000046f3cb : ret 0x8b08
0x00000000004a8f4e : ret 0x8b36
0x000000000041d681 : ret 0x8b41
0x000000000046db23 : ret 0x8b44
0x0000000000413c03 : ret 0x8b48
0x0000000000411586 : ret 0x8b49
0x00000000004834ee : ret 0x8b4a
0x000000000040d45d : ret 0x8b4c
0x0000000000464cad : ret 0x8c0f
0x000000000045d5b1 : ret 0x8d04
0x000000000048c51f : ret 0x8d0f
0x000000000041cd7c : ret 0x8d44
0x0000000000419971 : ret 0x8d48
0x000000000046818c : ret 0x8d49
0x0000000000482897 : ret 0x8d4a
0x000000000041de94 : ret 0x8d4c
0x000000000045db72 : ret 0x8d89
0x0000000000452a0b : ret 0x8e0f
0x000000000045de1a : ret 0x8f0f
0x0000000000440265 : ret 0x90c3
0x0000000000423f19 : ret 0x90e9
0x0000000000477eae : ret 0x9174
0x000000000048b15b : ret 0x9272
0x0000000000480ea0 : ret 0x92e8
0x000000000041b17d : ret 0x948
0x00000000004734c8 : ret 0x94c
0x0000000000484d82 : ret 0x950f
0x0000000000448f80 : ret 0x9572
0x00000000004a7d73 : ret 0x9576
0x000000000046076f : ret 0x958b
0x000000000042273e : ret 0x976
0x000000000047d173 : ret 0x9be9
0x000000000046de19 : ret 0x9e8
0x0000000000487245 : ret 0x9eb
0x000000000049eb20 : ret 0xa
0x00000000004aea9e : ret 0xa01
0x000000000044a698 : ret 0xa076
0x00000000004494c4 : ret 0xa0e9
0x000000000048c5de : ret 0xa4e9
0x00000000004a7a63 : ret 0xa514
0x000000000048c6dd : ret 0xa5e9
0x000000000045aa8a : ret 0xa8e8
0x000000000044b63d : ret 0xabe
0x000000000040fc56 : ret 0xac20
0x00000000004a7ee7 : ret 0xac65
0x000000000046626e : ret 0xace8
0x00000000004a88a4 : ret 0xacfc
0x000000000045f5af : ret 0xae9
0x000000000042363a : ret 0xaeeb
0x00000000004ac09f : ret 0xb00e
0x00000000004119ed : ret 0xb074
0x000000000041b1db : ret 0xb277
0x000000000046527e : ret 0xb2c8
0x000000000045649b : ret 0xb2eb
0x00000000004494b0 : ret 0xb4e9
0x000000000045db96 : ret 0xb589
0x000000000048a055 : ret 0xb5e8
0x0000000000402c45 : ret 0xb60f
0x0000000000400f04 : ret 0xb70f
0x0000000000469df5 : ret 0xb8
0x000000000046bb9c : ret 0xb848
0x000000000048e432 : ret 0xb8e8
0x00000000004a7dae : ret 0xb9b9
0x000000000046d3d5 : ret 0xb9e9
0x000000000046efa4 : ret 0xba41
0x0000000000422e73 : ret 0xbae9
0x00000000004565d2 : ret 0xbaeb
0x000000000048cb96 : ret 0xbc80
0x000000000045db82 : ret 0xbd89
0x0000000000480fa2 : ret 0xbe0f
0x00000000004a7b04 : ret 0xbe57
0x000000000040403a : ret 0xbfbf
0x0000000000425ba9 : ret 0xc000
0x0000000000403176 : ret 0xc031
0x000000000045897e : ret 0xc083
0x000000000042b2e0 : ret 0xc085
0x000000000040e0d6 : ret 0xc148
0x000000000041b2f9 : ret 0xc183
0x0000000000404908 : ret 0xc189
0x000000000044a332 : ret 0xc221
0x000000000041f76b : ret 0xc275
0x0000000000476906 : ret 0xc283
0x000000000042d794 : ret 0xc2b2
0x000000000044821e : ret 0xc35b
0x0000000000457d6d : ret 0xc389
0x000000000041f76d : ret 0xc3f3
0x00000000004a62a2 : ret 0xc4c3
0x00000000004a76b8 : ret 0xc4ff
0x000000000042b901 : ret 0xc540
0x0000000000457e36 : ret 0xc589
0x000000000046344c : ret 0xc689
0x000000000047f21d : ret 0xc74
0x00000000004411a0 : ret 0xc748
0x0000000000469048 : ret 0xc789
0x0000000000481032 : ret 0xc829
0x0000000000461e13 : ret 0xc839
0x0000000000416b6c : ret 0xc883
0x0000000000460847 : ret 0xc985
0x000000000046f4b3 : ret 0xc9eb
0x0000000000440db1 : ret 0xc9ff
0x00000000004008c1 : ret 0xca21
0x00000000004783ef : ret 0xcbe9
0x00000000004a714a : ret 0xcca7
0x00000000004a922d : ret 0xcd11
0x0000000000405112 : ret 0xce80
0x000000000049ef20 : ret 0xd
0x0000000000420fee : ret 0xd020
0x000000000040dee6 : ret 0xd021
0x000000000044babf : ret 0xd029
0x00000000004642cb : ret 0xd120
0x0000000000401224 : ret 0xd284
0x000000000045792a : ret 0xd285
0x000000000048eb18 : ret 0xd2e8
0x0000000000479e76 : ret 0xd348
0x000000000044f947 : ret 0xd5e9
0x00000000004813df : ret 0xd75
0x000000000045cf56 : ret 0xd774
0x00000000004a8cc5 : ret 0xd8f
0x000000000040ff43 : ret 0xdaf7
0x000000000045411a : ret 0xdb76
0x00000000004a8da6 : ret 0xdcd9
0x00000000004a7d22 : ret 0xde5d
0x00000000004a6ab1 : ret 0xde9e
0x0000000000425a69 : ret 0xe000
0x0000000000444c59 : ret 0xe074
0x000000000044d6d0 : ret 0xe083
0x00000000004b52c4 : ret 0xe0a
0x000000000048c7a1 : ret 0xe1e9
0x000000000044d502 : ret 0xe1eb
0x000000000040daf0 : ret 0xe281
0x0000000000400c45 : ret 0xe283
0x00000000004731d8 : ret 0xe575
0x00000000004658d0 : ret 0xe57f
0x000000000046624a : ret 0xe583
0x0000000000448212 : ret 0xe680
0x000000000046692f : ret 0xe683
0x00000000004a8ec6 : ret 0xe71f
0x000000000047923a : ret 0xe75
0x0000000000422f26 : ret 0xe775
0x0000000000465f03 : ret 0xe7e9
0x000000000042bf65 : ret 0xe883
0x0000000000478db6 : ret 0xe8c0
0x0000000000402f1a : ret 0xe901
0x0000000000402f5f : ret 0xe902
0x0000000000440e46 : ret 0xe908
0x000000000043d3e6 : ret 0xe910
0x000000000045e3dd : ret 0xe920
0x00000000004a7227 : ret 0xe970
0x00000000004481aa : ret 0xea81
0x000000000040dbbd : ret 0xeab8
0x0000000000400c2d : ret 0xeac1
0x000000000047da76 : ret 0xeb01
0x000000000046f3e3 : ret 0xeb04
0x000000000042a45a : ret 0xeb10
0x0000000000481202 : ret 0xeb34
0x000000000041150a : ret 0xec
0x00000000004a99d8 : ret 0xec2
0x000000000045cee0 : ret 0xed75
0x00000000004a967a : ret 0xef32
0x000000000048c368 : ret 0xef89
0x0000000000475f3f : ret 0xefeb
0x000000000042924e : ret 0xf
0x0000000000425929 : ret 0xf000
0x00000000004055f5 : ret 0xf01
0x000000000041ab29 : ret 0xf02
0x000000000041cf09 : ret 0xf04
0x0000000000411c73 : ret 0xf08
0x000000000041adf9 : ret 0xf0f
0x000000000040e3ee : ret 0xf10
0x000000000046674b : ret 0xf20
0x000000000041d073 : ret 0xf275
0x0000000000463806 : ret 0xf3f
0x0000000000466cd3 : ret 0xf40
0x000000000046fe5d : ret 0xf41
0x000000000048c81c : ret 0xf45
0x0000000000423b19 : ret 0xf475
0x00000000004517c6 : ret 0xf48
0x00000000004004fd : ret 0xf49
0x0000000000466cb9 : ret 0xf50
0x0000000000423d65 : ret 0xf5e8
0x00000000004897e6 : ret 0xf608
0x00000000004755b5 : ret 0xf631
0x0000000000425ee6 : ret 0xf66
0x000000000047aec7 : ret 0xf675
0x000000000046ff1c : ret 0xf741
0x0000000000405842 : ret 0xf748
0x0000000000482adc : ret 0xf749
0x00000000004257e9 : ret 0xf800
0x00000000004a6990 : ret 0xf869
0x00000000004188a3 : ret 0xf8b
0x0000000000463801 : ret 0xf8c1
0x00000000004406c6 : ret 0xf8c5
0x0000000000448554 : ret 0xf8e9
0x00000000004650e2 : ret 0xf9b3
0x0000000000494634 : ret 0xfa10
0x0000000000494d18 : ret 0xfa30
0x0000000000494b2c : ret 0xfa37
0x000000000045c772 : ret 0xfa3c
0x000000000041f452 : ret 0xfae9
0x00000000004517e2 : ret 0xfaec
0x00000000004957f0 : ret 0xfb3e
0x000000000041fa3a : ret 0xfbe9
0x00000000004256a9 : ret 0xfc00
0x00000000004245c1 : ret 0xfc3
0x0000000000490d7a : ret 0xfc98
0x0000000000425569 : ret 0xfe00
0x0000000000400d75 : ret 0xfe83
0x000000000042376a : ret 0xfea4
0x0000000000422d3a : ret 0xfecb
0x0000000000425429 : ret 0xff00
0x0000000000434c01 : ret 0xff2
0x000000000044d67b : ret 0xff25
0x000000000042c129 : ret 0xff2d
0x0000000000425e8a : ret 0xff3
0x000000000046aef7 : ret 0xff31
0x00000000004252e9 : ret 0xff80
0x00000000004664d1 : ret 0xff83
0x00000000004540ac : ret 0xff85
0x000000000045d542 : ret 0xffa0
0x00000000004237ca : ret 0xffa5
0x000000000040b09a : ret 0xffaf
0x000000000040ad9a : ret 0xffb2
0x0000000000411087 : ret 0xffb8
0x000000000040dc0a : ret 0xffc0
0x00000000004234d8 : ret 0xffdf
0x0000000000425069 : ret 0xffe0
0x000000000046d4b4 : ret 0xffe7
0x0000000000468169 : ret 0xffe8
0x0000000000449565 : ret 0xffe9
0x000000000040f0d1 : ret 0xffef
0x0000000000422ef2 : ret 0xfff
0x000000000040da32 : ret 0xfff0
0x000000000046a8e0 : ret 0xfff1
0x00000000004af451 : ret 0xfff7
0x0000000000424de9 : ret 0xfff8
0x000000000041c9a8 : ret 0xfffa
0x0000000000404829 : ret 0xfffb
0x0000000000424ca9 : ret 0xfffc
0x0000000000418325 : ret 0xfffd
0x000000000042196a : ret 0xfffe
0x000000000041581c : ret 0xffff
0x0000000000403fbf : ret 1
0x000000000041fbac : ret 2
0x000000000040fbd9 : ret 3
0x0000000000409ef8 : ret 4
0x0000000000438c94 : ret 5
0x000000000049e6c8 : ret 6
0x000000000042a9ea : ret 7
0x0000000000409f58 : ret 8
0x000000000044570a : ret 9
0x0000000000401322 : retf
0x0000000000411b62 : retf 0
0x000000000049f480 : retf 0x11
0x000000000048828d : retf 0x114d
0x00000000004772c0 : retf 0x12b9
0x0000000000455edf : retf 0x12e9
0x0000000000462269 : retf 0x147f
0x0000000000472b13 : retf 0x148
0x0000000000432f6c : retf 0x14c
0x00000000004273b2 : retf 0x16
0x000000000048448d : retf 0x194d
0x000000000044bdd2 : retf 0x19b8
0x00000000004070a4 : retf 0x1b
0x000000000048fb0a : retf 0x1bc
0x000000000040ec01 : retf 0x1be
0x000000000041e428 : retf 0x1be9
0x0000000000402f02 : retf 0x1d2
0x00000000004a1028 : retf 0x1d4
0x00000000004a17c8 : retf 0x1d5
0x000000000042b850 : retf 0x1f0f
0x00000000004b0512 : retf 0x2000
0x000000000046d6d1 : retf 0x20be
0x00000000004145a1 : retf 0x2148
0x000000000048f910 : retf 0x22
0x000000000041b183 : retf 0x2274
0x000000000048f50a : retf 0x22cc
0x000000000047f902 : retf 0x23
0x0000000000401465 : retf 0x230
0x00000000004861c2 : retf 0x2366
0x00000000004855f2 : retf 0x2372
0x000000000047a592 : retf 0x23fc
0x000000000046e7eb : retf 0x24
0x000000000047543d : retf 0x2473
0x000000000045fee4 : retf 0x25
0x0000000000465ff6 : retf 0x255f
0x000000000047f842 : retf 0x25b
0x000000000044f368 : retf 0x26
0x000000000044df1e : retf 0x26de
0x000000000042ded9 : retf 0x280f
0x000000000041ce1d : retf 0x29
0x00000000004716da : retf 0x2941
0x0000000000409a9f : retf 0x2948
0x0000000000410e2e : retf 0x294c
0x000000000040fd6b : retf 0x2a
0x000000000041db98 : retf 0x2a74
0x000000000040f35b : retf 0x2a7e
0x00000000004a7b9c : retf 0x2a91
0x000000000044a432 : retf 0x2ae
0x0000000000457bbf : retf 0x2c73
0x0000000000457b99 : retf 0x2c76
0x00000000004a701a : retf 0x2c90
0x0000000000477f6f : retf 0x2de9
0x000000000044c561 : retf 0x2e75
0x0000000000458202 : retf 0x30e8
0x0000000000401428 : retf 0x31
0x00000000004347f6 : retf 0x3148
0x00000000004a8e05 : retf 0x3159
0x00000000004a8e6d : retf 0x32dd
0x00000000004a0528 : retf 0x33
0x00000000004a7723 : retf 0x33e6
0x00000000004a7c51 : retf 0x3617
0x00000000004347d2 : retf 0x377
0x000000000041e730 : retf 0x3948
0x0000000000471440 : retf 0x3949
0x000000000041944a : retf 0x394c
0x000000000041f7bd : retf 0x3d83
0x00000000004a9266 : retf 0x3d8a
0x00000000004a6afb : retf 0x3ec
0x000000000044d6d5 : retf 0x4102
0x000000000044d821 : retf 0x4110
0x0000000000453bde : retf 0x4180
0x0000000000425f3c : retf 0x4266
0x0000000000453943 : retf 0x4280
0x000000000048a21d : retf 0x42f6
0x0000000000400df2 : retf 0x440
0x000000000043d05a : retf 0x4466
0x00000000004656a6 : retf 0x45e9
0x0000000000454344 : retf 0x4689
0x00000000004030c2 : retf 0x47b
0x0000000000419505 : retf 0x4801
0x0000000000417191 : retf 0x4802
0x000000000040d83c : retf 0x4805
0x000000000040d8a7 : retf 0x4806
0x0000000000471a27 : retf 0x4808
0x000000000040d758 : retf 0x4809
0x000000000040d998 : retf 0x480a
0x000000000040d95c : retf 0x480d
0x0000000000410d43 : retf 0x4810
0x0000000000410e41 : retf 0x4820
0x0000000000482b56 : retf 0x48f8
0x000000000041cf13 : retf 0x4901
0x0000000000459a33 : retf 0x4a8d
0x000000000041db6a : retf 0x4b74
0x0000000000417143 : retf 0x4c01
0x00000000004230b2 : retf 0x4c89
0x0000000000489779 : retf 0x4d20
0x0000000000448c7f : retf 0x4da
0x0000000000484458 : retf 0x4de8
0x0000000000482a5b : retf 0x4df0
0x000000000048447c : retf 0x4df8
0x000000000041e3f2 : retf 0x51e9
0x0000000000466796 : retf 0x53c
0x0000000000485362 : retf 0x557f
0x000000000048aed6 : retf 0x5774
0x000000000048519d : retf 0x5d5b
0x0000000000479f05 : retf 0x5f6
0x000000000040e8cc : retf 0x6411
0x000000000042dfc3 : retf 0x6601
0x000000000042e113 : retf 0x6602
0x000000000042e263 : retf 0x6603
0x000000000042e3b3 : retf 0x6604
0x000000000042e503 : retf 0x6605
0x000000000042e653 : retf 0x6606
0x000000000042e7a3 : retf 0x6607
0x000000000042e8f3 : retf 0x6608
0x000000000042ea43 : retf 0x6609
0x000000000042eb93 : retf 0x660a
0x000000000042ece3 : retf 0x660b
0x000000000042ee33 : retf 0x660c
0x000000000042ef83 : retf 0x660d
0x000000000042f0d3 : retf 0x660e
0x000000000042f223 : retf 0x660f
0x00000000004347f1 : retf 0x676
0x00000000004a9185 : retf 0x67ca
0x00000000004756e1 : retf 0x6b8
0x00000000004a7182 : retf 0x6ee8
0x0000000000423122 : retf 0x6ff
0x00000000004a9046 : retf 0x7272
0x000000000041fe0f : retf 0x728
0x00000000004a881f : retf 0x76a5
0x0000000000411343 : retf 0x775
0x00000000004a76a2 : retf 0x79f5
0x0000000000449e4b : retf 0x8041
0x000000000042b783 : retf 0x8148
0x000000000041e042 : retf 0x820f
0x00000000004109f0 : retf 0x830f
0x0000000000413d51 : retf 0x8310
0x0000000000412d3d : retf 0x8320
0x0000000000454747 : retf 0x8341
0x0000000000419502 : retf 0x8348
0x000000000042a3ff : retf 0x8349
0x00000000004199e0 : retf 0x840f
0x00000000004a7f90 : retf 0x8481
0x0000000000414756 : retf 0x850f
0x00000000004008c3 : retf 0x8545
0x000000000044128b : retf 0x8548
0x000000000042b2a9 : retf 0x860f
0x0000000000432fbc : retf 0x870f
0x0000000000489820 : retf 0x8820
0x000000000045392d : retf 0x8880
0x00000000004230b8 : retf 0x8902
0x00000000004013e4 : retf 0x8904
0x0000000000411d80 : retf 0x8920
0x000000000044a68a : retf 0x8940
0x0000000000403f46 : retf 0x8941
0x0000000000460480 : retf 0x8944
0x0000000000402e93 : retf 0x8948
0x000000000042d9f9 : retf 0x8949
0x0000000000410cec : retf 0x894c
0x0000000000455a3a : retf 0x8966
0x000000000045398e : retf 0x8980
0x0000000000485852 : retf 0x8b41
0x000000000040487b : retf 0x8b48
0x00000000004056fc : retf 0x8b49
0x000000000042fdf9 : retf 0x8b4c
0x0000000000419a1e : retf 0x8d48
0x000000000042b1b9 : retf 0x8d4a
0x00000000004441dd : retf 0x8d4c
0x000000000041e43b : retf 0x8e9
0x000000000042a33d : retf 0x9066
0x000000000045a4a0 : retf 0x9273
0x00000000004a88ee : retf 0x93a2
0x000000000041def6 : retf 0x948
0x000000000046cf0c : retf 0x98e9
0x00000000004a8c8b : retf 0x99e0
0x000000000044a680 : retf 0x9b9
0x00000000004a8ffa : retf 0x9d7d
0x00000000004a9905 : retf 0xa020
0x00000000004a6e65 : retf 0xa1eb
0x00000000004a8eeb : retf 0xa2fe
0x000000000041d209 : retf 0xa74
0x00000000004a8fbc : retf 0xab0d
0x000000000040e6fd : retf 0xade9
0x00000000004a950e : retf 0xae32
0x0000000000426662 : retf 0xb
0x000000000041e191 : retf 0xb2e9
0x00000000004a7d09 : retf 0xb51a
0x000000000042bde2 : retf 0xb60f
0x0000000000487932 : retf 0xb786
0x000000000048adb2 : retf 0xb801
0x0000000000454754 : retf 0xb941
0x0000000000487d50 : retf 0xba
0x000000000041cf41 : retf 0xba41
0x000000000046f0d2 : retf 0xbb41
0x00000000004a9013 : retf 0xbb9a
0x0000000000485a06 : retf 0xbeb
0x00000000004a905d : retf 0xbf4b
0x000000000046d62c : retf 0xc
0x00000000004568a8 : retf 0xc031
0x0000000000402613 : retf 0xc089
0x00000000004a8cdd : retf 0xc0fe
0x000000000040e08a : retf 0xc148
0x000000000047348e : retf 0xc149
0x0000000000460da5 : retf 0xc239
0x00000000004649a2 : retf 0xc4
0x0000000000458cfd : retf 0xc6
0x0000000000465621 : retf 0xc7
0x0000000000423e54 : retf 0xc748
0x0000000000473743 : retf 0xc985
0x000000000042d334 : retf 0xcab2
0x00000000004a62aa : retf 0xcccb
0x000000000040a9d7 : retf 0xd
0x0000000000458362 : retf 0xd0e8
0x00000000004a7ac6 : retf 0xd1cb
0x000000000044831f : retf 0xd231
0x0000000000414e05 : retf 0xd284
0x0000000000451214 : retf 0xd285
0x0000000000403f51 : retf 0xd289
0x00000000004a91d7 : retf 0xd39
0x0000000000448116 : retf 0xd975
0x00000000004a9763 : retf 0xde4f
0x0000000000412321 : retf 0xdeb
0x00000000004a7d93 : retf 0xdf7f
0x0000000000407026 : retf 0xe
0x00000000004a783e : retf 0xe152
0x0000000000447f53 : retf 0xe175
0x0000000000485a2b : retf 0xe275
0x0000000000454460 : retf 0xe283
0x00000000004789b9 : retf 0xe474
0x0000000000447dec : retf 0xe475
0x00000000004a7e1c : retf 0xe496
0x000000000045e127 : retf 0xe677
0x00000000004a7786 : retf 0xe72e
0x00000000004a6e13 : retf 0xe80
0x000000000047782b : retf 0xe802
0x0000000000465895 : retf 0xe87f
0x000000000040d8d9 : retf 0xe903
0x000000000048414c : retf 0xe972
0x00000000004612a5 : retf 0xe9ff
0x0000000000483a9b : retf 0xea72
0x00000000004121e3 : retf 0xea77
0x00000000004a8dcc : retf 0xea91
0x000000000048810b : retf 0xeac0
0x000000000041b492 : retf 0xeac1
0x0000000000424a81 : retf 0xead3
0x000000000040d892 : retf 0xeb04
0x000000000040d8f1 : retf 0xeb07
0x000000000040d7b8 : retf 0xeb08
0x000000000040d9bf : retf 0xeb0b
0x000000000040d992 : retf 0xeb0c
0x00000000004a6eed : retf 0xeb83
0x00000000004a96e1 : retf 0xebbf
0x000000000041708b : retf 0xee75
0x000000000047e337 : retf 0xee7c
0x00000000004331fc : retf 0xf01
0x000000000043337c : retf 0xf02
0x00000000004334fc : retf 0xf03
0x000000000043367c : retf 0xf04
0x00000000004337fc : retf 0xf05
0x000000000043397c : retf 0xf06
0x0000000000433afc : retf 0xf07
0x0000000000433c7c : retf 0xf08
0x0000000000433dfc : retf 0xf09
0x0000000000433f7c : retf 0xf0a
0x00000000004340fc : retf 0xf0b
0x000000000043427c : retf 0xf0c
0x00000000004343fc : retf 0xf0d
0x000000000043457c : retf 0xf0e
0x00000000004346fc : retf 0xf0f
0x000000000043ec2d : retf 0xf1c5
0x000000000045dbab : retf 0xf41
0x0000000000440bf0 : retf 0xf48
0x0000000000473971 : retf 0xf4c
0x0000000000472b16 : retf 0xf631
0x00000000004a8d28 : retf 0xf64
0x0000000000424963 : retf 0xf66
0x000000000042c39a : retf 0xf748
0x000000000041d76d : retf 0xf989
0x000000000043ecff : retf 0xf9c5
0x0000000000494720 : retf 0xfa12
0x0000000000494c10 : retf 0xfa33
0x0000000000494c18 : retf 0xfa39
0x0000000000403f71 : retf 0xfa83
0x000000000046379a : retf 0xfac1
0x0000000000465912 : retf 0xfb0d
0x000000000046e342 : retf 0xfb15
0x00000000004907f2 : retf 0xfca3
0x0000000000473616 : retf 0xfdc5
0x000000000048264b : retf 0xfe8
0x000000000042c1c7 : retf 0xfec5
0x0000000000435021 : retf 0xff2
0x000000000042c7cb : retf 0xff3
0x000000000040db64 : retf 0xff31
0x0000000000489952 : retf 0xff8c
0x00000000004035c4 : retf 0xffbf
0x000000000046dad2 : retf 0xffde
0x000000000040b8b9 : retf 0xffe7
0x0000000000487482 : retf 0xfff3
0x000000000046494a : retf 0xfff5
0x0000000000453a27 : retf 0xfff6
0x00000000004af499 : retf 0xfff7
0x000000000045e742 : retf 0xfff8
0x000000000048e522 : retf 0xfff9
0x000000000045469e : retf 0xfffa
0x00000000004659ff : retf 0xfffb
0x000000000040e1e1 : retf 0xfffc
0x0000000000423980 : retf 0xfffd
0x00000000004111ce : retf 0xfffe
0x00000000004039f7 : retf 0xffff
0x0000000000423092 : retf 1
0x0000000000426f62 : retf 2
0x0000000000453172 : retf 3
0x000000000040e5b9 : retf 4
0x00000000004a2bd4 : retf 5
0x0000000000409dea : retf 6
0x00000000004a2fd4 : retf 7
0x00000000004a31d4 : retf 8
0x000000000042c4eb : retf 9
0x00000000004944e0 : rol bh, 0xf9 ; call qword ptr [rax]
0x0000000000446825 : rol bl, 0x48 ; mov eax, edi ; ret
0x0000000000448313 : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x000000000048e1ec : rol bl, 0x66 ; nop ; mov rax, qword ptr [rsi + 8] ; ret
0x000000000042b47e : rol bl, 0x83 ; ret 0x6620
0x000000000047472b : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000418487 : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000042bc4d : rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000004944d4 : rol bl, 1 ; stc ; jmp qword ptr [rax]
0x00000000004471cd : rol byte ptr [r9 + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x0000000000425e62 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000042b96b : rol byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x0000000000473902 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000004a29c0 : rol byte ptr [rax + rax], 0 ; ret 4
0x0000000000479de1 : rol byte ptr [rax], 0 ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000042c6bd : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044cf8b : rol byte ptr [rax], 0 ; add dh, dh ; ret 0x7404
0x000000000048d21e : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000040fa69 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000042b6c2 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000485a25 : rol byte ptr [rbx + 0x394800d3], 1 ; retf 0xe275
0x000000000048283b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x00000000004188f8 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x00000000004531c1 : rol byte ptr [rbx - 0x76befb08], 1 ; ret 0x415f
0x0000000000474992 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000004481a1 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000046671f : rol byte ptr [rcx + 0xf], 0x94 ; ret
0x00000000004471ce : rol byte ptr [rcx + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x00000000004008be : rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x000000000046d3d2 : rol byte ptr [rcx - 0x77], 1 ; ret 0xb9e9
0x0000000000474972 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000004647a2 : rol byte ptr [rcx], 0x39 ; retf
0x000000000044e926 : rol byte ptr [rcx], 0x50 ; call rbx
0x000000000045947b : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000448537 : rol byte ptr [rcx], 0x83 ; ret 0xf01
0x00000000004103bd : rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0x7520
0x0000000000448550 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x00000000004239bb : rol byte ptr [rcx], 1 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000044e171 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000494f90 : rol byte ptr [rdi - 6], 0xff ; ror byte ptr [rcx - 6], 1 ; jmp rax
0x00000000004749d2 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x0000000000474982 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000048be56 : rol byte ptr [rdx], 0xe9 ; retf 0xfffc
0x00000000004749c2 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000043ede5 : rol ch, 1 ; jns 0x43edc4 ; retf 0xead3
0x000000000043ef35 : rol ch, 1 ; jns 0x43ef14 ; retf 0xead3
0x000000000043f085 : rol ch, 1 ; jns 0x43f064 ; retf 0xead3
0x000000000043f1d5 : rol ch, 1 ; jns 0x43f1b4 ; retf 0xead3
0x000000000043f325 : rol ch, 1 ; jns 0x43f304 ; retf 0xead3
0x000000000043f475 : rol ch, 1 ; jns 0x43f454 ; retf 0xead3
0x000000000043f5c5 : rol ch, 1 ; jns 0x43f5a4 ; retf 0xead3
0x000000000043f715 : rol ch, 1 ; jns 0x43f6f4 ; retf 0xead3
0x000000000043f865 : rol ch, 1 ; jns 0x43f844 ; retf 0xead3
0x000000000043f9b5 : rol ch, 1 ; jns 0x43f994 ; retf 0xead3
0x000000000043fb05 : rol ch, 1 ; jns 0x43fae4 ; retf 0xead3
0x000000000043fc55 : rol ch, 1 ; jns 0x43fc34 ; retf 0xead3
0x000000000043fda5 : rol ch, 1 ; jns 0x43fd84 ; retf 0xead3
0x000000000043fef5 : rol ch, 1 ; jns 0x43fed4 ; retf 0xead3
0x0000000000440045 : rol ch, 1 ; jns 0x440024 ; retf 0xead3
0x000000000042b9ef : rol ch, 1 ; std ; xlatb ; ret
0x0000000000473676 : rol ch, cl ; std ; xlatb ; ret
0x0000000000440d5f : rol ch, cl ; std ; xlatb ; ret 0xc085
0x00000000004a62a0 : rol cl, 0xc2 ; ret
0x000000000047491c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x0000000000447f4c : rol dword ptr [rax + 0x48000000], 0x39 ; retf 0xe175
0x0000000000447de8 : rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x00000000004372c0 : rol dword ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000042b4a4 : rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x000000000042b9e3 : rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000440833 : rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000457ab3 : rol dword ptr [rbx + 0x26], 0 ; ret
0x0000000000478099 : rol dword ptr [rcx], 0 ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000400929 : rol dword ptr [rcx], 0x8d ; call r11
0x000000000045696f : rol dword ptr [rcx], 0xf ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x00000000004b050e : rol dword ptr [rdx + 0xe], 8 ; retf 0x2000
0x0000000000419319 : rol dword ptr [rdx + rbp], cl ; add bl, dh ; ret
0x0000000000454a2a : rol dword ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047360e : rol ebp, 1 ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x000000000042c125 : rol ebp, 1 ; stc ; xlatb ; ret 0xff2d
0x0000000000422ebc : rol ebx, 0x66 ; nop ; xor eax, eax ; ret
0x0000000000422ebb : rol r11d, 0x66 ; nop ; xor eax, eax ; ret
0x000000000048f6b4 : ror ah, 1 ; and al, byte ptr [rax] ; test eax, eax ; je 0x48f6c9 ; ret
0x0000000000472325 : ror byte ptr [r9 + rcx*4 - 1], 0x41 ; call rsp
0x000000000048aa88 : ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x000000000042b4f2 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x42b539 ; add rax, rdi ; ret
0x0000000000440bf7 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000047463c : ror byte ptr [rax + 0x29], 1 ; clc ; shr rax, 2 ; ret
0x000000000041123e : ror byte ptr [rax + 0x29], 1 ; ret
0x00000000004035ca : ror byte ptr [rax + 0x2de8002b], cl ; retf 0xffbf
0x0000000000475a0c : ror byte ptr [rax + 0x39], 0xd7 ; ja 0x475a3f ; ret
0x000000000044be68 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000041dd43 : ror byte ptr [rax + 0x39], 1 ; ret
0x000000000047c96a : ror byte ptr [rax + 0x39], cl ; ret
0x00000000004700b3 : ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000044d62d : ror byte ptr [rax + 0x63], cl ; test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000047e896 : ror byte ptr [rax + 0xf], 0x44 ; enter -0x76b8, -0x38 ; ret
0x000000000045f5ab : ror byte ptr [rax + 0xf], 0x44 ; ret 0xae9
0x000000000045ab59 : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000045ab4a : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000042b59c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x000000000042b4c2 : ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000042b9b3 : ror byte ptr [rax + 1], 0xf8 ; vzeroupper ; ret
0x0000000000405993 : ror byte ptr [rax + 1], 1 ; ret
0x0000000000440bf4 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000049edc8 : ror byte ptr [rax + rax], 0 ; ret
0x000000000042bc45 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x000000000048330c : ror byte ptr [rax - 0x3f], 0xe0 ; add ecx, dword ptr [rbp - 0x77] ; ret 0x8d48
0x00000000004664ca : ror byte ptr [rax - 0x3f], 0xe2 ; and byte ptr [rax + 9], cl ; ret 0xff83
0x000000000047a58e : ror byte ptr [rax - 0x73], 0x35 ; retf 0x23fc
0x000000000042b4b2 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x000000000042b4e2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x000000000042b4d2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x0000000000422eee : ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x0000000000479a6a : ror byte ptr [rax - 0x73], cl ; add dword ptr [r15], r9d ; xchg eax, ebp ; ret 0xc283
0x000000000044995a : ror byte ptr [rax - 0x77], 0xee ; mov edi, ebx ; xor eax, eax ; syscall
0x0000000000411480 : ror byte ptr [rax - 0x77], 1 ; ret
0x000000000048aa9d : ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x000000000045a364 : ror byte ptr [rax - 0x77], 1 ; ret 0x894c
0x0000000000413c00 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x000000000048200a : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000040daed : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000041f53d : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004148e1 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x4148f7 ; ret
0x0000000000484d7c : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000416665 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000475923 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x0000000000415881 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000040eb70 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000044aaa4 : ror byte ptr [rax - 0x7d], 1 ; retf 0x4901
0x000000000041231a : ror byte ptr [rax - 0x7d], cl ; loop 0x412322 ; add rdx, rcx ; jmp 0x412338
0x0000000000455065 : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000489675 : ror byte ptr [rax], 0x83 ; ret 0x3901
0x000000000046ebd2 : ror byte ptr [rbp + 0x39441604], cl ; retf 0xf41
0x000000000046f0f2 : ror byte ptr [rbp + 0x39441704], cl ; ret 0xf49
0x000000000047400c : ror byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x0000000000484774 : ror byte ptr [rcx + 0x2b802], 1 ; add byte ptr [rax], al ; ret
0x000000000048c167 : ror byte ptr [rcx + 0x63], 4 ; test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x0000000000472326 : ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x000000000045c066 : ror byte ptr [rcx - 0x73], 0x43 ; adc byte ptr [rdi], cl ; sahf ; ret 0x894c
0x00000000004681b8 : ror byte ptr [rcx - 0x77], cl ; ret
0x000000000044f93f : ror byte ptr [rcx - 0x7d], cl ; cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x0000000000494f94 : ror byte ptr [rcx - 6], 1 ; jmp rax
0x000000000045ae02 : ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x000000000044bd5c : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x0000000000478041 : ror byte ptr [rdi], 0x84 ; clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000045ebac : ror byte ptr [rdi], 0x84 ; lahf ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000041007d : ror byte ptr [rdi], 0x84 ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000475b59 : ror byte ptr [rdi], 0x84 ; nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040f801 : ror byte ptr [rdi], 0x84 ; popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000402766 : ror byte ptr [rdi], 0x84 ; ret
0x0000000000466ccb : ror byte ptr [rdi], 0x84 ; ret 0x17
0x00000000004508c7 : ror byte ptr [rdi], 0x84 ; ret 0xfffc
0x0000000000423cde : ror byte ptr [rdi], 0x84 ; retf
0x000000000044c5e2 : ror byte ptr [rdi], 0x84 ; retf 0
0x000000000040b8b6 : ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x000000000045355c : ror byte ptr [rdi], 0x84 ; retf 0xfffc
0x000000000044112a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x000000000042288f : ror byte ptr [rdi], 0x85 ; ret
0x000000000044c9bf : ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x000000000047db52 : ror byte ptr [rdi], 0x85 ; ret 2
0x000000000046699e : ror byte ptr [rdi], 0x85 ; retf
0x000000000044cab7 : ror byte ptr [rdi], 0x85 ; retf 0xfffd
0x000000000042b82d : ror byte ptr [rdi], 0x85 ; retf 1
0x00000000004634cc : ror byte ptr [rdi], 0x85 ; retf 6
0x000000000042308f : ror byte ptr [rdi], 0x88 ; retf 1
0x0000000000467869 : ror byte ptr [rdi], 0x8f ; ret 7
0x000000000044babc : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000047f629 : ror byte ptr [rdi], 0x94 ; ret
0x000000000048111a : ror byte ptr [rdi], 0x94 ; ret 0x3d
0x000000000046da7d : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x0000000000484d7f : ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000446c9e : ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000041075b : ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x000000000040ff40 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x000000000046ce8a : ror byte ptr [rdi], 0xb6 ; add al, 7 ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000422eeb : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x0000000000447115 : ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000040db02 : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x40daec ; ret
0x00000000004637fe : ror byte ptr [rdi], cl ; ret 0xf8c1
0x0000000000494610 : ror byte ptr [rip + 0x1442fffa], cl ; cli ; call rdx
0x0000000000493f5c : ror byte ptr [rsi], 1 ; stc ; call qword ptr [rax]
0x0000000000494534 : ror dh, 0xf9 ; call qword ptr [rax]
0x0000000000494528 : ror dl, 1 ; stc ; jmp qword ptr [rax]
0x00000000004347d7 : ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x000000000048537e : ror dword ptr [rax + 1], 0xf8 ; sub rax, r8 ; ret
0x0000000000446ca8 : ror dword ptr [rax + 1], 0xf8 ; sub rax, rsi ; ret
0x0000000000440ac4 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0x8948
0x0000000000440be9 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf48
0x000000000047396a : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf4c
0x000000000048ac64 : ror dword ptr [rax - 0x3f], cl ; out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000046f6a6 : ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x0000000000423637 : ror dword ptr [rax - 0x77], 1 ; ret 0xaeeb
0x0000000000479e73 : ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x0000000000465f00 : ror dword ptr [rax - 0x77], 1 ; ret 0xe7e9
0x00000000004585f8 : ror dword ptr [rax - 0x77], 1 ; retf 0x8348
0x000000000044d260 : ror dword ptr [rax - 0x77], 5 ; loopne 0x44d264 ; add cl, ch ; retf
0x0000000000485991 : ror dword ptr [rax - 0x77], cl ; ret
0x000000000041657d : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x416577 ; ret
0x0000000000470abd : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x470ab7 ; ret
0x00000000004659f9 : ror dword ptr [rax - 0x7d], 0xe8 ; add al, 0xe9 ; retf 0xfffb
0x000000000045dcb4 : ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x0000000000483fdd : ror dword ptr [rbp + rcx*4 + 0x14], cl ; ret
0x00000000004658bb : ror dword ptr [rcx - 0x77], 0x14 ; ret 0x8b48
0x0000000000444c57 : ror dword ptr [rcx], cl ; ret 0xe074
0x00000000004940d8 : ror dword ptr [rdi - 0x6f2e0007], 1 ; stc ; call rcx
0x000000000047c15e : ror dword ptr [rdi], 0x84 ; retf 6
0x000000000042cf28 : ror dword ptr [rdi], 0x85 ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d634 : ror dword ptr [rdi], 0x85 ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d406 : ror dword ptr [rdi], 0x85 ; add eax, 0xc0310000 ; ret
0x000000000042d386 : ror dword ptr [rdi], 0x85 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000042d6c4 : ror dword ptr [rdi], 0x85 ; je 0x42d6d4 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d1bb : ror dword ptr [rdi], 0x85 ; jno 0x42d1d0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d283 : ror dword ptr [rdi], 0x85 ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042cf00 : ror dword ptr [rdi], 0x85 ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041657c : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x416578 ; ret
0x0000000000470abc : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x470ab8 ; ret
0x00000000004017de : sahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jbe 0x4017fe ; syscall
0x000000000043f7ee : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004a7185 : sahf ; ret 0x38ae
0x00000000004838d1 : sahf ; ret 0x3948
0x000000000045c06c : sahf ; ret 0x894c
0x000000000048c854 : sahf ; ret 0xf45
0x000000000041cc8e : sahf ; retf
0x000000000049435d : sahf ; stc ; jmp qword ptr [rax]
0x0000000000494bc8 : sahf ; xor al, 0xfa ; ljmp [rsi] ; xor al, 0xfa ; call rsp
0x00000000004188fe : sal bh, 0xd8 ; ret
0x0000000000495120 : sal bh, 0xfa ; call rax
0x0000000000425ce7 : sal bh, 1 ; ret 0x8000
0x0000000000425ba7 : sal bh, 1 ; ret 0xc000
0x0000000000425a67 : sal bh, 1 ; ret 0xe000
0x0000000000425927 : sal bh, 1 ; ret 0xf000
0x00000000004257e7 : sal bh, 1 ; ret 0xf800
0x00000000004256a7 : sal bh, 1 ; ret 0xfc00
0x0000000000425567 : sal bh, 1 ; ret 0xfe00
0x0000000000425427 : sal bh, 1 ; ret 0xff00
0x00000000004252e7 : sal bh, 1 ; ret 0xff80
0x00000000004251a7 : sal bh, 1 ; ret 0xffc0
0x0000000000425067 : sal bh, 1 ; ret 0xffe0
0x0000000000424f27 : sal bh, 1 ; ret 0xfff0
0x0000000000424de7 : sal bh, 1 ; ret 0xfff8
0x0000000000424ca7 : sal bh, 1 ; ret 0xfffc
0x0000000000424b67 : sal bh, 1 ; ret 0xfffe
0x00000000004950f4 : sal bl, 1 ; cli ; push rax ; cli ; call qword ptr [rax]
0x000000000047471f : sal bl, 1 ; ret
0x000000000047f4cd : sal bl, cl ; ret
0x000000000040da2d : sal byte ptr [rax + 0x48], 0xc7 ; ret 0xfff0
0x00000000004897e1 : sal byte ptr [rax + rax*8 + 0x49], 0x83 ; ret 0xf608
0x00000000004499f7 : sal byte ptr [rbp + 0x16], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000449cc7 : sal byte ptr [rbp + 0x16], 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000473bc2 : sal byte ptr [rbp + 0x2b], 0x4c ; mov eax, eax ; vzeroupper ; ret
0x00000000004826ce : sal byte ptr [rbp + 0x4f], 0x89 ; ret
0x0000000000475766 : sal byte ptr [rbp + 0x5d], 0xb8 ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x0000000000405ddb : sal byte ptr [rbp + 0xa], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000048f603 : sal byte ptr [rbp + 0xa], 0xf3 ; ret
0x000000000048f5e8 : sal byte ptr [rbp + 5], 0xf3 ; ret
0x000000000044be81 : sal byte ptr [rbp + 8], 1 ; nop ; mov eax, 0xca ; syscall
0x00000000004148e4 : sal byte ptr [rbp + 9], cl ; ret
0x000000000044be91 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x000000000041749d : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x0000000000446990 : sal byte ptr [rbp - 0x13], cl ; lea rax, [rcx - 1] ; ret
0x0000000000416580 : sal byte ptr [rbp - 0x13], cl ; ret
0x000000000042600b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000040db07 : sal byte ptr [rbp - 0x27], cl ; ret
0x000000000042b9ed : sal byte ptr [rbp - 0x30], 0xc5 ; std ; xlatb ; ret
0x0000000000480f88 : sal byte ptr [rbp - 0x31], cl ; movsx eax, cl ; neg eax ; ret
0x000000000042b9e5 : sal byte ptr [rbp - 0x38], 0xc5 ; std ; xlatb ; ret 0xc085
0x000000000044083d : sal byte ptr [rbp - 0x50], 0xc5 ; std ; xlatb ; ret
0x0000000000440835 : sal byte ptr [rbp - 0x68], 0xc5 ; std ; xlatb ; ret 0xc085
0x000000000047447b : sal byte ptr [rbp - 0xe], cl ; ret
0x00000000004188bc : sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x000000000044cf76 : sal byte ptr [rbx + rbp + 0x48], 0x8b ; push rax ; or dh, dh ; ret 0x8902
0x000000000048723c : sal byte ptr [rbx + rdi + 0x48], cl ; shl edx, 5 ; add rdx, rax ; jmp 0x48725a
0x0000000000440b3c : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000044e922 : sal byte ptr [rcx], 0xd2 ; add eax, 1 ; push rax ; call rbx
0x000000000044be66 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000040ea6c : sal byte ptr [rdx + 0x3948006b], 1 ; ret
0x00000000004738cb : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000040040d : sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 8 ; ret
0x000000000044c79b : sal byte ptr [rdx + rcx + 0x48], cl ; lea edi, [rcx + rax + 0x20] ; jmp rdx
0x0000000000440e53 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x0000000000494a80 : sal byte ptr [rip + 0x3550fffa], 0xfa ; jmp rax
0x0000000000485141 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x000000000047fa89 : sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x000000000048983a : sal byte ptr [rsp + rsi*4 + 0x48], 0x83 ; ret 0xf608
0x00000000004950c8 : sal dl, 0xfa ; call rax
0x00000000004950cc : sal dl, 1 ; cli ; jmp rax
0x0000000000447073 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000480f8d : sal edi, 0xd8 ; ret
0x0000000000479efc : sal esi, cl ; adc dword ptr [rip + 0x20000003], 0x75 ; retf 0x5f6
0x00000000004ae1d5 : sal esi, cl ; call qword ptr [rax]
0x0000000000495148 : sar al, 0xfa ; jmp rax
0x0000000000403030 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret
0x0000000000449603 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000047fe13 : sar bh, 0xff ; lcall [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x00000000004846d0 : sar bh, 0xff ; mov eax, 1 ; ret
0x0000000000402762 : sar byte ptr [rax + 0x5b], 0x85 ; ror byte ptr [rdi], 0x84 ; ret
0x000000000047bd51 : sar byte ptr [rax + 0xe], 0x5b ; ret
0x0000000000494304 : sar byte ptr [rcx - 0x442f0007], 1 ; stc ; call rax
0x0000000000446c4e : sar byte ptr [rcx], 0xc8 ; jle 0x446c90 ; movsxd rax, ecx ; ret
0x000000000044d4fd : sar byte ptr [rcx], cl ; ret
0x0000000000462267 : sar byte ptr [rcx], cl ; retf 0x147f
0x00000000004941ec : sar byte ptr [rdi - 0x4daf0007], 0xf9 ; call qword ptr [rax]
0x0000000000458976 : sar byte ptr [rdx], 0xf ; ret 0xc083
0x00000000004a7b1f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000049516c : sar cl, 0xfa ; jmp rax
0x0000000000494501 : sar cl, cl ; call qword ptr [rax - 0x1f00062d]
0x00000000004632bd : sar cl, cl ; dec dword ptr [rax + 0x29] ; ret
0x00000000004385b3 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x4385be ; ret
0x0000000000447589 : sar dword ptr [rsi + 0x7f], 0x23 ; vzeroupper ; ret
0x0000000000471d1c : sar eax, 2 ; lea eax, [r8 - 1] ; ret
0x000000000048874e : sar eax, 3 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004a7883 : sar ecx, 1 ; jnp 0x4a7844 ; ret
0x0000000000494505 : sar ecx, cl ; jmp rax
0x0000000000415817 : sar edx, 2 ; call 0x411a75
0x0000000000471e22 : sar edx, 2 ; sub eax, edx ; ret
0x000000000042bc47 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000447a43 : sar esi, 1 ; jg 0x447a73 ; vzeroupper ; ret
0x0000000000447bdc : sar esi, 1 ; jg 0x447c0c ; vzeroupper ; ret
0x0000000000471d1b : sar r8, 2 ; lea eax, [r8 - 1] ; ret
0x000000000048874d : sar rax, 3 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000415816 : sar rdx, 2 ; call 0x411a76
0x0000000000415815 : sar rdx, 2 ; call 0x411a77
0x0000000000471e21 : sar rdx, 2 ; sub eax, edx ; ret
0x000000000042bc46 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000004634b5 : sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x000000000044a731 : sbb al, 0 ; add byte ptr [rax], al ; syscall
0x000000000046692d : sbb al, 0x29 ; ret 0xe683
0x00000000004b4f84 : sbb al, 0x35 ; std ; jmp qword ptr [rdx]
0x00000000004b0f58 : sbb al, 0x57 ; add byte ptr [rax], al ; test byte ptr [rsi], dl ; cli ; call rcx
0x0000000000467867 : sbb al, 0x85 ; ror byte ptr [rdi], 0x8f ; ret 7
0x00000000004a8b82 : sbb al, 0x8c ; retf
0x000000000040e052 : sbb al, 7 ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000463f96 : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000406f03 : sbb al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x0000000000469a3b : sbb al, byte ptr fs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000040b098 : sbb al, ch ; ret 0xffaf
0x0000000000409467 : sbb al, ch ; retf
0x00000000004a7912 : sbb bl, byte ptr [rip + 0x30565c9] ; in eax, dx ; retf
0x00000000004a6605 : sbb bl, byte ptr [rsi] ; ret
0x0000000000481cf4 : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000485c54 : sbb byte ptr [r8], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x0000000000484d79 : sbb byte ptr [r9], sil ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x00000000004757f1 : sbb byte ptr [rax + 0x101], bh ; syscall
0x000000000047e331 : sbb byte ptr [rax + 0x29], cl ; ret 0x394c
0x0000000000419291 : sbb byte ptr [rax + 0x39], cl ; ret
0x000000000045de04 : sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000041b865 : sbb byte ptr [rax + 0x39], cl ; retf 0x850f
0x0000000000481cf5 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000469342 : sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x000000000048de5a : sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x000000000048562f : sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; retf 0xc148
0x00000000004826d7 : sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x000000000041f4ed : sbb byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x000000000047f835 : sbb byte ptr [rax - 0x77], cl ; or r9b, bpl ; retf 0xfffd
0x0000000000474350 : sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x000000000047faac : sbb byte ptr [rax - 0x77], cl ; push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004165e1 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000041a23b : sbb byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000048595f : sbb byte ptr [rax - 0x77], cl ; ret
0x00000000004115ee : sbb byte ptr [rax - 0x77], cl ; retf
0x0000000000419a53 : sbb byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000485c55 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x0000000000449641 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000040a54a : sbb byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x0000000000494358 : sbb byte ptr [rbp - 0x612f0007], 0xf9 ; jmp qword ptr [rax]
0x000000000046ada4 : sbb byte ptr [rbp - 0x76befffd], cl ; retf
0x000000000048a8d5 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000041fb08 : sbb byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000044d2dc : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004119b7 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000418477 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000471b3a : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000004581a2 : sbb byte ptr [rcx + 1], cl ; fadd qword ptr [rax - 0x7bf0ffc2] ; retf
0x000000000041996e : sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x000000000047204e : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000049014f : sbb byte ptr [rcx + rdi + 0x6d], cl ; js 0x4901d2 ; ret 0x8b48
0x00000000004b4154 : sbb byte ptr [rcx - 0x32380000], cl ; cld ; jmp qword ptr [rsi]
0x0000000000454428 : sbb byte ptr [rcx - 0x77], al ; ret
0x000000000040dc00 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000041f53b : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000484d7a : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000403f83 : sbb byte ptr [rdi], cl ; retf 0xd289
0x000000000048713b : sbb byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004af654 : sbb byte ptr [rsi], bh ; add byte ptr [rax], al ; cwde ; fprem ; call qword ptr [rax]
0x000000000046c802 : sbb ch, byte ptr [rdx - 0x74b7ffdc] ; add al, 0xf8 ; jmp rax
0x0000000000494450 : sbb cl, 0xf9 ; inc dword ptr [rax - 0x25] ; stc ; jmp qword ptr [rax]
0x0000000000493f7d : sbb cl, bh ; call qword ptr [rax]
0x000000000041dd3d : sbb cl, byte ptr [rax + 0x29480614] ; ror byte ptr [rax + 0x39], 1 ; ret
0x0000000000457bad : sbb cl, byte ptr [rdi] ; mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x000000000043df3d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043fb8a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000043f3aa : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000043f79a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043efba : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ea9d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e27d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000043da5d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000043f159 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e5bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043dd9d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043d57d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000043e75d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000043f64a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ee6a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ff7a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d8bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043d9f3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e6f3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e213 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f54b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043fe7b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043ea33 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043dd33 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000043d853 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e553 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000043f69b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043eebb : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048e185 : sbb dh, bl ; ret
0x0000000000480997 : sbb dl, dh ; jmp r11
0x000000000048872b : sbb dword ptr [rax - 0x7d], ecx ; ret
0x000000000048e079 : sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x000000000044bdd4 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000045cacb : sbb dword ptr [rbx + rdi*8], 0xc03190ff ; ret
0x00000000004612f1 : sbb dword ptr [rbx - 0x52743], eax ; call qword ptr [rax]
0x00000000004a8ebd : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000466210 : sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x0000000000446667 : sbb eax, -1 ; ret
0x000000000048d1d2 : sbb eax, 0x18c48348 ; ret
0x0000000000490210 : sbb eax, 0x22badb ; jne 0x490200 ; pop rbx ; ret
0x00000000004a7913 : sbb eax, 0x30565c9 ; in eax, dx ; retf
0x000000000045e814 : sbb eax, 0x39480001 ; ret
0x000000000041cc98 : sbb eax, 0x5394800 ; lahf ; retf
0x00000000004623e6 : sbb eax, 0x83480001 ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000403e98 : sbb eax, 0xfc80f00 ; retf 0xc089
0x000000000045dc92 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000407c7a : sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe02], al ; ret 0x1b
0x000000000040709c : sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe07], al ; retf 0x1b
0x000000000048283a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x000000000042c0a7 : sbb eax, eax ; or eax, 1 ; ret
0x000000000048dd5f : sbb eax, eax ; ret
0x0000000000446665 : sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000424621 : sbb ebp, dword ptr [rip + 0xf480002] ; ret 0x66c3
0x00000000004a8a28 : sbb ebp, ebx ; retf
0x0000000000460e01 : sbb ebx, dword ptr [rbp + 0x25] ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x0000000000472ae9 : sbb ecx, dword ptr [rbp + 0x29] ; ret 0x8948
0x0000000000450b5e : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x0000000000403edd : sbb ecx, dword ptr [rcx - 0x7d] ; ret
0x0000000000478b69 : sbb edi, dword ptr [rcx - 8] ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004a87b9 : sbb edi, ebp ; retf
0x000000000042b142 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043fbde : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x000000000044e279 : scasb al, byte ptr [rdi] ; call 0x45ad13
0x0000000000492939 : scasb al, byte ptr [rdi] ; idiv edi ; movsd dword ptr [rdi], dword ptr [rsi] ; scasd eax, dword ptr [rdi] ; idiv edi ; retf
0x00000000004928b9 : scasb al, byte ptr [rdi] ; idiv edi ; retf
0x00000000004929b1 : scasb al, byte ptr [rdi] ; idiv edi ; scasw ax, word ptr [rdi] ; idiv edi ; retf
0x00000000004a8e69 : scasb al, byte ptr [rdi] ; or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x0000000000454f5e : scasb al, byte ptr [rdi] ; retf
0x000000000046c76e : scasb al, byte ptr [rdi] ; stosb byte ptr [rdi], al ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000043fcdd : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a3b1d : scasd eax, dword ptr [rdi] ; cld ; jmp qword ptr [rax]
0x00000000004b1af1 : scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rax]
0x00000000004b1ad9 : scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rbx]
0x00000000004b1b05 : scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rdx]
0x000000000049294d : scasd eax, dword ptr [rdi] ; idiv edi ; pop rcx ; scasd eax, dword ptr [rdi] ; idiv edi ; retf
0x000000000049293d : scasd eax, dword ptr [rdi] ; idiv edi ; retf
0x00000000004148ce : scasd eax, dword ptr [rdi] ; nop ; xor eax, eax ; ret
0x000000000040e409 : scasd eax, dword ptr [rdi] ; ret
0x000000000045b0ae : scasd eax, dword ptr [rdi] ; ret 0x148
0x00000000004116d6 : scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000419969 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000448553 : scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x000000000046fc58 : scasd eax, dword ptr [rdi] ; retf
0x000000000047e87d : scasd eax, dword ptr [rdi] ; retf 0x14c
0x00000000004a7b94 : scasd eax, dword ptr [rdi] ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000004a6e0f : scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004929b4 : scasw ax, word ptr [rdi] ; idiv edi ; retf
0x000000000044be6c : setae al ; ret
0x000000000045adda : sete dh ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x00000000004188fc : setne al ; neg eax ; ret
0x000000000044d500 : setne dl ; jmp 0x44d4e8
0x00000000004943a4 : shl bl, 1 ; stc ; call rax
0x000000000042b98b : shl byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x000000000042b94b : shl byte ptr [rax], 0x48 ; add eax, edi ; vzeroupper ; ret
0x0000000000493f90 : shl byte ptr [rcx], 0xf9 ; jmp rax
0x00000000004468af : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x000000000042495b : shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x0000000000444c53 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000440405 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000042d8bb : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042d8d2 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000473466 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000473477 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000042d7b1 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004943a8 : shl ch, 1 ; stc ; call rax
0x00000000004943a0 : shl cl, 1 ; stc ; call rax
0x000000000049fff0 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a771d : shl dword ptr [rax - 0x6a5aa279], 1 ; retf 0x33e6
0x000000000041d76b : shl dword ptr [rcx], 1 ; retf 0xf989
0x0000000000400b08 : shl dword ptr [rdi + 0x5d01002b], cl ; ret
0x00000000004a7a08 : shl dword ptr [rdi - 5], 1 ; ret
0x0000000000446892 : shl dword ptr [rsi + 0x44], 0xf ; out dx, eax ; retf 0x4466
0x000000000042495f : shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x0000000000473462 : shl dword ptr [rsi + 0xf], 0xd7 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000044670b : shl dword ptr [rsi + 0xf], 0xda ; ret
0x000000000042d836 : shl dword ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042d8ed : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042d8d6 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042d8bf : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042c37b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042d851 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042b2dc : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000042d711 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000449074 : shl dword ptr [rsi], 1 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000044e191 : shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000044e18d : shl ecx, 3 ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x0000000000482f0c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000482e97 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000482e66 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000487240 : shl edx, 5 ; add rdx, rax ; jmp 0x487256
0x0000000000482f0b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000482e96 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000482e65 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000048723f : shl rdx, 5 ; add rdx, rax ; jmp 0x487257
0x00000000004235b2 : shr al, 0x48 ; ret
0x0000000000422d38 : shr al, 0xc2 ; retf
0x00000000004a6fc4 : shr al, cl ; add al, 0x3d ; retf
0x0000000000417e37 : shr al, cl ; ret
0x000000000042600f : shr byte ptr [rcx], 0xc8 ; ret
0x0000000000494ecc : shr byte ptr [rcx], 0xfa ; jmp qword ptr [rax]
0x00000000004245ba : shr byte ptr [rcx], cl ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000457958 : shr byte ptr [rcx], cl ; ret
0x000000000042bc4b : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x0000000000495088 : shr byte ptr [rdi - 0x63af0006], 0xfa ; jmp rax
0x00000000004a8dc7 : shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000493fb0 : shr byte ptr [rdx], 0xf9 ; jmp rax
0x000000000048ccb2 : shr cl, 1 ; ret 0xfffe
0x00000000004682fc : shr cl, cl ; jrcxz 0x468308 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000048c7bf : shr cl, cl ; ret
0x00000000004594bf : shr cl, cl ; retf
0x000000000044822a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x000000000047452b : shr eax, 2 ; ret
0x0000000000474a33 : shr eax, 2 ; vzeroupper ; ret
0x0000000000448275 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000041edfe : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000048301c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000482fa1 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000482f70 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000048301b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000482fa0 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000482f6f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000047452a : shr rax, 2 ; ret
0x0000000000474a32 : shr rax, 2 ; vzeroupper ; ret
0x000000000049f1c9 : sldt word ptr [rax] ; ret
0x0000000000453c18 : stc ; add al, 0x74 ; and eax, 0x833fe283 ; retf 0x4180
0x0000000000473d66 : stc ; add byte ptr [rax + rax], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000042b0f7 : stc ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004941b6 : stc ; call qword ptr [rax + 0x20fff994]
0x00000000004943ea : stc ; call qword ptr [rax + 0x20fff9e7]
0x0000000000494502 : stc ; call qword ptr [rax - 0x1f00062d]
0x0000000000494516 : stc ; call qword ptr [rax - 0x1f00063b]
0x0000000000494336 : stc ; call qword ptr [rax - 0x1f000659]
0x00000000004944ce : stc ; call qword ptr [rax - 0x2f000641]
0x0000000000493f76 : stc ; call qword ptr [rax - 0x2f0006e9]
0x0000000000493f66 : stc ; call qword ptr [rax - 0x2f0006ee]
0x0000000000493f56 : stc ; call qword ptr [rax - 0x2f0006f3]
0x0000000000493f5e : stc ; call qword ptr [rax]
0x00000000004afa52 : stc ; call qword ptr [rbx]
0x00000000004b046a : stc ; call qword ptr [rcx]
0x00000000004940b2 : stc ; call qword ptr [rdx]
0x0000000000494146 : stc ; call qword ptr [rsi]
0x0000000000493f5a : stc ; call rax
0x00000000004940d6 : stc ; call rcx
0x00000000004b0216 : stc ; call rsi
0x00000000004af94e : stc ; call rsp
0x0000000000495171 : stc ; cli ; inc dword ptr [rax] ; cli ; cli ; jmp qword ptr [rax]
0x0000000000495169 : stc ; cli ; inc eax ; stc ; cli ; jmp rax
0x0000000000495155 : stc ; cli ; jmp qword ptr [rax]
0x000000000049516d : stc ; cli ; jmp rax
0x00000000004632be : stc ; dec dword ptr [rax + 0x29] ; ret
0x0000000000468a75 : stc ; dec dword ptr [rax - 0x39] ; ret 0xffa0
0x000000000049410e : stc ; dec dword ptr [rsi - 0x68] ; stc ; jmp rsi
0x0000000000494a4e : stc ; dec dword ptr [rsi] ; xor al, 0xfa ; call qword ptr [rax + 0x20fffa3a]
0x000000000049422a : stc ; inc dword ptr [rax + 0x10fff9bf] ; mov dl, 0xf9 ; call rax
0x00000000004941ca : stc ; inc dword ptr [rax + 0x58fff997] ; mov dl, 0xf9 ; jmp qword ptr [rax]
0x0000000000494052 : stc ; inc dword ptr [rax + 0x64] ; stc ; push qword ptr [rax] ; stc ; jmp qword ptr [rax]
0x000000000049443a : stc ; inc dword ptr [rax - 0x21] ; stc ; jmp qword ptr [rax]
0x00000000004944b6 : stc ; inc dword ptr [rax - 0x24] ; stc ; jmp qword ptr [rax]
0x0000000000494452 : stc ; inc dword ptr [rax - 0x25] ; stc ; jmp qword ptr [rax]
0x00000000004943ce : stc ; inc dword ptr [rax - 0x26] ; stc ; inc dword ptr [rax] ; fdiv st(1), st(0) ; jmp rax
0x00000000004944fe : stc ; inc dword ptr [rax - 0x2e] ; stc ; call qword ptr [rax - 0x1f00062d]
0x0000000000494522 : stc ; inc dword ptr [rax - 0x2f000637] ; retf 0xfff9
0x0000000000494342 : stc ; inc dword ptr [rax - 0x2f000655] ; lodsb al, byte ptr [rsi] ; stc ; jmp qword ptr [rax]
0x0000000000494356 : stc ; inc dword ptr [rax - 0x2f000663] ; sahf ; stc ; jmp qword ptr [rax]
0x0000000000494512 : stc ; inc dword ptr [rax - 0x3c] ; stc ; call qword ptr [rax - 0x1f00063b]
0x000000000049430e : stc ; inc dword ptr [rax - 0x3f000669] ; wait ; stc ; call qword ptr [rax]
0x000000000049425e : stc ; inc dword ptr [rax - 0x47] ; stc ; jmp qword ptr [rax]
0x0000000000494332 : stc ; inc dword ptr [rax - 0x5a] ; stc ; call qword ptr [rax - 0x1f000659]
0x00000000004941c2 : stc ; inc dword ptr [rax - 0x6a] ; stc ; jmp rax
0x0000000000493f96 : stc ; inc dword ptr [rax] ; and al, 0xf9 ; jmp qword ptr [rax]
0x00000000004943d2 : stc ; inc dword ptr [rax] ; fdiv st(1), st(0) ; jmp rax
0x00000000004943b6 : stc ; inc dword ptr [rax] ; fdivp st(1) ; jmp rax
0x00000000004941d6 : stc ; inc dword ptr [rax] ; mov dh, 0xf9 ; jmp rax
0x00000000004942fe : stc ; inc dword ptr [rax] ; mov eax, 0xb9d0fff9 ; stc ; call rax
0x0000000000494062 : stc ; inc dword ptr [rax] ; push 0x68f0fff9 ; stc ; jmp rax
0x000000000049401e : stc ; inc dword ptr [rax] ; push rdx ; stc ; push qword ptr [rax + 0x53] ; stc ; jmp rax
0x00000000004941b2 : stc ; inc dword ptr [rax] ; xchg eax, esp ; stc ; call qword ptr [rax + 0x20fff994]
0x0000000000493f8e : stc ; inc eax ; and ecx, edi ; jmp rax
0x00000000004941ea : stc ; inc eax ; mov edi, 0xb250fff9 ; stc ; call qword ptr [rax]
0x0000000000493fae : stc ; inc eax ; sub bh, cl ; jmp rax
0x0000000000494312 : stc ; inc eax ; wait ; stc ; call qword ptr [rax]
0x000000000043ec92 : stc ; je 0x43ec5e ; lea r10, [r10 + r9] ; jmp r10
0x0000000000494036 : stc ; jmp qword ptr [rax + 0x10fff95a]
0x0000000000494a0e : stc ; jmp qword ptr [rax - 0x1f00061a]
0x0000000000493f9a : stc ; jmp qword ptr [rax]
0x00000000004af79a : stc ; jmp qword ptr [rbx]
0x00000000004afe6a : stc ; jmp qword ptr [rcx]
0x00000000004b076e : stc ; jmp qword ptr [rdx]
0x0000000000493f92 : stc ; jmp rax
0x00000000004afa16 : stc ; jmp rbx
0x00000000004940f6 : stc ; jmp rcx
0x00000000004940b6 : stc ; jmp rdx
0x0000000000494112 : stc ; jmp rsi
0x00000000004a7884 : stc ; jnp 0x4a7843 ; ret
0x00000000004941ce : stc ; lcall [rax - 0x4e] ; stc ; jmp qword ptr [rax]
0x000000000049438e : stc ; ljmp [rax - 0x26] ; stc ; push qword ptr [rax] ; fdiv st(1), st(0) ; call qword ptr [rax]
0x0000000000430198 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000429817 : stc ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004941be : stc ; push qword ptr [rax + 0x40fff995] ; xchg eax, esi ; stc ; jmp rax
0x0000000000494022 : stc ; push qword ptr [rax + 0x53] ; stc ; jmp rax
0x0000000000493f8a : stc ; push qword ptr [rax + 0xa] ; stc ; inc eax ; and ecx, edi ; jmp rax
0x00000000004944b2 : stc ; push qword ptr [rax - 0x26] ; stc ; inc dword ptr [rax - 0x24] ; stc ; jmp qword ptr [rax]
0x000000000049428e : stc ; push qword ptr [rax - 0x4f] ; stc ; push qword ptr [rax] ; mov bl, 0xf9 ; call qword ptr [rax]
0x000000000049451e : stc ; push qword ptr [rax] ; enter -7, -0x80 ; leave ; stc ; call rax
0x0000000000494392 : stc ; push qword ptr [rax] ; fdiv st(1), st(0) ; call qword ptr [rax]
0x00000000004942f6 : stc ; push qword ptr [rax] ; mov ah, 0xf9 ; call qword ptr [rax]
0x000000000049427a : stc ; push qword ptr [rax] ; mov bh, 0xf9 ; call qword ptr [rax]
0x0000000000494292 : stc ; push qword ptr [rax] ; mov bl, 0xf9 ; call qword ptr [rax]
0x00000000004942ae : stc ; push qword ptr [rax] ; mov cl, 0xf9 ; push rax ; mov dl, 0xf9 ; call rax
0x000000000049420e : stc ; push qword ptr [rax] ; mov dl, 0xf9 ; push rax ; mov bl, 0xf9 ; call rax
0x0000000000494032 : stc ; push qword ptr [rax] ; pop rcx ; stc ; jmp qword ptr [rax + 0x10fff95a]
0x0000000000494056 : stc ; push qword ptr [rax] ; stc ; jmp qword ptr [rax]
0x0000000000494106 : stc ; push qword ptr [rcx] ; xchg eax, edi ; stc ; call rcx
0x0000000000494142 : stc ; push qword ptr [rsi - 0x6a] ; stc ; call qword ptr [rsi]
0x0000000000494212 : stc ; push rax ; mov bl, 0xf9 ; call rax
0x00000000004941f6 : stc ; push rax ; mov ch, 0xf9 ; call rax
0x000000000049429a : stc ; push rax ; mov dh, 0xf9 ; call rax
0x00000000004942b2 : stc ; push rax ; mov dl, 0xf9 ; call rax
0x0000000000494066 : stc ; push rax ; push 0x69e0fff9 ; stc ; call rax
0x00000000004675fe : stc ; ret 3
0x0000000000494a05 : stc ; stc ; jmp rax
0x0000000000438ab4 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000042c127 : stc ; xlatb ; ret 0xff2d
0x00000000004a4e26 : std ; call qword ptr [rax]
0x00000000004b584a : std ; call qword ptr [rbx]
0x00000000004b52da : std ; call qword ptr [rdx]
0x00000000004ab28a : std ; call rax
0x00000000004b19b2 : std ; call rdx
0x000000000047642a : std ; dec dword ptr [rax + 0x39] ; ret
0x00000000004a4e5e : std ; dec dword ptr [rax + 0x60fffd77] ; ja 0x4a4e6d ; jmp qword ptr [rax]
0x0000000000473d88 : std ; dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000044a37e : std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000469a82 : std ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000424152 : std ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x00000000004826cb : std ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x0000000000481b7e : std ; jbe 0x481b8c ; ret
0x00000000004a4e66 : std ; jmp qword ptr [rax]
0x00000000004a4e2a : std ; jmp qword ptr [rbx]
0x00000000004b5022 : std ; jmp qword ptr [rcx]
0x00000000004b14ba : std ; jmp qword ptr [rdi]
0x00000000004b0bda : std ; jmp qword ptr [rdx]
0x00000000004aa8d6 : std ; jmp rbx
0x00000000004b4952 : std ; jmp rdx
0x00000000004b5056 : std ; jmp rsp
0x00000000004a4e22 : std ; lcall [rax + 0x74] ; std ; call qword ptr [rax]
0x00000000004a4e3a : std ; lcall [rax + 0x74] ; std ; jmp qword ptr [rbx]
0x00000000004a4e36 : std ; lcall [rax + 0x74] ; std ; lcall [rax + 0x74] ; std ; jmp qword ptr [rbx]
0x00000000004aa8de : std ; lcall [rsi - 0x594b0003] ; std ; jmp rbx
0x000000000042f9bb : std ; mov word ptr [rdi - 2], cx ; ret
0x00000000004aa8e2 : std ; push qword ptr [rsi - 0x591c0003] ; std ; jmp rbx
0x000000000044b38e : std ; push rbx ; ret
0x0000000000447013 : std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000004a87ba : std ; retf
0x000000000042b9f1 : std ; xlatb ; ret
0x000000000042b9e9 : std ; xlatb ; ret 0xc085
0x000000000042bf63 : std ; xlatb ; ret 0xe883
0x0000000000473741 : std ; xlatb ; retf 0xc985
0x0000000000473614 : std ; xlatb ; retf 0xfdc5
0x0000000000473674 : std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x0000000000421ce1 : sti ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004117b3 : sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000049521e : sti ; call qword ptr [rax]
0x000000000049582e : sti ; call qword ptr [rbx]
0x000000000049657e : sti ; call qword ptr [rdi]
0x0000000000495f9e : sti ; call rax
0x0000000000495252 : sti ; call rbx
0x0000000000495702 : sti ; call rsp
0x0000000000495fae : sti ; dec dword ptr [rax + 0x6b] ; sti ; jmp qword ptr [rax]
0x0000000000496596 : sti ; dec dword ptr [rax + rsi*2 + 0x73c9fffb] ; sti ; call qword ptr [rax]
0x000000000044919f : sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000049657a : sti ; dec dword ptr [rdi + 0x73] ; sti ; call qword ptr [rdi]
0x0000000000495836 : sti ; dec dword ptr [rsi + rdi - 5] ; call rsp
0x000000000049659a : sti ; dec ecx ; jae 0x49659f ; call qword ptr [rax]
0x00000000004b09d1 : sti ; hlt ; jmp qword ptr [rbx]
0x0000000000496576 : sti ; inc dword ptr [rax + 0x4ffffb75] ; jae 0x496583 ; call qword ptr [rdi]
0x0000000000495826 : sti ; inc esp ; cmp eax, 0x3dc4fffb ; sti ; call qword ptr [rbx]
0x0000000000495f8a : sti ; jmp qword ptr [rax]
0x00000000004b2c72 : sti ; jmp qword ptr [rbx]
0x000000000049571a : sti ; jmp qword ptr [rcx - 0x2b0004c3]
0x0000000000495712 : sti ; jmp qword ptr [rdi]
0x0000000000496546 : sti ; jmp rdx
0x0000000000495832 : sti ; lcall [rax + 0x3e] ; sti ; dec dword ptr [rsi + rdi - 5] ; call rsp
0x000000000049653e : sti ; lcall [rdi + 0x72] ; sti ; ljmp [rdx] ; jb 0x49654b ; jmp rdx
0x0000000000496542 : sti ; ljmp [rdx] ; jb 0x496547 ; jmp rdx
0x000000000042fd98 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000495faa : sti ; push qword ptr [rax + 0x6b] ; sti ; dec dword ptr [rax + 0x6b] ; sti ; jmp qword ptr [rax]
0x0000000000495f9a : sti ; push qword ptr [rcx + rbp*2] ; sti ; call rax
0x0000000000495f96 : sti ; push qword ptr [rcx + rbp*2] ; sti ; push qword ptr [rcx + rbp*2] ; sti ; call rax
0x00000000004a7a0a : sti ; ret
0x0000000000494a49 : sti ; stc ; jmp rax
0x000000000045a647 : sti ; test rax, rax ; je 0x45a655 ; call rax
0x000000000046c76f : stosb byte ptr [rdi], al ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000495079 : stosb byte ptr [rdi], al ; cli ; call rax
0x00000000004a7ee4 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000447d3b : stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000004244d1 : stosd dword ptr [rdi], eax ; and dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000049507d : stosd dword ptr [rdi], eax ; cli ; jmp qword ptr [rax]
0x000000000046873e : stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x000000000041ee03 : stosd dword ptr [rdi], eax ; pop rbx ; ret
0x00000000004a8fec : stosd dword ptr [rdi], eax ; ret
0x000000000047f901 : stosd dword ptr [rdi], eax ; retf 0x23
0x000000000044fe89 : stosd dword ptr [rdi], eax ; retf 0x26
0x00000000004a8eea : stosd dword ptr [rdi], eax ; retf 0xa2fe
0x0000000000494345 : stosd dword ptr [rdi], eax ; stc ; call rax
0x0000000000424781 : stosd dword ptr [rdi], eax ; sub eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000041ee02 : stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004a93d1 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000481e76 : sub al, 0x48 ; add esp, 0x38 ; ret
0x00000000004b0768 : sub al, 0x4f ; add byte ptr [rax], al ; mov ah, 0xcd ; stc ; jmp qword ptr [rdx]
0x0000000000447f72 : sub al, 0x72 ; add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x00000000004afa14 : sub al, 0x83 ; stc ; jmp rbx
0x000000000044c5e0 : sub al, 0x85 ; ror byte ptr [rdi], 0x84 ; retf 0
0x000000000042cf03 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000049460c : sub al, 0xe ; cli ; call rdx
0x0000000000494cbd : sub al, 0xfa ; jmp rax
0x00000000004b0d94 : sub al, 3 ; cli ; jmp qword ptr [rdx]
0x0000000000418880 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004129c5 : sub al, byte ptr [rax] ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000418816 : sub al, byte ptr [rax] ; add dword ptr [rip + 0x2a34f5], 1 ; ret
0x0000000000418785 : sub al, byte ptr [rax] ; ret
0x000000000042457a : sub al, byte ptr [rdx] ; add bh, dh ; ret 0
0x00000000004248c2 : sub al, byte ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004129c4 : sub al, byte ptr gs:[rax] ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000042c2c5 : sub al, ch ; std ; xlatb ; ret
0x0000000000493fb1 : sub bh, cl ; jmp rax
0x0000000000494e89 : sub bh, dl ; call rax
0x0000000000494ec9 : sub bh, dl ; inc eax ; sub edx, edi ; jmp qword ptr [rax]
0x0000000000494e09 : sub bh, dl ; jmp rsp
0x000000000046371b : sub bl, cl ; in eax, 0xdf ; loopne 0x4636b0 ; ret
0x000000000047734c : sub byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000041615c : sub byte ptr [rax + 0x39], cl ; retf
0x000000000047734b : sub byte ptr [rax + 0x39], r9b ; ret 0x870f
0x0000000000483a03 : sub byte ptr [rax + 1], cl ; ret 0x1474
0x00000000004b0464 : sub byte ptr [rax + rax], cl ; call 0x124afe2c
0x00000000004583ab : sub byte ptr [rax - 0x3f], cl ; retf
0x00000000004229b4 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000048c2bc : sub byte ptr [rax - 0x77], cl ; ret
0x000000000046fb04 : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000404a23 : sub byte ptr [rax - 0x7d], cl ; ret
0x000000000040d839 : sub byte ptr [rax - 0x7d], cl ; retf 0x4805
0x000000000040d8a4 : sub byte ptr [rax - 0x7d], cl ; retf 0x4806
0x000000000040d959 : sub byte ptr [rax - 0x7d], cl ; retf 0x480d
0x000000000040d8d6 : sub byte ptr [rax - 0x7d], cl ; retf 0xe903
0x000000000040d88f : sub byte ptr [rax - 0x7d], cl ; retf 0xeb04
0x000000000040d8ee : sub byte ptr [rax - 0x7d], cl ; retf 0xeb07
0x000000000040d98f : sub byte ptr [rax - 0x7d], cl ; retf 0xeb0c
0x000000000048439d : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x4843e5 ; leave ; ret
0x000000000048f112 : sub byte ptr [rbp + 1], cl ; retf
0x0000000000477fde : sub byte ptr [rbp + rcx*4 + 0x15], cl ; pop rsp ; ret 2
0x0000000000448d34 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004881d3 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x00000000004881d2 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x0000000000494344 : sub byte ptr [rbx - 0x532f0007], 0xf9 ; jmp qword ptr [rax]
0x000000000048792e : sub byte ptr [rbx], ah ; add al, ch ; retf 0xb786
0x000000000048f505 : sub byte ptr [rcx + r9*4 + 0x35], r9b ; retf 0x22cc
0x000000000048f506 : sub byte ptr [rcx + rcx*4 + 0x35], cl ; retf 0x22cc
0x0000000000403f4b : sub byte ptr [rcx - 0x75], al ; push rdi ; or al, 0xf ; retf 0xd289
0x0000000000403f7f : sub byte ptr [rcx - 0x75], al ; push rdi ; sbb byte ptr [rdi], cl ; retf 0xd289
0x000000000044c10c : sub byte ptr [rcx], al ; ret
0x00000000004b0164 : sub byte ptr [rcx], cl ; add byte ptr [rax - 0x5b], ch ; stc ; jmp qword ptr [rcx]
0x00000000004a3b18 : sub byte ptr [rdi - 0x507f0004], 0xfc ; jmp qword ptr [rax]
0x00000000004217d6 : sub byte ptr [rdi], cl ; test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000495078 : sub byte ptr [rdx - 0x542f0006], 0xfa ; jmp qword ptr [rax]
0x00000000004246da : sub byte ptr [rdx], al ; add bh, dh ; ret 0
0x000000000042471b : sub byte ptr [rdx], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000482545 : sub byte ptr [rdx], al ; add byte ptr [rdi + rcx + 0x44], cl ; retf 0x8d48
0x00000000004928b8 : sub byte ptr [rsi - 0x51340009], ch ; idiv edi ; retf
0x00000000004afe64 : sub byte ptr [rsi], al ; add al, bl ; xchg eax, edi ; stc ; jmp qword ptr [rcx]
0x00000000004b2e64 : sub byte ptr [rsi], dh ; add byte ptr [rax + 0xb], bh ; cld ; jmp qword ptr [rax]
0x0000000000468166 : sub cl, bpl ; ret 0xffe8
0x000000000040eb6d : sub cl, byte ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000468167 : sub cl, ch ; ret 0xffe8
0x000000000045e214 : sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000496544 : sub dh, byte ptr [rdx - 5] ; jmp rdx
0x00000000004ac209 : sub dh, dh ; jmp qword ptr [rax]
0x00000000004b4608 : sub dl, ch ; cld ; jmp qword ptr [rcx]
0x00000000004801aa : sub dl, dh ; call r11
0x000000000047587e : sub dword ptr [rax + 0x101], edi ; syscall
0x00000000004a7d8d : sub dword ptr [rax + 0x1e], eax ; cli ; test bh, dl ; retf 0xdf7f
0x00000000004ae1d1 : sub dword ptr [rax], eax ; add ah, cl ; sal esi, cl ; call qword ptr [rax]
0x00000000004ae13d : sub dword ptr [rax], eax ; add al, dl ; retf
0x000000000041f89a : sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042459c : sub dword ptr [rax], eax ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000041f8fa : sub dword ptr [rax], eax ; ret
0x00000000004a8a22 : sub dword ptr [rbx + 0x5c347ebb], edx ; sbb ebp, ebx ; retf
0x000000000042dfe7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42dffd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e137 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e14d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e287 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e29d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e3d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e3ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e527 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e53d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e677 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e68d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e7c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e7dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e917 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e92d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ea67 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ea7d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ebb7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ebcd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ed07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ed1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ee57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ee6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042efa7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42efbd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f0f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f10d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f247 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f25d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004309b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4309cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430b07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430b1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430c57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430c6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430da7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430dbd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430ef7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430f0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431047 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43105d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431197 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4311ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004312e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4312fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431437 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43144d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431587 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43159d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004316d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4316ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431827 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43183d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431977 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43198d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431ac7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x431add ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431c17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x431c2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042df43 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042df3f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042dfed : sub dword ptr [rdi], esp ; jmp r9
0x00000000004245bb : sub dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000042a4c7 : sub dword ptr [rip - 0x76b30000], ecx ; retf
0x000000000042d6e6 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042a381 : sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x00000000004a92da : sub dword ptr [rsi], 0x76 ; retf
0x000000000040db9d : sub dword ptr [rsp + 0xf0], eax ; syscall
0x000000000042c057 : sub eax, -1 ; jne 0x42c068 ; vzeroupper ; ret
0x0000000000422f2a : sub eax, 0x10 ; ret
0x0000000000494cb1 : sub eax, 0x2d60fffa ; cli ; jmp rax
0x00000000004610ef : sub eax, 0x4800255a ; mov eax, dword ptr [rax + rdi*8] ; jmp rax
0x0000000000469614 : sub eax, 0x83000000 ; ret
0x00000000004669e5 : sub eax, 0x83000000 ; ret 0x8b01
0x00000000004a6a26 : sub eax, 0xea4ca798 ; retf
0x0000000000466e75 : sub eax, 0xf410004 ; xchg eax, esp ; ret
0x0000000000424622 : sub eax, 0xf480002 ; ret 0x66c3
0x0000000000458844 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000446ae4 : sub eax, 1 ; ret
0x0000000000481bc6 : sub eax, dword ptr [0] ; ret
0x000000000040385d : sub eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000400b0a : sub eax, dword ptr [rax] ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x00000000004035cc : sub eax, dword ptr [rax] ; call 4
0x00000000004004cc : sub eax, dword ptr [rax] ; nop ; ret
0x0000000000401bbf : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045e1b6 : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x47 ; or al, 0x83 ; ret
0x000000000041913e : sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000044880a : sub eax, dword ptr [rdx + rcx*4] ; je 0x4487f6 ; ret
0x0000000000424782 : sub eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000418453 : sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000446c4d : sub eax, eax ; cmp eax, ecx ; jle 0x446c91 ; movsxd rax, ecx ; ret
0x0000000000481014 : sub eax, eax ; ret
0x000000000047876f : sub eax, ebp ; ret
0x000000000042c0a3 : sub eax, ecx ; je 0x42c0b9 ; sbb eax, eax ; or eax, 1 ; ret
0x0000000000417b29 : sub eax, ecx ; lea eax, [r8 - 1] ; ret
0x0000000000484690 : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000425d4c : sub eax, ecx ; ret
0x0000000000440bf9 : sub eax, edi ; ret
0x000000000047463e : sub eax, edi ; shr rax, 2 ; ret
0x0000000000484773 : sub eax, edx ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x000000000041847b : sub eax, edx ; ret
0x0000000000474a30 : sub eax, edx ; shr rax, 2 ; vzeroupper ; ret
0x000000000042c06c : sub eax, edx ; vzeroupper ; ret
0x0000000000446cad : sub eax, esi ; ret
0x0000000000481013 : sub eax, r8d ; ret
0x00000000004a7c7e : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x0000000000413e70 : sub ebp, eax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046484f : sub ebp, ecx ; retf
0x0000000000412a46 : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004a6715 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000044cf78 : sub ecx, dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x8902
0x0000000000473bc4 : sub ecx, dword ptr [rcx + rcx*4 - 0x40] ; vzeroupper ; ret
0x0000000000493fad : sub ecx, edi ; inc eax ; sub bh, cl ; jmp rax
0x0000000000494d41 : sub edi, edx ; jmp qword ptr [rdx]
0x0000000000494ec1 : sub edi, edx ; jmp rax
0x0000000000494ebd : sub edi, edx ; push qword ptr [rax + 0x2b] ; cli ; jmp rax
0x0000000000494e05 : sub edi, edx ; push qword ptr [rdx + rbp - 6] ; jmp rsp
0x0000000000497429 : sub edi, esp ; jmp rax
0x0000000000497425 : sub edi, esp ; push qword ptr [rax] ; sub edi, esp ; jmp rax
0x0000000000418480 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000418475 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000042b4f4 : sub edx, eax ; jbe 0x42b537 ; add rax, rdi ; ret
0x000000000042b504 : sub edx, eax ; jbe 0x42b539 ; lea rax, [rdi + rax + 0x10] ; ret
0x000000000042b514 : sub edx, eax ; jbe 0x42b539 ; lea rax, [rdi + rax + 0x20] ; ret
0x000000000042b524 : sub edx, eax ; jbe 0x42b539 ; lea rax, [rdi + rax + 0x30] ; ret
0x0000000000494e51 : sub edx, edi ; call qword ptr [rax]
0x0000000000494ecd : sub edx, edi ; jmp qword ptr [rax]
0x0000000000494e4d : sub edx, edi ; ljmp [rdx + 0x29] ; cli ; call qword ptr [rax]
0x0000000000423921 : sub edx, esi ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000041341f : sub edx, esi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x0000000000415814 : sub edx, esi ; sar rdx, 2 ; call 0x411a78
0x00000000004ac2c9 : sub esi, esi ; call qword ptr [rax]
0x00000000004ac2dd : sub esi, esi ; call qword ptr [rdx]
0x00000000004ac2f1 : sub esi, esi ; jmp qword ptr [rax]
0x000000000048a8d3 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046fbc6 : sub esp, 0x80 ; call 0x44be78
0x000000000040fbd1 : sub esp, 0x80 ; call 0x44bea8
0x0000000000492591 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004754d3 : sub esp, 8 ; syscall
0x00000000004238f1 : sub esp, dword ptr [rdi] ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000417b28 : sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x0000000000422f29 : sub rax, 0x10 ; ret
0x0000000000446ae3 : sub rax, 1 ; ret
0x0000000000481bc5 : sub rax, qword ptr [0] ; ret
0x000000000041913d : sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000481bc4 : sub rax, qword ptr fs:[0] ; ret
0x0000000000485382 : sub rax, r8 ; ret
0x0000000000440bf8 : sub rax, rdi ; ret
0x000000000047463d : sub rax, rdi ; shr rax, 2 ; ret
0x0000000000446bb3 : sub rax, rdx ; ret
0x0000000000440c4f : sub rax, rdx ; vzeroupper ; ret
0x0000000000446cac : sub rax, rsi ; ret
0x000000000042b4f3 : sub rdx, rax ; jbe 0x42b538 ; add rax, rdi ; ret
0x0000000000415813 : sub rdx, rsi ; sar rdx, 2 ; call 0x411a79
0x000000000048a8d2 : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046fbc5 : sub rsp, 0x80 ; call 0x44be79
0x000000000040fbd0 : sub rsp, 0x80 ; call 0x44bea9
0x0000000000492590 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004754d2 : sub rsp, 8 ; syscall
0x000000000040125c : syscall
0x0000000000417394 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004755d5 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000048b063 : test al, 0 ; add byte ptr [rax], al ; ret
0x000000000046c4a9 : test al, 0x24 ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x000000000041f009 : test al, 0x29 ; add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000044ad4e : test al, 0x45 ; mov esp, esi ; call r15
0x00000000004a6fd7 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000004abd88 : test al, 0x99 ; cmc ; call rax
0x00000000004a69be : test al, 0xa7 ; mov bx, 0xf32d ; retf
0x000000000044ff8d : test al, 0xe8 ; pop rbp ; retf
0x00000000004abce4 : test al, 4 ; add byte ptr [rax], al ; js 0x4abc84 ; cmc ; call qword ptr [rdx]
0x000000000040d7b1 : test al, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x000000000047e895 : test al, al ; cmove rcx, rax ; mov rax, rcx ; ret
0x000000000042600a : test al, al ; jne 0x425ff8 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000004485c0 : test al, al ; jne 0x4484f9 ; jmp 0x44859e
0x0000000000478043 : test al, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004a98e4 : test bh, ch ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000472c7c : test bh, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004a7d91 : test bh, dl ; retf 0xdf7f
0x0000000000419a58 : test bl, al ; add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x000000000041007f : test byte ptr [rax + rax - 0x76b80000], ch ; ret
0x0000000000458f31 : test byte ptr [rax - 0x76b80000], ch ; ret 0x2948
0x000000000046ac79 : test byte ptr [rax - 0x7c000019], ah ; ret
0x0000000000400bda : test byte ptr [rax], 0 ; mov eax, 0 ; leave ; ret
0x000000000040ea8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000419e1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000048598a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x0000000000444e2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x000000000044426a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004187aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000412d2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00000000004118ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000041876a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004176aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000444c6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004b3cf5 : test byte ptr [rax], al ; add byte ptr [rdx - 0x38], dl ; hlt ; jmp qword ptr [rcx]
0x000000000044f0a2 : test byte ptr [rbp + rcx*4 + 0x3c], cl ; ret
0x000000000046ab7c : test byte ptr [rbp - 0x7c000018], bl ; ret
0x0000000000472b0f : test byte ptr [rcx + 0xf], 0x45 ; retf 0x148
0x000000000048c16b : test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x000000000048dd02 : test byte ptr [rcx + rcx*4 - 0x19], 0x41 ; call rdi
0x00000000004af9c0 : test byte ptr [rcx], al ; add byte ptr [rbx + rax*4], cl ; stc ; call qword ptr [rdx]
0x0000000000429dd6 : test byte ptr [rcx], bh ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042a5b6 : test byte ptr [rcx], bh ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004290e6 : test byte ptr [rcx], ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004239d3 : test byte ptr [rcx], ch ; add bh, dh ; ret 0
0x000000000042a4c6 : test byte ptr [rcx], ch ; or eax, 0x894d0000 ; retf
0x0000000000428e06 : test byte ptr [rcx], cl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000456494 : test byte ptr [rdi + 0x48000001], bl ; mov edx, eax ; jmp 0x456457
0x000000000044b7e4 : test byte ptr [rdi - 0x7d000000], bl ; ret
0x000000000046ff99 : test byte ptr [rdi], 0x84 ; popfq ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000424156 : test byte ptr [rdi], 0x84 ; ret
0x000000000044a32f : test byte ptr [rdi], 0x94 ; ret 0xc221
0x0000000000449e46 : test byte ptr [rdi], 0x94 ; ret 0xca21
0x0000000000473004 : test byte ptr [rdi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000047301c : test byte ptr [rdi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000456899 : test byte ptr [rdx + 0x48fffffd], bl ; mov edx, eax ; jmp 0x45685c
0x000000000041fe9e : test byte ptr [rdx], ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000472c64 : test byte ptr [rdx], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000042199e : test byte ptr [rdx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000421e9e : test byte ptr [rdx], dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000469704 : test byte ptr [rip - 0x7c000003], dl ; ret
0x000000000045f114 : test byte ptr [rip - 0x7c000011], al ; ret
0x000000000047385d : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x0000000000411c04 : test byte ptr [rsi + rdi*8 - 0x76b30001], dh ; retf 0x8948
0x0000000000453291 : test byte ptr [rsi - 0x8fffffc], cl ; ret 0
0x0000000000440add : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000004b0f5c : test byte ptr [rsi], dl ; cli ; call rcx
0x000000000042b0f6 : test cl, bh ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004afa51 : test cl, bh ; call qword ptr [rbx]
0x00000000004afa29 : test cl, bh ; call qword ptr [rdx]
0x0000000000429816 : test cl, bh ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042af16 : test cl, bl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000489f5a : test cl, bl ; add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x0000000000429536 : test cl, bl ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004275c6 : test cl, ch ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004278c6 : test cl, ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004287c6 : test cl, ch ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042b006 : test cl, ch ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004284c6 : test cl, ch ; add eax, 0x894d0000 ; retf
0x00000000004281c6 : test cl, ch ; or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000427ec6 : test cl, ch ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044c721 : test cl, ch ; retf 0xfffe
0x0000000000429f46 : test cl, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042ae26 : test cl, cl ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044676f : test cl, cl ; jne 0x446764 ; ret
0x000000000044681f : test cl, cl ; jne 0x446814 ; ret
0x0000000000446adf : test cl, cl ; jne 0x446ad8 ; sub rax, 1 ; ret
0x0000000000444cb4 : test dl, 0x40 ; jne 0x444c79 ; lea rax, [rdi + 7] ; ret
0x0000000000444ce2 : test dl, 4 ; jne 0x444c79 ; lea rax, [rdi + 3] ; ret
0x000000000040db06 : test dl, dl ; jne 0x40dae8 ; ret
0x000000000044698f : test dl, dl ; jne 0x446988 ; lea rax, [rcx - 1] ; ret
0x0000000000480f87 : test dl, dl ; jne 0x480f63 ; movsx eax, cl ; neg eax ; ret
0x0000000000491c53 : test dword ptr [rax + 0xf000008], ecx ; xchg eax, ebx ; ret 0x3d83
0x0000000000472c7d : test dword ptr [rax], 0x83480000 ; ret 0xe901
0x0000000000468be6 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004021d1 : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x000000000044d631 : test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x000000000045eb89 : test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x00000000004692f6 : test dword ptr [rax], esi ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xac20
0x00000000004021d0 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x000000000044d630 : test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000042b478 : test dword ptr [rbx + 0x31000000], esp ; rol bl, 0x83 ; ret 0x6620
0x0000000000449b59 : test dword ptr [rbx + 0x48000000], ebp ; add esp, 0x78 ; ret
0x000000000042d1e7 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d636 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042c2b8 : test dword ptr [rbx - 0x3a000003], esp ; std ; xlatb ; ret 0xe883
0x000000000040fdfa : test dword ptr [rbx], 0x83d8300 ; retf 0x2a
0x000000000041fcd8 : test dword ptr [rbx], edx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000047578b : test dword ptr [rcx + 0x48000000], edi ; add esp, 0x78 ; ret
0x000000000042d1bd : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d0cd : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042cfdd : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041d0d2 : test dword ptr [rcx + rcx*4 + 0x54], 0x93e80824 ; ret 0xffff
0x00000000004111c8 : test dword ptr [rcx - 0x16000002], esi ; retf 0xfffe
0x000000000048e0e4 : test dword ptr [rdi + rdi*8 - 1], esi ; dec dword ptr [rax - 0x7d] ; ret
0x000000000041d06c : test dword ptr [rdi], eax ; add eax, 0x39480000 ; ret 0xf275
0x000000000042cf02 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000473643 : test dword ptr [rip - 0x76ffffff], edi ; ret 0x8948
0x00000000004497c6 : test dword ptr [rsi + 0x48000000], ebp ; add esp, 0x68 ; ret
0x00000000004464f2 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000045fa51 : test dword ptr [rsi - 0x16000007], esi ; ret
0x00000000004929b0 : test dword ptr [rsi - 0x50990009], ebp ; idiv edi ; retf
0x000000000040fc1d : test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x000000000042372b : test dword ptr [rsi], 0x358d4800 ; retf
0x00000000004191b7 : test dword ptr [rsi], eax ; sub al, byte ptr [rax] ; ret
0x000000000042d408 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00000000004a7e6d : test eax, 0x35eea9cd ; outsb dx, byte ptr [rsi] ; retf
0x00000000004a8cc0 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000433086 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000463773 : test eax, 0x8900020e ; ret
0x000000000041021e : test eax, 0x8948002a ; ret 0x8948
0x000000000046c848 : test eax, 0x8b480024 ; add al, 0xf8 ; jmp rax
0x0000000000495075 : test eax, 0xaa80fffa ; cli ; call rax
0x000000000044bd5b : test eax, eax ; cmove eax, edx ; ret
0x000000000040040c : test eax, eax ; je 0x400416 ; call rax
0x0000000000422ea1 : test eax, eax ; je 0x422eb8 ; lea rax, [rdx - 0x10] ; ret
0x000000000042b1c8 : test eax, eax ; je 0x42b1d4 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000044a568 : test eax, eax ; je 0x44a573 ; ret
0x000000000044d4c6 : test eax, eax ; je 0x44d4d5 ; ret
0x0000000000459244 : test eax, eax ; je 0x45924e ; call rax
0x000000000045a649 : test eax, eax ; je 0x45a653 ; call rax
0x0000000000485140 : test eax, eax ; je 0x485158 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048f5a8 : test eax, eax ; je 0x48f5b5 ; ret
0x000000000048f6b8 : test eax, eax ; je 0x48f6c5 ; ret
0x0000000000490e51 : test eax, eax ; je 0x490e60 ; call rax
0x000000000041749c : test eax, eax ; jne 0x417495 ; ret
0x0000000000418434 : test eax, eax ; jne 0x41842d ; ret
0x000000000042b4a5 : test eax, eax ; jne 0x42b506 ; xor eax, eax ; ret
0x000000000042b921 : test eax, eax ; jne 0x42b949 ; xor eax, eax ; vzeroupper ; ret
0x0000000000449926 : test eax, eax ; jne 0x449946 ; xor eax, eax ; syscall
0x00000000004499f6 : test eax, eax ; jne 0x449a19 ; mov eax, 1 ; syscall
0x0000000000449b33 : test eax, eax ; jne 0x449ba1 ; mov eax, 0x48 ; syscall
0x0000000000449cc6 : test eax, eax ; jne 0x449ce9 ; mov eax, 3 ; syscall
0x000000000044be90 : test eax, eax ; jne 0x44be8b ; pop rdx ; pop r10 ; ret
0x0000000000475765 : test eax, eax ; jne 0x4757cf ; mov eax, 0x101 ; syscall
0x000000000048f5e7 : test eax, eax ; jne 0x48f5f5 ; ret
0x000000000048f602 : test eax, eax ; jne 0x48f615 ; ret
0x000000000048f832 : test eax, eax ; jne 0x48f845 ; ret
0x000000000047bd50 : test eax, eax ; js 0x47bd67 ; pop rbx ; ret
0x000000000047e06d : test eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000469ce5 : test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x000000000047063a : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000044a809 : test ebp, ebp ; jne 0x44a828 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b374 : test ebp, ebp ; jne 0x44b3a0 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b3a7 : test ebp, ebp ; jne 0x44b3f9 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b3d3 : test ebp, ebp ; jne 0x44b459 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000490321 : test ebp, ebp ; jne 0x490310 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490edb : test ebp, ebp ; jne 0x490ec8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b5849 : test ebp, edi ; call qword ptr [rbx]
0x000000000041afd8 : test ebx, ebp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000042b3e0 : test ebx, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000421ce0 : test ebx, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004217d8 : test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000454a29 : test ecx, eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000478098 : test ecx, eax ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000444ca2 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000474719 : test ecx, ecx ; jne 0x4746d8 ; mov rax, rdx ; ret
0x00000000004afaa1 : test ecx, edi ; call qword ptr [rbx]
0x000000000044a82f : test edi, edi ; jne 0x44a879 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044a857 : test edi, edi ; jne 0x44a899 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b45f : test edi, edi ; jne 0x44b4ca ; mov rdi, qword ptr [r13] ; call r12
0x000000000044b48f : test edi, edi ; jne 0x44b4fb ; mov rdi, qword ptr [r13] ; call r12
0x000000000047f4ca : test edi, edi ; jne 0x47f4a5 ; ret
0x000000000048483d : test edi, edi ; mov byte ptr [rsi], al ; jne 0x484831 ; mov rax, rsi ; ret
0x0000000000440a92 : test edx, edx ; je 0x440aa1 ; bsf eax, edx ; ret
0x0000000000440b3b : test edx, edx ; je 0x440b58 ; bsf rax, rdx ; ret
0x000000000044c79a : test edx, edx ; je 0x44c7b1 ; lea rdi, [rcx + rax + 0x20] ; jmp rdx
0x00000000004738ca : test edx, edx ; je 0x4738f8 ; bsf rax, rdx ; ret
0x00000000004148e3 : test edx, edx ; jne 0x4148f5 ; ret
0x000000000041657f : test edx, edx ; jne 0x416575 ; ret
0x0000000000470abf : test edx, edx ; jne 0x470ab5 ; ret
0x000000000047447a : test edx, edx ; jne 0x474475 ; ret
0x0000000000444c95 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000459148 : test esi, esi ; je 0x459152 ; call rsi
0x00000000004737c1 : test esi, esi ; jne 0x4737d0 ; xor rax, rax ; ret
0x0000000000474481 : test esi, esi ; jne 0x474490 ; xor rax, rax ; ret
0x000000000045e914 : test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x0000000000444caf : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000042b1c7 : test r8d, r8d ; je 0x42b1d5 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000474718 : test r9d, r9d ; jne 0x4746d9 ; mov rax, rdx ; ret
0x000000000040040b : test rax, rax ; je 0x400417 ; call rax
0x0000000000422ea0 : test rax, rax ; je 0x422eb9 ; lea rax, [rdx - 0x10] ; ret
0x000000000044a567 : test rax, rax ; je 0x44a574 ; ret
0x0000000000459243 : test rax, rax ; je 0x45924f ; call rax
0x000000000045a648 : test rax, rax ; je 0x45a654 ; call rax
0x000000000048513f : test rax, rax ; je 0x485159 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490e50 : test rax, rax ; je 0x490e61 ; call rax
0x000000000041749b : test rax, rax ; jne 0x417496 ; ret
0x0000000000418433 : test rax, rax ; jne 0x41842e ; ret
0x000000000044a808 : test rbp, rbp ; jne 0x44a829 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b373 : test rbp, rbp ; jne 0x44b3a1 ; mov rdi, qword ptr [rbx] ; call r12
0x0000000000490320 : test rbp, rbp ; jne 0x490311 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490eda : test rbp, rbp ; jne 0x490ec9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047f4c9 : test rdi, rdi ; jne 0x47f4a6 ; ret
0x0000000000440b3a : test rdx, rdx ; je 0x440b59 ; bsf rax, rdx ; ret
0x00000000004738c9 : test rdx, rdx ; je 0x4738f9 ; bsf rax, rdx ; ret
0x00000000004148e2 : test rdx, rdx ; jne 0x4148f6 ; ret
0x000000000041657e : test rdx, rdx ; jne 0x416576 ; ret
0x0000000000470abe : test rdx, rdx ; jne 0x470ab6 ; ret
0x0000000000459147 : test rsi, rsi ; je 0x459153 ; call rsi
0x00000000004737c0 : test rsi, rsi ; jne 0x4737d1 ; xor rax, rax ; ret
0x0000000000474480 : test rsi, rsi ; jne 0x474491 ; xor rax, rax ; ret
0x0000000000415633 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000043864a : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000004473fc : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000446dc5 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000447f81 : vmovdqu xmmword ptr [rdi], xmm0 ; vzeroupper ; ret
0x0000000000446dc9 : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000447588 : vmovdqu ymmword ptr [r11], ymm4 ; vzeroupper ; ret
0x000000000044762f : vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x0000000000438636 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000043861d : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x0000000000447365 : vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x0000000000447eeb : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0 ; vzeroupper ; ret
0x00000000004474d3 : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3 ; vzeroupper ; ret
0x00000000004474a5 : vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7 ; vzeroupper ; ret
0x0000000000447e72 : vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x0000000000446dbb : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000446dbf : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000447a42 : vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x0000000000447b08 : vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x0000000000447ffd : vmovdqu64 zmmword ptr [rdi], zmm0 ; vzeroupper ; ret
0x0000000000446dd4 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000446dd8 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000438953 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00000000004387ec : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00000000004385ee : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x00000000004385b2 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x0000000000438ab5 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000446f78 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x0000000000446edb : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x0000000000446d7a : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000043ec91 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x000000000042b7c8 : vzeroupper ; ret
0x000000000042b9a0 : vzeroupper ; xor eax, eax ; ret
0x000000000041056c : wait ; ret 0x2a
0x0000000000494315 : wait ; stc ; call qword ptr [rax]
0x000000000049418c : wait ; xchg eax, edi ; stc ; jmp qword ptr [rax]
0x000000000042a813 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043df3f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a903 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a723 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004601c2 : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000043fb8c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000043f3ac : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000043f79c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043efbc : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047d8cc : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000448202 : xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x000000000042b16b : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000043ea9f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e27f : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000043da5f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000044f108 : xchg byte ptr [rax - 0x75], cl ; ret
0x000000000042acc3 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000043f15b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004634c6 : xchg byte ptr [rbp + 2], dh ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; retf 6
0x000000000043e5bf : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a453 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000043dd9f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043d57f : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000043e75f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000042aea3 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a633 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000480f6a : xchg byte ptr [rcx + 0x38000000], dh ; retf 0x850f
0x000000000048ca6c : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x000000000042b083 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004a7b95 : xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x000000000043f64c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ee6c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ff7c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004945c0 : xchg byte ptr [rdi], cl ; cli ; call qword ptr [rsi]
0x00000000004542e3 : xchg byte ptr [rdi], dl ; or eax, 0xea810000 ; ret 0
0x000000000042af93 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043d8bf : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004601d9 : xchg byte ptr [rdx], ah ; and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000042a8d5 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a9c5 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a7e5 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041add5 : xchg byte ptr [rsi - 0x9fffffd], dh ; ret 0xf08
0x000000000043d9f5 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e6f5 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e215 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f54d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004553d5 : xchg byte ptr [rsi], bl ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000043fe7d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000494ab8 : xchg byte ptr [rsi], dh ; cli ; call qword ptr [rsi]
0x000000000042a543 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x00000000004826ca : xchg ch, bh ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x00000000004372bf : xchg cl, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x0000000000491046 : xchg cl, dh ; clc ; push rbx ; ret
0x000000000043ea35 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043dd35 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000043d855 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e555 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000043f69d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043eebd : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a6f5 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a515 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a605 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a425 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000046f1d9 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x000000000046e52f : xchg dword ptr [rax - 0x77000000], ecx ; ret 0x349
0x0000000000402cf3 : xchg dword ptr [rax - 0x7d], ecx ; ret
0x000000000047b766 : xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x00000000004a7b98 : xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x000000000044f1f4 : xchg dword ptr [rbp + rcx*4 + 0x34], ecx ; ret
0x00000000004a771f : xchg dword ptr [rbp - 0x5b], ebx ; xchg eax, ebp ; retf 0x33e6
0x00000000004620cc : xchg dword ptr [rbx - 0x76fffff4], ebp ; ret 0x349
0x00000000004030be : xchg dword ptr [rbx], ebp ; add al, ch ; retf 0x47b
0x00000000004a698c : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000048b11a : xchg dword ptr [rcx + rax - 8], ecx ; jmp rax
0x000000000044be8e : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x44be8d ; pop rdx ; pop r10 ; ret
0x000000000046f3c4 : xchg dword ptr [rdi], esi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x0000000000469a3a : xchg dword ptr [rdx + rbx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000462c44 : xchg dword ptr [rdx - 0x77000000], edx ; ret 0x349
0x0000000000478db0 : xchg dword ptr [rip - 0x76fffffd], edx ; ret 0xe8c0
0x000000000046c6ec : xchg dword ptr [rsi - 0x76ffffe1], ecx ; ret 0x349
0x00000000004191a5 : xchg dword ptr [rsi], eax ; sub al, byte ptr [rax] ; ret
0x00000000004a6b2b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004634e7 : xchg eax, ebp ; add al, 4 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x0000000000400ba7 : xchg eax, ebp ; cli ; add byte ptr [rax], al ; nop ; pop rbp ; ret
0x00000000004a6e69 : xchg eax, ebp ; jge 0x4a6e4c ; push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000004586ab : xchg eax, ebp ; push 0x4cffffff ; mov edi, esi ; call rdx
0x000000000044fe1f : xchg eax, ebp ; ret
0x000000000048ad00 : xchg eax, ebp ; ret 0x145
0x0000000000477dea : xchg eax, ebp ; ret 0x2041
0x0000000000477eaa : xchg eax, ebp ; ret 0x2044
0x0000000000449f3c : xchg eax, ebp ; ret 0x3948
0x000000000041de2b : xchg eax, ebp ; ret 0x8348
0x0000000000479a70 : xchg eax, ebp ; ret 0xc283
0x0000000000420fed : xchg eax, ebp ; ret 0xd020
0x000000000040dee5 : xchg eax, ebp ; ret 0xd021
0x00000000004642ca : xchg eax, ebp ; ret 0xd120
0x000000000040ff42 : xchg eax, ebp ; ret 0xdaf7
0x000000000044d501 : xchg eax, ebp ; ret 0xe1eb
0x000000000048c87a : xchg eax, ebp ; ret 0xf45
0x00000000004a7722 : xchg eax, ebp ; retf 0x33e6
0x00000000004188fd : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x00000000004941c1 : xchg eax, ebp ; stc ; inc dword ptr [rax - 0x6a] ; stc ; jmp rax
0x000000000049413d : xchg eax, ebp ; stc ; jmp rsi
0x0000000000494141 : xchg eax, ebp ; stc ; push qword ptr [rsi - 0x6a] ; stc ; call qword ptr [rsi]
0x00000000004a8b7c : xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x0000000000411322 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000046baa7 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000042c350 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x00000000004abce9 : xchg eax, ebx ; cmc ; call qword ptr [rdx]
0x00000000004abcfd : xchg eax, ebx ; cmc ; call rsp
0x00000000004a950c : xchg eax, ebx ; in al, dx ; retf 0xae32
0x000000000044412c : xchg eax, ebx ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000042daf2 : xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004a8a23 : xchg eax, ebx ; mov ebx, 0x1b5c347e ; jmp 0x4a89fd
0x000000000045b288 : xchg eax, ebx ; ret 0x3948
0x000000000041211c : xchg eax, ebx ; ret 0x3949
0x0000000000420740 : xchg eax, ebx ; ret 0x3d83
0x0000000000471365 : xchg eax, ebx ; ret 0x840
0x000000000045bd6d : xchg eax, ebx ; ret 0x854d
0x000000000041d0d9 : xchg eax, ebx ; ret 0xffff
0x00000000004940ed : xchg eax, ebx ; stc ; call rcx
0x00000000004b2165 : xchg eax, ebx ; sti ; jmp qword ptr [rax]
0x00000000004826c9 : xchg eax, ebx ; xchg ch, bh ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x000000000043eb41 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000047fd1b : xchg eax, ecx ; retf
0x000000000044e27b : xchg eax, ecx ; retf 0
0x000000000043d26f : xchg eax, ecx ; sub eax, edx ; ret
0x0000000000494104 : xchg eax, ecx ; xchg eax, esi ; stc ; push qword ptr [rcx] ; xchg eax, edi ; stc ; call rcx
0x0000000000410042 : xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000048c26c : xchg eax, edi ; add al, 0 ; add byte ptr [rax - 0x7bf0df06], al ; retf 4
0x0000000000414954 : xchg eax, edi ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000004b4f81 : xchg eax, edi ; add byte ptr [rax], al ; sbb al, 0x35 ; std ; jmp qword ptr [rdx]
0x000000000040d281 : xchg eax, edi ; add rdx, rdi ; jmp rdx
0x0000000000495035 : xchg eax, edi ; cli ; inc dword ptr [rax - 0x67] ; cli ; call qword ptr [rax]
0x00000000004a6ed5 : xchg eax, edi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4a6ea3 ; mov ecx, 0x5b92ac50 ; retf
0x0000000000424875 : xchg eax, edi ; out 0, al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000041ef6b : xchg eax, edi ; ret 0x394c
0x000000000041f451 : xchg eax, edi ; ret 0xfae9
0x000000000041fa39 : xchg eax, edi ; ret 0xfbe9
0x00000000004a783d : xchg eax, edi ; retf 0xe152
0x000000000044babb : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x0000000000494109 : xchg eax, edi ; stc ; call rcx
0x000000000049410d : xchg eax, edi ; stc ; dec dword ptr [rsi - 0x68] ; stc ; jmp rsi
0x0000000000494311 : xchg eax, edi ; stc ; inc eax ; wait ; stc ; call qword ptr [rax]
0x000000000049418d : xchg eax, edi ; stc ; jmp qword ptr [rax]
0x00000000004afe69 : xchg eax, edi ; stc ; jmp qword ptr [rcx]
0x00000000004941cd : xchg eax, edi ; stc ; lcall [rax - 0x4e] ; stc ; jmp qword ptr [rax]
0x00000000004a8b7b : xchg eax, edi ; xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004a6fd8 : xchg eax, edi ; xchg eax, esp ; ret
0x000000000047b05f : xchg eax, edx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x00000000004a889d : xchg eax, edx ; jae 0x4a887a ; push rsi ; pop rdx ; je 0x4a886f ; ret 0xacfc
0x0000000000494828 : xchg eax, edx ; or dl, bh ; call qword ptr [rdx]
0x0000000000494820 : xchg eax, edx ; or edx, edi ; call qword ptr [rdx]
0x00000000004a6edc : xchg eax, edx ; pop rbx ; retf
0x0000000000482cf6 : xchg eax, edx ; ret 0x2948
0x00000000004829ce : xchg eax, edx ; ret 0x294c
0x0000000000405c18 : xchg eax, edx ; ret 0x8548
0x00000000004831d5 : xchg eax, edx ; ret 0x8949
0x000000000044babe : xchg eax, edx ; ret 0xd029
0x00000000004a698f : xchg eax, edx ; ret 0xf869
0x0000000000446c9d : xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000004940e5 : xchg eax, edx ; stc ; call rcx
0x000000000042b1cc : xchg eax, edx ; sub eax, edx ; ret
0x00000000004945a4 : xchg eax, esi ; adc bh, dl ; jmp qword ptr [rsi]
0x000000000042c650 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000434883 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004560f1 : xchg eax, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000448294 : xchg eax, esi ; add rax, rsi ; jmp rax
0x00000000004197d2 : xchg eax, esi ; and eax, 0x2a ; add byte ptr [rax], al ; ret
0x00000000004af609 : xchg eax, esi ; clc ; call qword ptr [rax]
0x00000000004af61d : xchg eax, esi ; clc ; jmp qword ptr [rsi]
0x0000000000494a9c : xchg eax, esi ; cmp edx, edi ; jmp qword ptr [rsi]
0x00000000004a8c88 : xchg eax, esi ; jnp 0x4a8cd7 ; retf 0x99e0
0x000000000042c70d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042c66b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000448ef1 : xchg eax, esi ; ret 0xc085
0x00000000004a922c : xchg eax, esi ; ret 0xcd11
0x0000000000448f4f : xchg eax, esi ; ret 0xd284
0x000000000042c6bc : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000494145 : xchg eax, esi ; stc ; call qword ptr [rsi]
0x00000000004941c5 : xchg eax, esi ; stc ; jmp rax
0x0000000000494105 : xchg eax, esi ; stc ; push qword ptr [rcx] ; xchg eax, edi ; stc ; call rcx
0x0000000000482544 : xchg eax, esi ; sub byte ptr [rdx], al ; add byte ptr [rdi + rcx + 0x44], cl ; retf 0x8d48
0x000000000046c8c7 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x00000000004b17d9 : xchg eax, esp ; cli ; call qword ptr [rcx]
0x00000000004b17c1 : xchg eax, esp ; cli ; call qword ptr [rdi]
0x00000000004a943f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a93d0 ; ret 0x48f
0x0000000000466722 : xchg eax, esp ; ret
0x0000000000450ebb : xchg eax, esp ; ret 0x1f0f
0x000000000044a00b : xchg eax, esp ; ret 0x2044
0x000000000048111c : xchg eax, esp ; ret 0x3d
0x000000000041ca9e : xchg eax, esp ; ret 0x3de9
0x000000000046da7f : xchg eax, esp ; ret 0x7f3c
0x0000000000484d81 : xchg eax, esp ; ret 0x950f
0x0000000000402c44 : xchg eax, esp ; ret 0xb60f
0x0000000000446ca0 : xchg eax, esp ; ret 0xc085
0x000000000044a331 : xchg eax, esp ; ret 0xc221
0x0000000000476905 : xchg eax, esp ; ret 0xc283
0x0000000000449e48 : xchg eax, esp ; ret 0xca21
0x0000000000401223 : xchg eax, esp ; ret 0xd284
0x000000000044f946 : xchg eax, esp ; ret 0xd5e9
0x000000000041075d : xchg eax, esp ; ret 0xdaf7
0x000000000048c81b : xchg eax, esp ; ret 0xf45
0x00000000004008bd : xchg eax, esp ; rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x0000000000422eea : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x00000000004941b5 : xchg eax, esp ; stc ; call qword ptr [rax + 0x20fff994]
0x00000000004941b9 : xchg eax, esp ; stc ; jmp qword ptr [rax]
0x00000000004940f5 : xchg eax, esp ; stc ; jmp rcx
0x00000000004ae1d0 : xchg eax, esp ; sub dword ptr [rax], eax ; add ah, cl ; sal esi, cl ; call qword ptr [rax]
0x00000000004b17ec : xchg eax, esp ; xchg eax, esp ; cli ; call qword ptr [rcx]
0x00000000004a6e63 : xchg eax, esp ; xlatb ; retf 0xa1eb
0x00000000004a4e2d : xchg ebp, edi ; jmp qword ptr [rbx]
0x00000000004a4e21 : xchg ebp, edi ; lcall [rax + 0x74] ; std ; call qword ptr [rax]
0x000000000046cb72 : xchg ecx, esp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000041aea4 : xchg edi, esp ; add al, byte ptr [rax] ; add dh, dh ; ret
0x00000000004a2019 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000042d9b9 : xlatb ; add r9, r11 ; jmp r9
0x0000000000475a0f : xlatb ; ja 0x475a3c ; ret
0x0000000000447003 : xlatb ; jb 0x44700e ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000040d56d : xlatb ; jmp rdi
0x00000000004a7a03 : xlatb ; jo 0x4a7a7f ; mov ebp, 0xfb67d10d ; ret
0x00000000004848c2 : xlatb ; mov byte ptr [rsi], al ; jne 0x4848a8 ; mov rax, rsi ; ret
0x0000000000449111 : xlatb ; mov eax, esi ; syscall
0x0000000000449120 : xlatb ; mov eax, r8d ; syscall
0x00000000004a6e10 : xlatb ; out 0xb3, al ; retf 0xe80
0x000000000042b2f4 : xlatb ; ret
0x00000000004a8ea6 : xlatb ; ret 0x4e27
0x00000000004734c7 : xlatb ; ret 0x94c
0x000000000042b2df : xlatb ; ret 0xc085
0x0000000000425e00 : xlatb ; ret 0xc148
0x000000000042bf64 : xlatb ; ret 0xe883
0x0000000000440ab4 : xlatb ; ret 0xf66
0x000000000042c128 : xlatb ; ret 0xff2d
0x00000000004403ed : xlatb ; retf
0x00000000004a6e64 : xlatb ; retf 0xa1eb
0x00000000004735a4 : xlatb ; retf 0xc148
0x0000000000473742 : xlatb ; retf 0xc985
0x00000000004a7d92 : xlatb ; retf 0xdf7f
0x0000000000424a80 : xlatb ; retf 0xead3
0x0000000000473615 : xlatb ; retf 0xfdc5
0x000000000042b6c1 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000473675 : xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000042b4a3 : xlatb ; rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x000000000042b9e2 : xlatb ; rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000440832 : xlatb ; rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000444c56 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000425ce6 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000425ba6 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000425a66 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000425926 : xlatb ; sal bh, 1 ; ret 0xf000
0x00000000004257e6 : xlatb ; sal bh, 1 ; ret 0xf800
0x00000000004256a6 : xlatb ; sal bh, 1 ; ret 0xfc00
0x0000000000425566 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000425426 : xlatb ; sal bh, 1 ; ret 0xff00
0x00000000004252e6 : xlatb ; sal bh, 1 ; ret 0xff80
0x00000000004251a6 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000425066 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000424f26 : xlatb ; sal bh, 1 ; ret 0xfff0
0x0000000000424de6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x0000000000424ca6 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000424b66 : xlatb ; sal bh, 1 ; ret 0xfffe
0x0000000000444c52 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000473465 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000473476 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000497465 : xor ah, bh ; call rsp
0x0000000000494394 : xor ah, bl ; stc ; call qword ptr [rax]
0x000000000042485a : xor ah, byte ptr [rdi] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004a698a : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000041881b : xor al, 0x2a ; add byte ptr [rcx], al ; ret
0x00000000004b1470 : xor al, 0x5c ; add byte ptr [rax], al ; jae 0x4b1478 ; call qword ptr [rdx]
0x00000000004a8a26 : xor al, 0x5c ; sbb ebp, ebx ; retf
0x0000000000495f9c : xor al, 0x69 ; sti ; call rax
0x0000000000495f98 : xor al, 0x69 ; sti ; push qword ptr [rcx + rbp*2] ; sti ; call rax
0x00000000004af94c : xor al, 0x7a ; stc ; call rsp
0x0000000000459f42 : xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x000000000046f01b : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000048ddb2 : xor al, 0xcb ; mov rsi, qword ptr [r14] ; call r12
0x00000000004a7b6a : xor al, 0xd8 ; ret
0x0000000000459145 : xor al, 0xf0 ; test rsi, rsi ; je 0x459155 ; call rsi
0x0000000000452cbe : xor al, 0xf6 ; ret
0x0000000000494a51 : xor al, 0xfa ; call qword ptr [rax + 0x20fffa3a]
0x0000000000494c89 : xor al, 0xfa ; call qword ptr [rax]
0x0000000000494bcd : xor al, 0xfa ; call rsp
0x0000000000494bc9 : xor al, 0xfa ; ljmp [rsi] ; xor al, 0xfa ; call rsp
0x0000000000476429 : xor al, 0xfd ; dec dword ptr [rax + 0x39] ; ret
0x0000000000494520 : xor al, cl ; stc ; inc dword ptr [rax - 0x2f000637] ; retf 0xfff9
0x000000000047f47c : xor bh, cl ; and eax, dword ptr [rax] ; ret
0x000000000042b52c : xor bl, al ; nop ; xor eax, eax ; ret
0x0000000000495251 : xor bl, bh ; call rbx
0x0000000000460eea : xor bl, byte ptr [rax + 0x25] ; add byte ptr [rax - 0x75], cl ; add al, 0xc7 ; jmp rax
0x000000000042b3fd : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x0000000000411582 : xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x0000000000447de4 : xor byte ptr [r8 - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x000000000045b9e8 : xor byte ptr [rax + 0x39], cl ; ret 0x8d48
0x0000000000440261 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x00000000004406c2 : xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x0000000000411583 : xor byte ptr [rax + 1], cl ; ret 0x8b49
0x00000000004761c4 : xor byte ptr [rax + 1], cl ; retf
0x00000000004b2c6c : xor byte ptr [rax + rax], dh ; push rax ; cld ; sti ; jmp qword ptr [rbx]
0x000000000044ad4a : xor byte ptr [rax - 0x75], cl ; jge 0x44ad00 ; mov r12d, r14d ; call r15
0x0000000000440e1f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000004741ff : xor byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000048ac68 : xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x0000000000471aa2 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x000000000044d2cf : xor byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000402f28 : xor byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000447de5 : xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x00000000004118db : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040e999 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000040e8d3 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000047444c : xor byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000040e9bf : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x00000000004482e3 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b3f9c : xor byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; add byte ptr [rax], al ; add ah, bh ; ret 0xfffc
0x00000000004719da : xor byte ptr [rax], al ; je 0x4719e5 ; ret
0x000000000048e1ce : xor byte ptr [rbp + 0x27], dh ; mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000447255 : xor byte ptr [rbp + 0xf], al ; adc dword ptr [rbx], eax ; ret
0x0000000000444121 : xor byte ptr [rbp + rcx*4 + 0x1d], cl ; syscall
0x0000000000496578 : xor byte ptr [rbp - 5], 0xff ; jae 0x496581 ; call qword ptr [rdi]
0x0000000000494058 : xor byte ptr [rbp - 7], ah ; jmp qword ptr [rax]
0x0000000000466929 : xor byte ptr [rbx + 0x291c2454], cl ; ret 0xe683
0x0000000000414c66 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044f69a : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000046c86e : xor byte ptr [rbx - 0x79f0f608], al ; ret
0x0000000000497428 : xor byte ptr [rbx], ch ; cld ; jmp rax
0x000000000048aa85 : xor byte ptr [rcx + 0x21], cl ; ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x00000000004786c3 : xor byte ptr [rcx + 0x29], cl ; ret
0x0000000000494354 : xor byte ptr [rcx + rdi*8 - 0x6627f01], bl ; call rax
0x00000000004942b0 : xor byte ptr [rcx - 0x4d0f0007], dh ; stc ; call rax
0x0000000000495074 : xor byte ptr [rcx - 0x557f0006], ch ; cli ; call rax
0x0000000000403f5b : xor byte ptr [rcx - 0x75], al ; push rdi ; adc byte ptr [rdi], cl ; retf 0xd289
0x0000000000494034 : xor byte ptr [rcx - 7], bl ; jmp qword ptr [rax + 0x10fff95a]
0x0000000000493fc8 : xor byte ptr [rcx], 0xf9 ; jmp qword ptr [rax]
0x00000000004a6e6e : xor byte ptr [rcx], ah ; retf
0x00000000004118dc : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000412bc7 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000410043 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000049427c : xor byte ptr [rdi - 0x46ef0007], dh ; stc ; jmp rax
0x00000000004940c4 : xor byte ptr [rdi - 0x6fdf0007], cl ; stc ; call qword ptr [rax]
0x0000000000494a70 : xor byte ptr [rdi], 0xfa ; call qword ptr [rax]
0x0000000000470b80 : xor byte ptr [rdi], cl ; ret 0x4389
0x0000000000494210 : xor byte ptr [rdx - 0x4c0f0007], dh ; stc ; call rax
0x0000000000494340 : xor byte ptr [rdx - 0x547f0007], ch ; stc ; call rax
0x00000000004947c4 : xor byte ptr [rip + 0x4a0fffa], al ; cli ; call qword ptr [rax]
0x00000000004b068f : xor byte ptr [rsi + 0x380e4106], al ; add dword ptr [rdi], 3 ; ret 0xa01
0x000000000042c3ff : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047342c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042b3fe : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000004a8b7e : xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004a6e5f : xor byte ptr [rsi], cl ; or eax, 0xcad7947e ; jmp 0x4a6e0f
0x000000000041230d : xor cl, byte ptr [rax - 0x77] ; ret 0x2948
0x000000000047ddc3 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000045b557 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x000000000048d25e : xor cl, byte ptr [rax] ; jne 0x48d283 ; mov rax, qword ptr [rax] ; ret
0x0000000000405c40 : xor cl, ch ; ret
0x000000000045a3a9 : xor dh, dh ; ret 0x4002
0x0000000000494c9d : xor dl, bh ; jmp rax
0x00000000004238ba : xor dl, byte ptr [rbx] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000048017e : xor dl, dh ; jmp r11
0x0000000000480290 : xor dl, dh ; ret
0x0000000000465efd : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0xe7e9
0x00000000004a7e16 : xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x000000000044c29f : xor dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000048d2cd : xor dword ptr [rax], ecx ; jne 0x48d2dc ; mov qword ptr [rax], rdx ; ret
0x000000000041bfb9 : xor dword ptr [rbx - 0x76b7f020], eax ; ret 0x8948
0x0000000000468a73 : xor dword ptr [rdx - 7], edi ; dec dword ptr [rax - 0x39] ; ret 0xffa0
0x0000000000423942 : xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000424601 : xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000046b87e : xor eax, 0x24b59d ; jmp rax
0x0000000000494a81 : xor eax, 0x3550fffa ; cli ; jmp rax
0x0000000000447813 : xor eax, 0x48000002 ; mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044a85a : xor eax, 0x7d8b48 ; call r12
0x000000000046580a : xor eax, 0x89ffffe6 ; ret
0x000000000040e996 : xor eax, dword ptr [0x30] ; call rax
0x0000000000415880 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000416664 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045ca99 : xor eax, eax ; add rsp, 8 ; ret
0x0000000000475a0b : xor eax, eax ; cmp rdi, rdx ; ja 0x475a40 ; ret
0x000000000044be67 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x0000000000414810 : xor eax, eax ; jmp 0x4147da
0x0000000000475df8 : xor eax, eax ; leave ; ret
0x0000000000473212 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000405ddf : xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000004148bb : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040eca5 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042398c : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000412f32 : xor eax, eax ; pop rbx ; ret
0x000000000040ebed : xor eax, eax ; ret
0x000000000042600e : xor eax, eax ; sub eax, ecx ; ret
0x000000000044992a : xor eax, eax ; syscall
0x00000000004148e0 : xor eax, eax ; test rdx, rdx ; jne 0x4148f8 ; ret
0x000000000042b8ec : xor eax, eax ; vzeroupper ; ret
0x0000000000458d08 : xor ebp, ecx ; ret 0xfffd
0x00000000004859fd : xor ebx, ebx ; lea rdx, [rax + 8] ; lea rcx, [rdx + rcx*8] ; jmp 0x485a1d
0x0000000000458a06 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046479c : xor ecx, dword ptr [rdi] ; mov esi, 0xc08349c8 ; add dword ptr [rcx], edi ; retf
0x00000000004579d9 : xor ecx, ecx ; call r15
0x0000000000474009 : xor ecx, ecx ; xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000493fc9 : xor ecx, edi ; jmp qword ptr [rax]
0x000000000044c27c : xor edi, dword ptr [rax] ; ret 0x2f75
0x0000000000403fbb : xor edi, edi ; call 0x4201d4
0x0000000000401258 : xor edi, edi ; mov eax, edx ; syscall
0x000000000044a686 : xor edi, edi ; or r10d, 0x40 ; mov eax, ecx ; syscall
0x000000000041ac81 : xor edi, edi ; pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x000000000044a49c : xor edi, edi ; syscall
0x0000000000494bd1 : xor edi, edx ; inc dword ptr [rdx + rdi - 6] ; call rsp
0x000000000040e8d0 : xor edx, dword ptr [0x30] ; call rdx
0x000000000044e923 : xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x000000000044d4fc : xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44d4ec
0x0000000000417233 : xor edx, edx ; jmp rax
0x000000000047400b : xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x000000000041f53c : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000046159c : xor esi, esi ; jmp rax
0x0000000000446e06 : xor esp, dword ptr [rdi] ; add byte ptr [rax + 0x39], cl ; retf 0x870f
0x00000000004579d8 : xor r9d, r9d ; call r15
0x000000000040e995 : xor rax, qword ptr [0x30] ; call rax
0x000000000040e994 : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000444c70 : xor rax, rax ; ret
0x000000000040e8cf : xor rdx, qword ptr [0x30] ; call rdx
0x000000000040e8ce : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 10547
